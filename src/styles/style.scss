@import "./variables";

/* classes */
.round { border-radius: $radius; }
.circle { border-radius: 999px !important; }
.bg-smoke { background-color: whitesmoke; }
.class-can-be-extended { border: 2px solid $true !important; border-radius: $radius; }
.class-cannot-be-extended { border: 2px solid $false !important; border-radius: $radius; }
.ui-icon, .ui-widget-content .ui-icon { background-image: none !important; }
.dock-content .dock-tabpane { background-color: whitesmoke; }
.btn-white { background-color: whitesmoke; color: #2e2f34; }
.input { width: 50%; outline: none; font-size: 0.9rem; appearance: none; height: min-content;
  border-radius: $radius; border: 1px solid $border-color; }
.input:focus { border: 1px dashed $border-color; }
.autosize-input { flex-grow: 1; flex-basis: 10px; }
.hidden-input { border: 1px solid transparent; background-color: transparent; }
.hidden-input:focus { border: 1px dashed $border-color; }

.autosize-input{
  // opacity:0;
  background: transparent;
  color: transparent;
  caret-color: black;
  position: absolute;
  width: 100%;
  border-color: transparent !important;
  &:focus{ border: 1px solid transparent; }

}
.autosize-input-container {
  position: relative;
  &:focus-within{
    border: 1px dashed #0000005c;
    //padding: 0 2.5px; /* input have some margin and border that cannot be erased? always 5?*/
    margin: 0 5px; /* input have some margin and border that cannot be erased? always 5?*/
  }
  &::after {
    content: attr(data-value) ' ';
    color: inherit;
    // visibility: hidden;

  }
  .autosize-input,
  &::after{ // input and fake element must have same sizes
    // todo: maybe they can be css variables injected with jsx, so can change ::after css rendering from jsx
    font-size: 0.9rem !important;
    border-width: 1px !important;
    padding: 1px 2px !important;
    margin: 0 4px !important;
    border-radius: 0.2em !important;
  }
}

.input[type='color'] { width: min-content; padding: 0.6em; cursor: pointer; }
.input[type='checkbox'] { background-image: url("../static/svg/false.svg");
  background-repeat: no-repeat; background-size: cover;
  width: min-content; cursor: pointer; padding: 0.8em; background-color: transparent; border-radius: 999px }
.input[type='checkbox']:checked { background-image: url("../static/svg/true.svg");
  background-repeat: no-repeat; background-size: cover; }
.select { width: 50%; outline: none; font-size: 0.9rem; height: min-content; border-radius: $radius;
  border: 1px solid $border-color; }
.select:focus { border: 1px dashed $border-color; }
.btn { padding: 0 0.1em; line-height: normal; border-radius: $radius; }



/* tags */
hr { margin: 0 0 !important; }
label { height: min-content; font-size: 0.9rem; font-weight: lighter; }
