{"version":3,"sources":["common/libraries/prj_json2xml.js","common/libraries/prj_xml2json.js","graph/graphElement/sharedTypes/sharedTypes.tsx","joiner/classes.ts","joiner/proxy.ts","common/DV.tsx","common/Geom.ts","common/Uhtml.ts","common/UX.tsx","model/classes/D.ts","model/classes/L.ts","model/dataStructure/GraphDataElements.tsx","view/viewPoint/viewpoint.ts","redux/store.tsx","redux/reducer/reducer.ts","redux/createStore.ts","debugtools/debug.tsx","ocl/ocl.tsx","joiner/ExecuteOnRead.ts","joiner/index.ts","components/rightbar/oclEditor/OclEditor.tsx","../node_modules/jstransform/node_modules/source-map/lib/source-map sync","redux/selectors/selectors.ts","api/data.ts","model/logicWrapper/LModelElement.tsx","redux/action/action.ts","joiner/types.ts","components/forEndUser/OCLEditor.tsx","components/forEndUser/Input.tsx","components/forEndUser/TextArea.tsx","components/forEndUser/Select.tsx","components/forEndUser/Image.tsx","components/forEndUser/Edge.tsx","components/logger/DataOutput.tsx","components/logger/loggerComponent.tsx","components/forEndUser/Overlap.tsx","components/colorScheme/colorScheme.tsx","graph/defaultNode/DefaultNode.tsx","graph/graph/graphContainer.tsx","graph/edge/Edge.tsx","graph/edge/Edges.tsx","graph/damedges/damedge.tsx","joiner/components.tsx","common/U.ts","components/rightbar/structureEditor/editors/MqttEditor.tsx","components/rightbar/structureEditor/editors/Value.tsx","components/rightbar/structureEditor/Structure.tsx","components/rightbar/structureEditor/StructureEditor.tsx","components/rightbar/treeEditor/treeEditor.tsx","components/rightbar/viewsEditor/Views.tsx","components/rightbar/jsxEditor/JsxEditor.tsx","components/rightbar/viewsEditor/View.tsx","components/rightbar/viewsEditor/ViewsEditor.tsx","components/rightbar/styleEditor/StyleEditor.tsx","components/rightbar/edgeEditor/EdgeEditor.tsx","components/rightbar/viewpointsEditor/ViewpointsEditor.tsx","components/rightbar/console/Console.tsx","components/toolbar/ToolBar.tsx","graph/edge/PendingEdge.tsx","memorec/api.ts","components/toolbar/ContextMenu.tsx","graph/edges/ReferenceEdge.tsx","graph/edges/ExtendEdge.tsx","graph/edges/ValueEdge.tsx","graph/edges/EdgesManager.tsx","components/abstract/tabs/MetamodelTab.tsx","components/abstract/tabs/ModelTab.tsx","components/abstract/tabs/InfoTab.tsx","components/abstract/tabs/TestTab.tsx","components/abstract/tabs/IotTab.tsx","components/abstract/DockLayout.tsx","static/img/splash.png","components/topbar/SaveManager.ts","components/topbar/undoredocomponent.tsx","components/room/RoomManager.tsx","components/topbar/Topbar.tsx","popup/Cleaning.tsx","App.tsx","components/room/RoomAttacher.tsx","components/room/RoomChecker.tsx","router/Router.tsx","index.tsx","firebase/environment.ts","firebase/index.ts","graph/vertex/Vertex.tsx","view/viewElement/view.tsx","graph/graphElement/graphElement.tsx"],"names":["json2xml","o","tab","toXml","v","name","ind","xml","Array","i","n","length","hasChild","m","charAt","substr","toString","replace","X","toObj","nodeType","attributes","nodeName","nodeValue","firstChild","textChild","cdataChild","hasElementChild","nextSibling","match","removeWhite","escape","innerXml","documentElement","alert","toJson","json","join","arr","node","s","innerHTML","asXml","c","txt","e","normalize","nxt","removeChild","xml2json","arguments","undefined","xml2jsonobj","GraphElementStatee","_classCallCheck","classes","GraphElementReduxStateProps","view","views","data","dataid","preRenderFunc","evalContext","template","graph","lastSelected","isEdgePending","GraphElementDispatchProps","GraphElementOwnProps","children","style","key","parentnodeid","nodeid","graphid","parentViewId","htmlindex","initialSize","EdgeStateProps","_GraphElementReduxSta","_inherits","_super2","_createSuper","_this2","_len2","args","_key2","call","apply","concat","viewpoint","start","end","windoww","window","console","warn","AbstractMixedClass","_createClass","value","logic","structure","singleton","CoordinateMode","EdgeHead","RuntimeAccessibleClass","_AbstractMixedClass","_super","_this","className","currentlevel","this","ret","push","__proto__","log","superclass","subclass","hasOwnProperty","subclasses","indexOf","_extends","prototype","contains","joinOriginal","separator","_len","separators","_key","isArray","_toConsumableArray","extendPrototypes","_i","_Object$values","Object","values","annotatedClasses","gclass","statickey","annotated","keys","baseObjInLookup","path","canThrow","state","map","d","DPointerTargetable","wrap","__isProxy","store","getState","idlookup","Log","exx","error","Error","Proxy","TargetableProxyHandler","MapProxyHandler","thiss","dclassname","superClassName","_RuntimeAccessibleCla","returnIfEqual","get","thisclass","extendTree","first","model","Leaf","constructor","Node","Abstract","Instantiable","instanceConstructor","RuntimeAccessible","staticClassName","classnameFixedConstructorDoNotRenameWithoutSearchStrings","_obj$initBase","obj","_construct","classNameFromAnnotation","initBase","canFireActions","Constructors","_class2","t","father","persist","fatherType","callbacks","SetFieldAction","new","PointedBy","fromID","id","BEGIN","simpledatacallback","setTimeout","_step","_iterator","_createForOfIteratorHelper","done","cb","err","f","ex","ddebug","pendingCreation","END","CreateElementAction","_DState","DState","currentUser","DUser","users","models","_DParameter","DParameter","_x","defaultValue","_DClass","DClass","_DValue","DValue","targets","fromPointer","alreadyParsed","_step2","nextTargets","_iterator2","target","_step3","_iterator3","extendedBy","ext","pointer","_step4","_iterator4","instances","instance","_DReference","DReference","_DAttribute","DAttribute","_DObject","DObject","_x2","instanceoff","LPointerTargetable","instanceof","_DValue2","_x3","_x4","_x5","val","isMirage","edges","_DAnnotation","DAnnotation","_x6","_x7","source","details","_step5","_iterator5","det","makeID","tid","Date","getTime","maxID","_DNamedElement","DNamedElement","_x8","substring","_DTypedElement","DTypedElement","_x9","type","_DPackage","DPackage","_x10","_x11","uri","prefix","_DModel","DModel","_x12","_x13","isMetamodel","packages","SetRootFieldAction","_DOperation","DOperation","exceptions","implementation","_step6","_iterator6","exc","_DClass2","isInterface","isAbstract","isPrimitive","partial","partialdefaultname","interface","abstract","_DEnumLiteral","DEnumLiteral","_x14","literal","_DEnumerator","DEnumerator","_DVoidEdge","DVoidEdge","_x15","_x16","_x17","_x18","longestLabel","labels","startid","LGraphElement","getNodeId","endid","midnodes","midPoints","allNodes","allSegments","toFixed","_DGraphElement","DGraphElement","_x19","_x20","_x21","_x22","parentNodeID","parentgraphID","subElements","favoriteNode","zIndex","_DViewElement","DViewElement","_x23","_x24","_x25","jsxString","defaultVSize","usageDeclarations","constants","appliableToClasses","priority","subViews","oclApplyCondition","explicitApplicationPriority","GraphSize","size","storeSize","lazySizeUpdate","constraints","draggable","resizable","display","width","height","adaptWidth","adaptHeight","edgeStartOffset","GraphPoint","edgeEndOffset","edgeStartOffset_isPercentage","edgeEndOffset_isPercentage","edgeStartStopAtBoundaries","edgeEndStopAtBoundaries","bendingMode","EdgeBendingMode","Bezier_quadratic","edgeGapMode","EdgeGapMode","gap","edgePointCoordMode","relativeOffset","edgeHeadSize","edgeTailSize","_DGraph","DGraph","zoom","graphSize","_subMaps","_DVoidVertex","DVoidVertex","_x26","defaultVSizeObj","defaultVSizeFunc","func","_this3","isResized","lvertex","fromD","x","y","w","h","index","updateEPindex","_defaultVSizeObj","le","de","__raw","subelements","U","arrayRemoveAll","splice","current","modelid","DGraph_maxID","_class","_class4","_RuntimeAccessibleCla2","_DPointerTargetable","fakearg_detectwrongcalls","_this4","_storePath","pointedBy","startingPrefix","metaptr","lfather","from","childrenNames","increaseEndingNumber","newname","condition","ptr","p","_ptr","a","l","defaultComponent","_class3","set_extend","Pointers","_class5","filter","pointerval","includes","PendingPointedByPaths","_class7","to","solveAttempts","stackTrace","action","getStackTrace","canBeResolved","resolve","all","Action","parse","create","maxSolveAttempts","oldState","pendingPointedBy","pb","followPath","attemptResolve","_class6","_class9","lastIndexOf","split","field","modifier","oldValue","casee","oldtarget","actionpath","_objectSpread","newtargetptr","newtarget","saveForLater","list","_class8","_class11","_DPointerTargetable2","_super3","_this5","_len3","_key3","__serialize","inspect","clonedCounter","__random","__info_of__id","str","msg","wrongAccessMessage","context","cannotSet","DeleteElementAction","_this6","_delete","extends","wrapAll","_class10","WPointerTargetable","_class12","_DPointerTargetable3","_super4","_this7","_len4","_key4","_class14","_class15","_DPointerTargetable4","_DUser","_super5","_this8","_len5","_key5","cursorPositionX","cursorPositionY","__isUser","now","token","LUser","_class17","_LPointerTargetable","_super6","_this9","_len6","_key6","cursorPosition","_class16","MyError","_class18","_Error","_super7","message","_console","_this10","proto","_assertThisInitialized","_len7","otherMsg","_key7","actualProto","setPrototypeOf","_wrapNativeSuper","JsType","printableTypeName","check","isExclusiveType","getTypes","_len8","acceptables","_key8","Uarr","arrayIntersection","stopIfTypeIsNot","_step7","_iterator7","isFunction","getFunctionSignatureFromComments","isLambda","isNonLambdaFunction","fallbackReturn","isObject","isLambdaFunction","isSymbol","isBoolean","isNumber","isBigint","isString","isNull","isUndefined","isDate","isAnyOfTypes","object","function","array","invalidSuperClassError","scname","exDevv","MixinFakeConstructor","isMixinFakeConstructor","MixOnlyFuncs","c1","c2","c1noconstructor","c2noconstructor","Mixin","c1name","c2name","init_constructor","date","lambdaFunction","nonLambdaFunction","symbol","null","boolean","number","bigint","string","buildWrapSignature","maxdepth","onlyUnique","self","dep","depsorted","byLevels","loopdetecter","namelist","olddep","flatMap","_step8","_iterator8","table","lparam","epsorted","_step9","_iterator9","D","L","signature","LogicContext","proxyObject","write","MapLogicContext","_LogicContext","proxy","subMaps","MyProxyHandler","g","proxyitself","getOwnPropertyNames","GetPathHandler","_MyProxyHandler","strbuilder","calls","targetObj","propKey","__asCalls","__asArray","Symbol","toPrimitive","__nested","_MyProxyHandler2","_RuntimeAccessibleCla3","_RuntimeAccessibleCla4","additionalPath","lg","exDev","propKeyStr","asString","_index","isConcatenable","subKey","get0","canThrowErrors","String","JSON","stringify","Math","random","typeName","$$typeof","getterMethod","_defaultGetter","lchildren","lc","concatenationTentative","concatenableHandler","getType","mapWrap","_defaultSetter","defaultSetter","proxyItself","set","arrayMergeInPlace","k","_TargetableProxyHandl","subMapKeys","submapkeys","getPath","ShortAttribETypes","DV","DefaultView","package","class","feature","enum","void","operation","operationm1","defaultPackage","publicmsg","debughiddenmsg","visibleMessage","replaceAll","debuginfo","error_string","head","inner","headstr","styleTranslateRotate","attrs","hoverAttrs","extend","reference","aggregation","composition","modename","tail","dashing","valuecolormap","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","EDate","EString","EChar","valuecolormap_str","_jsx","minHeight","_jsxs","background","color","IPoint","letters","other","clone","tentativeEnd","skipSqrt","d_pow2","pow","sqrt","p2","newInstance","p1","duplicate","p0","add","subtract","pt","scalar","isNaN","firstPt","secondPt","tolleranza","rectangle","Size","fromPoints","tolleranzaX","tolleranzaY","distanceFromLine","top","bot","abs","startVertexSize","debug","tl","tr","bl","br","R","T","B","min","markg","pt2","_IPoint$getM","getM","toRadians","directionVector","atan2","RadToDegree","_IPoint","dontmixwithPoint","Point","pageX","pageY","_IPoint2","dontmixwithGPoint","ISize","makePoint","xPercent","yPercent","minSize","maxSize","startx","starty","endx","endy","max","intersection","size2","sizes","isOverlapping","_ISize","dontMixWithGraphSize","element0","element","document","body","tmp","$element","$","tagName","sizeofvar","createElement","append","isOrphan","parentNode","ancestors","ancestorArray","displayStyles","_e$style","_ancestors$i","_ancestors$i$style","getComputedStyle","offset","left","getBoundingClientRect","_ancestors$_i$style","removeProperty","clear","minX","maxX","minY","$sizeofvar","_ISize2","dontMixWithSize","Geom","closestPoint","pt0","targetPt","gridAlign","m0","q0","q","getQ","Number","POSITIVE_INFINITY","allowT","allowB","allowL","allowR","intersectionT","intersectionB","intersectionL","intersectionR","isNumberBetween","lineToSegmentIntersection","prevPt","closestIntersection0","vertexGSize","NEGATIVE_INFINITY","closestmix","closest","segStart","segEnd","mode","closestmix2","sub","vicinanzaT","vicinanzaB","vicinanzaL","vicinanzaR","closestX","farthestX","floorX","floor","ceilX","ceil","closestY","farthestY","floorY","ceilY","is","DegreeToRad","TanToDegree","isPositiveZero","isNegativeZero","atan","radians","PI","degree","shape","tolerance","GeomTolerance","isOnHorizontalEdges","isOnVerticalEdges","isOnLeftEdge","isOnRightEdge","isOnTopEdge","isOnBottomEdge","top_closest","closestPointToSegment","bot_closest","left_closest","right_closest","top_distance","distanceFromPoint","bot_distance","left_distance","right_distance","min_distance","Infinity","x_intersect","y_intersect","maxY","mse","pmse","m2","q2","intersect","lineToLineIntersection","retIfParallel","retIfCoincident","startLine","endIfSegment","_class13","UX","fn","depthIndices","innermap","child","i1","React","isValidElement","props","cloneElement","recursiveMap","i2","ii","Children","i3","parentComponent","gvidmap_useless","indices","_WrappedComponent","_parentComponent$prop","_parentComponent$prop2","_parentComponent$prop3","_re$props$data","_re$props$initialSize","_re$props$startingSiz","_WrappedComponent2","re","ReactNodeAsElement","WrappedComponent","Components","Input","Select","TextArea","injectProps2","GraphElementComponent","DefaultNodeComponent","EdgeComponent","VertexComponent","injectProps","idbasename","_re$props$initialSize2","EdgePoint","startingSize","edgeProps","edgestart_id","edgeend_id","mycomponents","_deleteWithAlarm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lItem","MySwal","_context","prev","next","withReactContent","Swal","fire","title","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","sent","delete","stop","_info","_callee2","text","_context2","DLog","LLog","isSelected","graphID","nodeID","b","allSubNodes","z","__info_of_z__","__info_of_zIndex__","html","position","htmlSize","htmlPosition","component","vertex","__info__of__vertex","__info__of__favoriteNode","startPoint","endPoint","__info_of__startPoint","__info_of__endPoint","__info_of__graph","innerGraph","__info_of__innnerGraph","outerGraph","__info_of__outerGraphGraph","__info_of__graphAncestors","graphAncestors","outerSize","__info_of__outerSize","innerSize","__info_of__innerSize","__info_of__size","get_innerGraph","isPointer","_defaultCollectionGetter","get_view","ee","lcurrent","dcurrent","DVertex","DGraphVertex","_dcurrent","get_size","set_size","get_w","set_w","get_h","set_h","get_component","canTriggerSet","get_innerSize","r","get_innerSize_impl","_component$props","nosize","get_outerGraph","coord","get_htmlSize","DEdgePoint","def","getSize","decodePosCoords","actualSize","of","updateSize","translateSize","encodePosCoords","get_html","set_zIndex","fromArr","isDeepStrictEqual","pointers","equals","arrdiff","arrayDifference","removed","oldsubelementid","subelement","added","newsubelementid","modelElementId","dataset","tocheck","checked","newtocheck","subnode","get_startEndPoint","isStart","isPercentage","_node","DGraph_makeID","dmp","out","$allnodes","matchedids","matchedidmap","objectFromArrayValues","allnodesarr","filternode","_d$dataset","_d$dataset2","$matched","$notMatched","LGraph","_LGraphElement","__info_of__translateSize","get_zoom","elem","targetid","_DGraphElement2","LVoidVertex","_LGraphElement2","__isDEdgePoint","LEdgePoint","_LVoidVertex","_super8","__isLEdgePoint","edge","__info_of__edge","set_father","sp0","ep0","absolute","sp","ep","relativePercent","relativeOffsetStart","relativeOffsetEnd","useStart","useEnd","offsetsp","offsetep","divide","_get","_getPrototypeOf","_DGraphElement3","_super9","_len9","_key9","__isDVertex","LVertex","_class20","_LVoidVertex2","_super10","_this11","_len10","_key10","__isLVertex","_class19","_class21","_class22","_DGraphElement4","_super11","_this12","_len11","_key11","__isDGraph","__isDGraphVertex","LG","_LGraph","_super12","LV","_LVertex","_super13","LGraphVertex","_class24","_MixOnlyFuncs","_super14","_this13","_len12","_key12","__isLGraph","__isLGraphVertex","_class23","SvgLetter","_class26","_DGraphElement5","_super15","_this14","_len13","_key13","__isDVoidEdge","DEdge","_class25","EdgeSegment","_class27","mid","svgLetter","gapMode","prevSegment","bezier","dpart","rad","radLabels","isLongest","label","Bezier_quadratic_mirrored","addBezierPoint","Bezier_cubic_mirrored","Bezier_cubic","Line","Elliptical_arc","Bezier_QT","Bezier_CS","prevedgemakerbezier","mirroredBezier","invertLastBezierPt","mToRad","finalpart","average","center","autoFill","lineFill","arcFill","vector","EdgeFillSegment","_EdgeSegment","_super16","LVoidEdge","_class30","_LGraphElement3","_super17","_this15","_len14","_key14","__isLVoidEdge","___info_of__allNodes","segments","segments_inner","segments_outer","__info_of__segments","__info_of__d","isHead","headSize0","segment0","zoom0","segment","get_segments","get_graph","headPos","secondIntersection","x4headsize","safeDistance","closestIntersection","useBezierPoints","_this16","headSize","headPos_impl","_this17","get_start","get_midnodes","get_end","_this18","impl_addMidPoints","nodes","labelmaker","labelmakerfunc","get_startPoint_Outer","get_endPoint_Outer","get_startPoint_inner","get_endPoint_inner","get_edgeStartEnd_inner","addM","doublingMidPoints","others","outer","getAnchorOffset","ge","rets","rete","base","get_endPoint","get_startPoint","get_points_impl","get_segments_outer","get_segments_impl","get_points","bm","vraw","segmentSize","svgLetterSize","increase","endindex","slice","fillSegments","snapSegmentsToNodeBorders","setLabels","rett","fillers","makeD","longestindex","longest","calcLength","get_label_impl","ci","canCutStart","canCutEnd","grid","curr","doStartCut","doEndCut","extpt","prevpt","get_edgeEnd_outer","get_edgeEnd_inner","_class29","_class32","_super18","_this19","_len15","_key15","__isDEdge","_class31","LEdge","_class34","_LVoidEdge","_super19","_this20","_len16","_key16","__isLEdge","_class33","DExtEdge","_class35","_class36","_DEdge","_super20","_this21","_len17","_key17","__isDExtEdge","LExtEdge","_class38","_LEdge","_super21","_this22","_len18","_key18","__isLExtEdge","_class37","DRefEdge","_class39","_class40","_DEdge2","_super22","_this23","_len19","_key19","__isDRefEdge","LRefEdge","_class42","_LEdge2","_super23","_this24","_len20","_key20","__isLRefEdge","_class41","DViewPoint","callback","LViewPoint","_LViewElement","LViewElement","statehistory","globalcanundostate","undoable","redoable","logs","viewelements","stackViews","graphs","voidvertexs","vertexs","graphvertexs","edgepoints","extEdges","refEdges","classifiers","enumerators","primitiveTypes","enumliterals","references","classs","operations","parameters","returnTypes","user","contextMenu","deleted","objects","_lastSelected","viewpoints","m2models","m1models","room","isCleaning","selected","iot","topics","memorec","_views","modelView","packageView","classView","enumView","enumeratorView","attributeView","referenceView","operationView","literalView","objectView","voidView","edgePointView","edgePointViewSVG","edgeViews","size0","size1","edgePreRenderFunc","makeEdgeView","tailSize","ev","new2","edgeView","svgHeadTail","valueView","query","makeDefaultGraphViews","_i2","primitiveType","dPrimitiveType","toUpperCase","ViewPointState","ModelStore","_meta","LState","ls","modelElement","deepCopyButOnlyFollowingPath","oldStateDoNotModify","prevAction","newVal","_action$path","newRoot","gotChanged","alreadyPastDivergencePoint","pathArray","trim","prevActionPathKey","isArrayAppend","isArrayRemove","endsWith","removedval","remove","oldpointerdestinations","difference","rem","CompositeActionReducer","actionBatch","_actions","actions","getSolveableActions","possibleInconsistencies","derivedActions","LoadAction","preexistingValue","isEqual","statefoldername","toLowerCase","sort","a1","a2","stringCompare","newState","actiontype","subType","SubType","vertexSubElements","updateRedundancies_OBSOLETE","initialState","storeLoaded","reducer","_reducer","ignoredFields","parsedAction","Firebase","addAction","then","times","UndoAction","undo","pop","RedoAction","doreducer","delta","objectDelta","filterundoableactions","isundo","undonestate","undorecursive","deltalevel","statelevel","ca","forceinit","CompositeAction","setSubclasses","dict","tree","TreeModel","childrenPropertyName","safe_parse","jodelInit","fixStatics","dClasses","getAllNames","rc","lClasses","dClassesmap","reduce","acc","lClassesmap","alld","alll","dname","tagless","buildLSingletons","defaultContext","Selectors","getAllClassesDictionary","fakeinit","createStore","Debug","nodeids","Set","allids","components","_s$model","timeoutTasks","largeTimeoutTasks","Company","employee","manager","Persona","age","isUnemployed","OCL","obj0","oclexp","typeused","oclEngine","OclEngine","typeregister","registerTypes","addOclExpression","notEmpty","name0","evaluate","keepIndex","returnType","res","bool","getEvaluatedContexts","getResult","company","Person","Componentss","wComponents","newkey","$$","prjson2xml","_pr_json2xml","prxml2json","_pr_xml2json","JSXT","jsxtt","info","OclEditorConnected","connect","ownProps","viewid","dispatch","readOnly","getDefaultViewsID","Editor","onChange","options","defaultLanguage","OclEditor","webpackEmptyContext","req","code","module","exports","ViewEClassMatch","_state$_lastSelected","metamodel","me","LModelElement","_state$_lastSelected2","m1","dObjects","lObjects","dObject","LObject","dValues","lValues","dValue","LValue","getAllPrimitiveTypes","classList","dModels","LModel","resolvePointers","ptrs","ArrayMerge0","vv","gv","Classe","GClass","allIdByClassName","allDByClassName","allLByClassName","caseSensitive","getAll","classe","getByField","_d$field","dfield","queryJS","eval","IMPLICIT_MATCH","getViewpoint","constructors","getAllClasses","EXACT_MATCH","MISMATCH","ThisClass","gotSubclassMatch","classtarget","ClassTarget","classIsExtending","INHERITANCE_MATCH","classTarget","acceptEquality","v1","datascore","nodescore","v1MatchingEClassScore","matchesMetaClassTarget","v1OclScore","matchesOclCondition","v1SubViewScore","hisnode","selectedViewId","allViews","getAllViewElements","selectedView","parentView","sameViewPointSubViews","sortedPriority","Scored","scoreView","e1","e2","score","isOfSubclass","DModelElement","toObject","forGraph","asPointers","geid","lPackage","lClass","lOperation","classifier","lClassifier","SavePack","vertexpos","LocalStorage","_IStorage","autosave","localStorage","getItem","serialize","modelNumber","modelname","KeyList","lastOpenedModel","lastOpenedView","lastOpenedPosition","setLastOpened","del","IStorage","isOverwrite","deserialize","AccessModifier","EcoreParser","ecorejson","filename","parsedjson","temp","ECoreRoot","ecoreEPackage","pause","parsedElements","parseM2Model","parseM1Model","LinkAllNamesToIDs","fixNamingConflicts","resume","newBatch","fixObjectPointers","tmpparse","tempfix_untilopennewtabisdone","dobjects","lobjects","m1pointermap","ecorePointer","modified","newvalues","idMap","nameMap","replacePrimitiveMap","d_Estring","AttribETypes","shortkey","longkey","ecorename","dobj","_replaceRules","replacekey","valtmp","DfromPtr","_loop","dval","meta","ordinal","_LPointerTargetable$f","_LPointerTargetable$f2","ordinals","getLiteral","ptrkey","_step10","_iterator10","updateSuperClasses","generated","ECoreNamed","namee","pos","getChildren","annotations","getAnnotations","_step11","_iterator11","parseDAnnotation","_step12","_iterator12","parseDPackage","allmodels","_matchpkg$","xmlns","XMLinlineMarker","ns","findns","outerloop","key0","val0","key1","ECoreObject","xmi_version","xmlns_xmi","expected","namespacedclass","mmclass","getClassByNameSpace","_step13","roots_for_this_metaclass","_iterator13","rootjson","parseDObject","metaSuperClass","m2classes","parent","parentType","_meta2","_meta3","getobjectmetaclass","metaname","metafeature","classmeta","parseDValue","jsonvalues","features","_step15","_iterator15","ECoreAnnotation","childs","version","supportedEcoreVersions","read","ECorePackage","nsURI","nsPrefix","_step16","_iterator16","ECoreClass","xsitype","parseDClass","parseDEnum","instanceTypeName","eSuperTypes","eOperations","eStructuralFeatures","instanceClassName","tmps","_step17","functions","_iterator17","parseDOperation","_step18","_iterator18","xsiType","ECoreAttribute","parseDAttribute","parseDReference","ECoreEnum","eLiterals","serializable","_step19","_iterator19","parseDEnumLiteral","literals","EcoreLiteral","lowerBound","lowerbound","upperBound","upperbound","eType","containment","fromBoolString","ECoreReference","getEcoreTypeName","typekey","ordered","ECoreOperation","unique","eexceptions","visibility","_step20","_iterator20","parseDParameter","eAnnotations","isEmptyObject","throwError","mod","pkg","eClassifiers","cla","fun","eParameters","lit","valueIfNotFound","multiReplaceAll","classTypePrefix","ECoreDetail","xmlnsxmi","xmlnsxsi","xmiversion","xmlnsecore","ECoreParameter","xmlns_uri","XMIModel","DAnnotationDetail","__info_of__father","fatherList","__info_of_children__","subNodes","property","containers","loopdetectionobj","generateEcoreJson_impl","loopDetectionObj","cannotCall","includingthis","$class","$subnodes","find","nodehtmlarr","toArray","nodeidarr","dnodes","loopdetection","get_father","fatherFieldName","getFatherFieldToDelete","reduxFieldName","getReduxFieldToDelete","_Selectors$getState$_","fatherField","reduxField","superDelete","_l","nodeElements","nodeId","lNode","get_until_parent","get_children_idlist","logicContext","indexes","_this4$get_class","_this4$get_package","_ref","_this4$get_class2","_this4$get_package2","_this4$get_enum","_this4$get_class3","_this4$get_operation","get_class","addAttribute","get_package","addClass","get_model","addPackage","addReference","addEnumerator","get_enum","addLiteral","addOperation","get_operation","addParameter","get_addException","_context$data","dOperation","dClass","params","exception","_DModelElement","LAnnotation","_LModelElement","__namee","generateEcoreJson","deep","addAnnotation","ldet","we","lchild","LAnnotationDetail","_LModelElement2","LNamedElement","_LModelElement3","namespace","fullname","get_containers","reverse","_autofix_name","many","required","LTypedElement","_LNamedElement","classType","enumType","get_type","isClass","isEnum","typeEcoreString","typeString","t1","t2","ShortAttribSuperTypes","isExtending","DClassifier","_DPointerTargetable5","LClassifier","_LNamedElement2","_DPointerTargetable6","subpackages","dmodel","defaultname","setter","assign","LPackage","_LNamedElement3","enums","allSubPackages","allSubEnums","allSubClasses","classarr","enumarr","isPartial","partialDefaultName","get_addEnumerator","dc","get_enumerators","get_allSubPackages","get_allSubEnumerators","dpackage","oldList","diff","_arr","_arr2","_context$proxyObject$","canBeDeleted","_class28","_DPointerTargetable7","private","LOperation","_LTypedElement","signatureImplementation","par","get_execute","get_signatureImplementation","typedComments","typedcommentpre","typedcommentpost","typeToShortString","_i3","_arr3","superchildren","override","_DPointerTargetable8","getFirstPrimitiveTypes","LParameter","_LTypedElement2","_DPointerTargetable9","_len21","_key21","referencedBy","implements","implementedBy","LClass","_LClassifier","_len22","_key22","__info_of__extends","extendsChain","superclasses","__info_of__superclasses","ownAttributes","ownReferences","ownOperations","ownChildren","inheritedAttributes","inheritedReferences","inheritedOperations","inheritedChildren","allAttributes","allReferences","allOperations","allChildren","LAttribute","LReference","get_ownAttributes","get_ownReferences","get_ownOperations","get_extendsChain","superClass","get_inheritedAttributes","get_inheritedReferences","get_inheritedOperations","get_ownChildren","get_inheritedChildren","featurearr","operationsarr","att","ref","op","toBoolString","_i4","_arr4","_step14","_iterator14","_i5","_arr5","_i6","_arr6","_i7","_arr7","finalVal","_this25","output","reason","allTargetSuperClasses","_canExtend","plusThis","visited","queue","_queue","SetMerge","j","sc","_loop2","superchild","_canOverride","_canPolymorph","_mark","_ret2","_ret","orEqual","get_superclasses","force","newextends","newextendedBy","filteredPointedBy","DDataType","_DPointerTargetable10","_this26","_len23","_key23","LDataType","_class43","_LClassifier2","_this27","_len24","_key24","DStructuralFeature","_class45","_DPointerTargetable11","_this28","_len25","_key25","changeable","volatile","transient","unsettable","derived","_class44","LStructuralFeature","_class46","_class47","_LTypedElement3","_super24","_this29","_len26","_key26","_step21","_iterator21","_class49","_DPointerTargetable12","_super25","_this30","_len27","_key27","defaultValueLiteral","container","resolveProxies","opposite","_class48","_class50","_class51","_LStructuralFeature","_super26","_this31","_len28","_key28","_this32","dclass","set_type","has_opposite","oppositename","obsolete_attribute","_class53","_DPointerTargetable13","_super27","_this33","_len29","_key29","isID","_class52","_class54","_class55","_LStructuralFeature2","_super28","_this34","_len30","_key30","_context$proxyObject$2","_class56","_class57","_DPointerTargetable14","_super29","_this35","_len31","_key31","LEnumLiteral","_class58","_class59","_LNamedElement4","_super30","_this36","_len32","_key32","impl_generateEcoreJsonM1","get_value","set_value","sameOrdinalLit","_class60","_class61","_DPointerTargetable15","_super31","_this37","_len33","_key33","LEnumerator","_class62","_class63","_LDataType","_super32","_this38","_len34","_key34","_step22","_iterator22","_i8","_arr8","dliterals","currentOrdinal","_step23","_iterator23","dString","DModelM1","_class64","_super33","_this39","_len35","_key35","roots","LModelM1","_class66","_LNamedElement5","_super34","_this40","_len36","_key36","_class69","_DNamedElement2","_super35","_this41","_len37","_key37","dmodels","dmodelnames","_class68","EdgeStarter","_class70","sn","en","_this$startSize","_this$startVertexSize","otherPossibleEnds","startNode","endNode","startVertex","endVertex","startSize","endSize","endVertexSize","otherEnds","overlaps","vertexOverlaps","ends","_class73","_LNamedElement6","_super36","_this42","_len38","_key38","allSubAnnotations","allSubObjects","suggestedEdges","__info_of__suggestedEdges","_step24","packageArr","_iterator24","_step25","_iterator25","ecoreRootName","get_suggestedEdgesM2","get_suggestedEdgesM1","get_classes","alreadyAdded","SkipExtendNodeHidden","rootCall","_step26","_iterator26","eid","secondTierExtends","es","_step27","dependencies","src","pkgdependencies","_iterator27","srcnode","_step28","_iterator28","epnode","packageDependencies","pd","todo","_step29","_iterator29","_i10","_arr9","_step30","_iterator30","_i11","_arr10","get_objects","isRoot","_step31","_iterator31","_this43","pkguri","classname","get_getPackageByUri","_class72","DFactory_useless_","_class75","_DPointerTargetable16","_super37","_this44","_len39","_key39","ePackage","_class74","LFactory_useless_","_class77","_LModelElement4","_super38","_this45","_len40","_key40","_class76","EJavaObject","_class78","DMap","_class80","_Object","_super39","_this46","__isDMap","_class79","LMap","_class82","_LPointerTargetable2","_super40","_this47","_len41","_key41","__isLMap","_class81","_class84","_DPointerTargetable17","_super41","_this48","_len42","_key42","_class83","_class86","_LNamedElement7","_super42","_this49","_len43","_key43","allchildren","truechildren","deepSubObjects","subObjects","referenceFeatures","attributeFeatures","shapelessFeatures","conformchildren","_c$instanceof","_c$instanceof2","_step32","bymetaparent","_iterator32","vmeta","vmetaid","flat","get_uri","_context$proxyObject$3","_step33","_iterator33","getPathArr","ref_features","get_referenceFeatures","shapeless_features","get_shapelessFeatures","alreadyparsed","get_subObjects","_step34","_iterator34","includeshapeless","_value$instanceof","matchedFeature","asEcoreRoot","_step35","_iterator35","_removeConformity","_forceConformity","lmeta","_step36","refs","idmap","_iterator36","_step37","_iterator37","_step38","_iterator38","addValue","_step39","_iterator39","get_children","_step40","_iterator40","lValue","dFather","_this50","lastvisited","get_fatherList","_class85","_class88","_DModelElement2","_super43","_this51","_len44","_key44","topic","_class87","_class90","_LModelElement5","_super44","_this52","_len45","_key45","conformsTo","get_fromlfeature","iof","namedPointers","ecorePointers","shapeless","keepempties","withmetainfo","get_values","_type","fitSize","maxlimit","dmeta","typestr","numbermax","numbermin","round","rawValue","hidden","mapperfunc","numbercasting","_v$constructor","NaN","getFirstNumber","_ref2","_ref2$__raw","_ref2$__raw$values","forEach","struct","filterfunc","_l$father","_i12","_arr11","_i13","_arr12","_ref3","_ref3$__raw","_ref3$__raw$values","lval","limit","keepemptyquotes","_this53","valuestring_impl","havestrings","havechars","_i14","_arr13","vall","valstr","info0","skipSettingUndefined","oldVal","oldTarget","isContainment","isPtr","_this54","_val","_val2","success","lvale","lvalo","oldContainer","oldContainerValue","valarr","setValueAtPosition","_info$instanceof","metatype","_clearValueAtPosition","setMirage","get_setValueAtPosition","_step42","_iterator42","the_loop","generateEcoreJsonM1","_this55","_toString","get_getValues","_class89","pendingActions","hasBegun","deepnessLevel","actionstoPrepend","FINAL_END","sender","hasFired","consoleTargetSelector","stack","forceRelaunch","storee","executionCount","parse1","_Action","_Action2","fullpath","accessModifier","_SetRootFieldAction","_Action3","amount","notfire","act","_Action4","CombineHistoryAction","_Action5","_Action6","_SetFieldAction","_Action7","launch","ParsedAction","_SetRootFieldAction2","BidirectionalOCLEditor","_PureComponent","oclContainer","editor","createRef","loadEditor","prevProps","prevState","snapshot","xtext","url","baseUrl","createEditor","serviceUrl","syntaxDefinition","enableCors","ocltextchanged","getValue","oclText0","oclText","getAllMP","lmp","valids","validfilled","$htmlmatch","getNodes","removeClass","otherprops","_Fragment","onClick","getOclQuery","maxWidth","marginTop","PureComponent","OCLEditorConnected","objid","OCLEditorAce","InputConnected","_Object$keys","fathers","fatherChain","editable","_selected$key","readonly","getter","jsxLabel","tooltip","css","inputClassName","autosize","notify","toast","dismiss","input","spellCheck","evt","cursor","asLabel","Toaster","TextAreaConnected","SelectConnected","primitives","returns","_data$field","hasReturn","hasPrimitive","hasClasses","hasEnumerators","primitive","enumerator","ImageConnected","link","Image","EdgeConnected","Xarrow","Edge","DataOutputComponent","ReactJson","collapsed","collapseStringsAfterLength","displayDataTypes","displayObjectSize","enableClipboard","groupArraysAfterLength","indentWidth","iconStyle","rootName","quotesOnKeys","shouldCollapse","sortKeys","theme","LoggerComponent","changeSearchTag","setState","searchTag","changeRegexpTag","searchTagAsRegExp","changeMinDate","minDate","changeMaxDate","maxDate","category","fullconcat","categoriesActive","messages","max_id","DDate","addYear","filters","tag","datafilter","loggers","registerLogger","cat","_this$state$filters$c","_this$state$filters","allCategories","activeCategories","isCatActive","allTags","arrayUnique","entries","parameter","Overlap","autosizex","cc","autosizey","defaultProps","ColorSchemeComponent","userColorSchemeCss","userMadeColorScheme","ColorScheme","_superclass","_this$props$data","_this$props$view","_this$props$views","skiparenderforloading","bugged","componentMap","dmodelMap","serializableProps","componentfunction","forceNodeType","Graph","Vertex","FieldComponent","Field","GraphVertexComponent","GraphVertex","VoidVertex","errorView","mapLModelStuff","mapViewStuff","DefaultNodeConnected","mapStateToProps","mapDispatchToProps","DefaultNode","GraphsContainerComponent","GraphsContainerConnected","GraphsContainer","crypto","require","_source","_source2","sourceNode","targetNode","showAnchor","_useStateIfMounted","useStateIfMounted","_useStateIfMounted2","_slicedToArray","middleAnchor","setMiddleAnchor","firstOptions","strokeWidth","showHead","lastOptions","showTail","tailShape","svgElem","rotate","fill","stroke","offsetForward","headColor","headShape","useEffectOnce","randomBytes","useEffect","middleware","drag","event","preventDefault","stopPropagation","onContextMenu","borderColor","EdgesConnected","lReference","lTarget","Edges","groupingsize","superclassGraphElementComponent","_superclassGraphEleme","_tobind","tb","bind","classesoverride","startnodeid","endnodeid","superret","objectMergeInPlace","removeEmptyObjectKeys","DamEdge","isGraph","isVertex","toCheck","ok","tx","every","deepEqual","Promise","characters","randomString","randomNumber","backdrop","showCloseButton","showConfirmButton","typeclassifier","toJSON","orderedChildren","Map","timestamp","patharr","chain","lastObject","lastkey","failedRemainingPath","lastval","kv","vals","searchText","replacement","objarr","_objarr","_out$_key","_log","_objarr2","endi","fname","starti","parcounter","parameterStr","returnstarti","returnendi","bodystarti","regexp","exec","defaultVal","typedesc","evalInContextAndScope","codeStr","scope","_eval","prefixDeclarations","postfixDeclarations","isStrict","Function","execInContextAndScope","evalInContext","js","funcName","time","results","timeEnd","elseReturn","useEval","script","eDev","domelem","stopNode","includeSelf","containerTag","cost","levenshtein","names","lowest","previous","distance","recursive","logger","namestr","suggestions","getClosestPropertyNames","file","reader","FileReader","onload","result","readAsText","extensions","readContent","myFileReader","show","htmlNode","highestTimeoutId","clearTimeout","sliceCalls","stacksToSkip","caller","getCaller","gotcalledby","srcElement","prop","isContentEditable","attr","modifyFirst","iterables","_iterables","iterable","item","arr1","arr2","arrtarget","arrays","arri","ArrayAdd","throwIfContained","param","_param$constructor","s1","s2","suffix","suf","otherArrs","_otherArrs","ignoreNonNumbers","allowDecimal","numberEnd","parseFloat","num","allowLastNonNumberChars","increaseWhile","regexpstr","matches","RegExp","objA","objB","keya","_constructor$prototyp","_constructor$__proto_","chainoutoutrecursive","currentRecursion","maxRecursion","cache","__allprototypes","getAllPrototypes","subconstructor","superconstructor","returnIfNull","returnIfUndefined","retIfArray","ifNotBoolean","allowNull","allowUndefined","starting","final","arraySubtract","old","neww","newwobj","oldobj","objdiff","changed","subold","subnew","removedprefix","pathseparator","pre","flattenObjectToRoot","maxkeylength","maxsubpaths","maxvallength","toolongreplacer","quotestrings","valueseparator","filterrow","rowpaths","flatten","halfpath","halfval","halfsubpaths","bestpathsize","best","filterbest","row","pathlength","fullstr","fullvalue","toFileName","htmla","blob","Blob","endings","blobUrl","URL","createObjectURL","href","download","appendChild","click","revokeObjectURL","formatted","lines","indent","lastType","transitions","ln","single","Boolean","closing","opening","fromTo","padding","replacer","space","tmpindex","allowDecimalDot","allowDecimalComma","valueifmismatch","commamode","floatregex","intregex","accumulator","withRepetitions","pairArrayElementsRepeatFunc","pairArrayElementsReducerFunc","decomment_line","decomment_block","trimLines","idPrefix","getID","idgenerator","inplace","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","fileTypes","onchange","readcontent","contentObj","fileLetti","files","fileReadContent","content","contentArr","setinfos","setAttribute","on","trigger","reset","inPlace","FocusHistoryEntry","SelectorOutput","jqselector","attrselector","attrRegex","resultSetAttr","resultSetElem","Keystrokes","ParseNumberOrBooleanOptions","nullValue","undefinedValue","allowedNan","nanValue","allowBooleans","trueValue","falseValue","triggerAt","loggerMapping","_log2","originalFunc","restArgs","lastError","firstParam","restAgs","FileReadTypeEnum","image","audio","video","AndManyOthersButThereAreTooMuch","OrJustPutFileExtension","MqttEditorConnected","valueId","parsedTopic","MqttEditor","Value","_lValue$instanceof","stepSize","maxLength","filteredvalues","getValues","changeDValue","inputvalue","select_options","isattr","isenum","isref","isshapeless","containerObjectsID","lm","validObjects","getObjects","_obj$instanceof","_feature$type","freeObjects","boundObjects","getAllEnumerators","shapelessObjects","classmap","free","bound","cname","valueslist","step","placeholder","_filteredvalues$index","disabled","Structure","lModelElement","lModel","BaseEditor","lDataType","lEnum","DataTypeEditor","lTypedElement","lStructuralFeature","lAttribute","TypedElementEditor","StructuralFeatureEditor","lEnumLiteral","conform","forceConform","_me$instanceof","mm","getLastSelectedModel","debugmm","debugm","ModelEditor","PackageEditor","ClassEditor","AttributeEditor","ReferenceEditor","EnumEditor","EnumLiteralEditor","OperationEditor","ObjectEditor","ValueEditor","StructureEditorComponent","_this$props$selected","StructureEditorConnected","selectedid","StructureEditor","Child","TreeEditorConnected","TreeEditor","ViewsData","select","JsxEditorConnected","jsx","setJsx","tabIndex","onBlur","JsxEditor","classesOptions","ViewData","_view$viewpoint","ViewsEditorConnected","ViewsEditor","StyleEditorConnected","_state$_lastSelected3","StyleEditor","EdgeEditorConnected","referenceM2","referenceM1","changeOptions","changeDisplayed","EdgeEditor","ViewpointsEditorConnected","dViewPoint","backgroundColor","editName","filteredViews","ViewpointsEditor","ansiConvert","ansiconvert","hiddenkeys","fixproxy","_output","addLKeys","buildFunctionDocumentation","_output2","Lsingleton","comments","shortcuts","entryvalue","_hiddenkeys","ConsoleComponent","lastNode","expression","change","_this$props$node","fromcomponent","_this$state$output","_this$props$node2","outstr","ashtml","contextkeys","_output$","_output3","_reactInternals","_isMounted","format","toHtml","util","commentKey","_commentVal","_commentVal2","_commentVal3","commentVal","objraw","setNativeConsoleVariables","whiteSpace","dangerouslySetInnerHTML","__html","_context$data2","ConsoleConnected","Console","ToolBarConnected","metamodelId","_props$selected","_props$selected2","_props$selected3","downward","addChildren","items","myDictValidator","reactNodes","_data","item_dname","ledge","dedge","wedge","skip","longestSeg","longestIndex","segms","newmp","prevNodeid","prevnodeindex","mp","olddebug","addChild","getItems","upward","parentKey","_upward$child","lobj","lfeat","addObject","ToolBar","PendingEdgeConnected","mousePosition","setMousePosition","edgeSettings","updateMousePosition","clientX","clientY","addEventListener","removeEventListener","Xwrapper","PendingEdge","MemoRec","_post","axios","post","abrupt","_structuralFeature","_callee3","named","memorecClasses","myClass","memorecModel","memorecObject","response","_context3","methodInvocations","methodDeclarations","_classifier","_callee4","memorecPackages","myPackage","_context4","ContextMenuConnected","mePointer","nodePointer","_memorec$data","jsxList","setMemorec","_useStateIfMounted3","_useStateIfMounted4","suggestedName","setSuggestedName","close","structuralFeature","suggestOnClass","isAttribute","dView","addView","recommendedItem","ContextMenu","childrens","ReferenceEdgeConnected","startOptions","endOptions","ReferenceEdge","ExtendEdgeConnected","ExtendEdge","ValueEdgeConnected","ValueEdge","_references","_values","instanceOf","valuePointers","referenceEdge","sourceID","targetID","extendEdge","_extendEdge$source","_extendEdge$target","valueEdge","_valueEdge$source","_valueEdge$target","MetamodelTabConnected","_ret$model","margin","MetamodelTab","ModelTabConnected","metamodelid","ModelTab","InfoTabConnected","metamodels","_model$instanceof","InfoTab","TestTabConnected","TestTab","IotTabConnected","setTopics","editTopic","IotTab","TabDataMaker","group","closable","DockLayoutComponent","dock","dockPanel","dockContext","groups","floatable","maximizable","panelExtra","panelData","open","addMetamodel","addModel","test","iotEditor","structureEditor","treeEditor","viewsEditor","styleEditor","edgeEditor","viewpointEditor","ViewpointEditor","moveOnStructure","moveOnViews","iotLoaded","dockMove","tabs","newProps","newContext","oldProps","deltaM2","addedM2","removedM2","OPEN","CLOSE","deltaM1","addedM1","removedM1","layout","getLayout","dockbox","setLayout","getAllMetamodels","getAllModels","preConfirm","getElementById","isConfirmed","_addMetamodel","newName","mmid","modelNames","infoTab","DockLayout","dockRef","defaultLayout","DockLayoutConnected","Dock","SaveManager","tmpsave","setItem","fullstatestr","_lmodel$instanceof","toXML","toFile","lmodel","getActiveModel","exportEcore","formatXml","ism2","fromXML","fromfile","importEcore_click0","_e$message","_e$message$substring","trace","filestring","jsonstring","jsonobj","fileRead","fileContents","_e$target$files","todoc","DOMParser","parseFromString","doctojson","doc","xmlDoc","importEcore","loopobj","jsonstr","loadOnModel","fromFile","UndoRedoState","hover","SaveManagerComponent","undoredolistoutdated","do_undo","undoenter","do_redo","redoenter","undoredoenter","redo","maxlistsize","ObjectToAssignementStrings","editedfullpath","pathsegment","printablePointer","beststr","overflow","marginLeft","paddingLeft","pointerEvents","undoleave","redoleave","SaveManagerConnected","RoomManagerConnected","root","getRandomString","createdBy","quit","removeRoom","location","RoomManager","TopBarConnected","_useState","useState","_useState2","save","load","Undoredocomponent","exportEcore_click","importEcore_click","exportLayout_click","importLayout_click","TopBar","Cleaning","Oval","wrapperStyle","justifyContent","wrapperClass","secondaryColor","AppConnected","splash","setSplash","sleep","SplashImage","RoomAttacherConnected","setCreatedBy","setActions","_useStateIfMounted5","_useStateIfMounted6","_useStateIfMounted7","_useStateIfMounted8","setError","_useStateIfMounted9","_useStateIfMounted10","setIot","_useStateIfMounted11","_useStateIfMounted12","iotData","setIotData","onSnapshot","db","getRoom","receivedAction","fromJson","RoomAttacher","RoomChecker","useParams","loading","setLoading","validCode","setValidCode","constraint","operator","App","Router","BrowserRouter","Routes","Route","ReactDOM","render","Provider","Env","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","_select","collectionName","isAND","DOC","_constraints","_args","collection","_selectWithConditions","_selectWithoutConditions","_selectWithConditions2","conditions","where","or","getDocs","_selectWithoutConditions2","_add","setDoc","merge","_edit","_callee5","_context5","updateDoc","_remove","_callee6","_context6","deleteDoc","_addAction","_callee7","_context7","edit","firebase","firestore","FieldValue","arrayUnion","_removeRoom","_callee8","_context8","config","app","initializeApp","getFirestore","ThisStatee","_GraphElementStatee","forceupdate","dragHelper","outline","setSize","forceUpdate","setVertexProperties","hasSetVertexProperties","$measurable","opacity","helper","onDragStart","onDragEnd","resizeoptions","onResizeStart","resize","onResizeEnd","_this$props$selected$","cssOverride","isEdgePoint","isVoid","classesOverride","styleOverride","OwnProps","_GraphElementOwnProps","StateProps","DispatchProps","_GraphElementDispatch","DGraphElementClass","VertexConnected","componentdebug","bindVertexSizeToView","scalezoomx","scalezoomy","storeTemporaryPositions","__info_of__adaptWidth","__info_of__adaptHeight","__info_of__bendingMode","__info_of__edgeGapMode","__info_of__storeSize","__info_of__lazySizeUpdate","__info_of__edgeStartOffset","__info_of__edgeStartOffset_isPercentage","__info_of__edgeStartStopAtBoundaries","edgeStrokeWidth","subViewsPointers","vp","vsize","newSize","set_generic_entry","DViewTransientProperties","_isDViewTransientProperties","LViewTransientProperties","_isLViewTransientProperties","makeEvalContext","_props$node","vcomponent","setTemplateString","stateProps","allProps","jsxCodeString","fromString","factory","eDevv","errorView_string","debugcount","maxRenderCounter","lastViewChanges","maxid","_functionsToBind","onLeave","onEnter","_this$props$data2","forUser","getSelected","displayError","errormsg","stackerrorlast","icol","irow","stackerrorlinenum","parseInt","col","jsxlines","culpritlinesPre","culpritline","culpritlinesPost","rowPre","rowPost","jsxcode","fontFamily","_this$props$isEdgePen","_this$props$data3","canExtend","_this$props$data4","_this$props$isEdgePen2","_this$props$data5","styleoverride","_this$lastViewChanges","thischange","vid","newvid","newv","change_log","rnode","getTemplate","rawRElement","addprops","fiximport","_this$props$node3","viewStyle","order","onMouseEnter","onMouseLeave","rn","depthIndexes","injectProp","newid","nextProps","nextState","nextContext","shallowEqual","dnode","viewScores","getAppliedViews","_ownProps$data","meid","dGraphElementDataClass","isDGraph","dge","pendings","pending","edgeOwnProps","dGraphDataClass","startingobj","mapLGraphElementStuff","reduxProps","GraphElementConnected","GraphElement"],"mappings":"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","file":"static/js/main.d83ab6e3.chunk.js","sourcesContent":["/*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n\tAuthor:  Stefan Goessner/2006\r\n\tWeb:     http://goessner.net/ \r\n*/\r\nexport function json2xml(o, tab/*string, string*/) {\r\n   var toXml = function(v, name, ind) {\r\n      var xml = \"\";\r\n      if (v instanceof Array) {\r\n         for (var i=0, n=v.length; i<n; i++)\r\n            xml += ind + toXml(v[i], name, ind+\"\\t\") + \"\\n\";\r\n      }\r\n      else if (typeof(v) == \"object\") {\r\n         var hasChild = false;\r\n         xml += ind + \"<\" + name;\r\n         for (var m in v) {\r\n            if (m.charAt(0) == \"@\")\r\n               xml += \" \" + m.substr(1) + \"=\\\"\" + v[m].toString() + \"\\\"\";\r\n            else\r\n               hasChild = true;\r\n         }\r\n         xml += hasChild ? \">\" : \"/>\";\r\n         if (hasChild) {\r\n            for (var m in v) {\r\n               if (m == \"#text\")\r\n                  xml += v[m];\r\n               else if (m == \"#cdata\")\r\n                  xml += \"<![CDATA[\" + v[m] + \"]]>\";\r\n               else if (m.charAt(0) != \"@\")\r\n                  xml += toXml(v[m], m, ind+\"\\t\");\r\n            }\r\n            xml += (xml.charAt(xml.length-1)==\"\\n\"?ind:\"\") + \"</\" + name + \">\";\r\n         }\r\n      }\r\n      else {\r\n         xml += ind + \"<\" + name + \">\" + v.toString() +  \"</\" + name + \">\";\r\n      }\r\n      return xml;\r\n   }, xml=\"\";\r\n   for (var m in o)\r\n      xml += toXml(o[m], m, \"\");\r\n   return tab ? xml.replace(/\\t/g, tab) : xml.replace(/\\t|\\n/g, \"\");\r\n}\r\n","/*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n\tAuthor:  Stefan Goessner/2006\r\n\tWeb:     http://goessner.net/\r\n*/\r\nvar X = {\r\n   toObj: function(xml) {\r\n      var o = {};\r\n      if (xml.nodeType==1) {   // element node ..\r\n         if (xml.attributes.length)   // element with attributes  ..\r\n            for (var i=0; i<xml.attributes.length; i++)\r\n               o[\"@\"+xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue||\"\").toString(); // dam: qua parsa attribs\r\n         if (xml.firstChild) { // element has child nodes ..\r\n            var textChild=0, cdataChild=0, hasElementChild=false;\r\n            for (var n=xml.firstChild; n; n=n.nextSibling) {\r\n               if (n.nodeType==1) hasElementChild = true;\r\n               else if (n.nodeType==3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++; // non-whitespace text\r\n               else if (n.nodeType==4) cdataChild++; // cdata section node\r\n            }\r\n            if (hasElementChild) {\r\n               if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..\r\n                  X.removeWhite(xml);\r\n                  for (var n=xml.firstChild; n; n=n.nextSibling) {\r\n                     if (n.nodeType == 3)  // text node\r\n                        o[\"#text\"] = X.escape(n.nodeValue);\r\n                     else if (n.nodeType == 4)  // cdata node\r\n                        o[\"#cdata\"] = X.escape(n.nodeValue);\r\n                     else if (o[n.nodeName]) {  // multiple occurence of element ..\r\n                        if (o[n.nodeName] instanceof Array)\r\n                           o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\r\n                        else\r\n                           o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\r\n                     }\r\n                     else  // first occurence of element..\r\n                        o[n.nodeName] = X.toObj(n); // damiano: qua parsa sottonodi\r\n                  }\r\n               }\r\n               else { // mixed content\r\n                  if (!xml.attributes.length)\r\n                     o = X.escape(X.innerXml(xml));\r\n                  else\r\n                     o[\"#text\"] = X.escape(X.innerXml(xml));\r\n               }\r\n            }\r\n            else if (textChild) { // pure text\r\n               if (!xml.attributes.length)\r\n                  o = X.escape(X.innerXml(xml));\r\n               else\r\n                  o[\"#text\"] = X.escape(X.innerXml(xml));\r\n            }\r\n            else if (cdataChild) { // cdata\r\n               if (cdataChild > 1)\r\n                  o = X.escape(X.innerXml(xml));\r\n               else\r\n                  for (var n=xml.firstChild; n; n=n.nextSibling)\r\n                     o[\"#cdata\"] = X.escape(n.nodeValue);\r\n            }\r\n         }\r\n         if (!xml.attributes.length && !xml.firstChild) o = null;\r\n      }\r\n      else if (xml.nodeType==9) { // document.node\r\n         o = X.toObj(xml.documentElement);\r\n      }\r\n      else alert(\"unhandled node type: \" + xml.nodeType);\r\n      return o;\r\n   },\r\n   toJson: function(o, name, ind) {\r\n      var json = name ? (\"\\\"\"+name+\"\\\"\") : \"\";\r\n      if (o instanceof Array) {\r\n         for (var i=0,n=o.length; i<n; i++)\r\n            o[i] = X.toJson(o[i], \"\", ind+\"\\t\");\r\n         json += (name?\":[\":\"[\") + (o.length > 1 ? (\"\\n\"+ind+\"\\t\"+o.join(\",\\n\"+ind+\"\\t\")+\"\\n\"+ind) : o.join(\"\")) + \"]\";\r\n      }\r\n      else if (o == null)\r\n         json += (name&&\":\") + \"null\";\r\n      else if (typeof(o) == \"object\") {\r\n         var arr = [];\r\n         for (var m in o)\r\n            arr[arr.length] = X.toJson(o[m], m, ind+\"\\t\");\r\n         json += (name?\":{\":\"{\") + (arr.length > 1 ? (\"\\n\"+ind+\"\\t\"+arr.join(\",\\n\"+ind+\"\\t\")+\"\\n\"+ind) : arr.join(\"\")) + \"}\";\r\n      }\r\n      else if (typeof(o) == \"string\")\r\n         json += (name&&\":\") + \"\\\"\" + o.toString() + \"\\\"\";\r\n      else\r\n         json += (name&&\":\") + o.toString();\r\n      return json;\r\n   },\r\n   innerXml: function(node) {\r\n      var s = \"\"\r\n      if (\"innerHTML\" in node)\r\n         s = node.innerHTML;\r\n      else {\r\n         var asXml = function(n) {\r\n            var s = \"\";\r\n            if (n.nodeType == 1) {\r\n               s += \"<\" + n.nodeName;\r\n               for (var i=0; i<n.attributes.length;i++)\r\n                  s += \" \" + n.attributes[i].nodeName + \"=\\\"\" + (n.attributes[i].nodeValue||\"\").toString() + \"\\\"\";\r\n               if (n.firstChild) {\r\n                  s += \">\";\r\n                  for (var c=n.firstChild; c; c=c.nextSibling)\r\n                     s += asXml(c);\r\n                  s += \"</\"+n.nodeName+\">\";\r\n               }\r\n               else\r\n                  s += \"/>\";\r\n            }\r\n            else if (n.nodeType == 3)\r\n               s += n.nodeValue;\r\n            else if (n.nodeType == 4)\r\n               s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\r\n            return s;\r\n         };\r\n         for (var c=node.firstChild; c; c=c.nextSibling)\r\n            s += asXml(c);\r\n      }\r\n      return s;\r\n   },\r\n   escape: function(txt) {\r\n      return txt.replace(/[\\\\]/g, \"\\\\\\\\\")\r\n          .replace(/[\\\"]/g, '\\\\\"')\r\n          .replace(/[\\n]/g, '\\\\n')\r\n          .replace(/[\\r]/g, '\\\\r');\r\n   },\r\n   removeWhite: function(e) {\r\n      e.normalize();\r\n      for (var n = e.firstChild; n; ) {\r\n         if (n.nodeType == 3) {  // text node\r\n            if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) { // pure whitespace text node\r\n               var nxt = n.nextSibling;\r\n               e.removeChild(n);\r\n               n = nxt;\r\n            }\r\n            else\r\n               n = n.nextSibling;\r\n         }\r\n         else if (n.nodeType == 1) {  // element node\r\n            X.removeWhite(n);\r\n            n = n.nextSibling;\r\n         }\r\n         else                      // any other node\r\n            n = n.nextSibling;\r\n      }\r\n      return e;\r\n   }\r\n};\r\nexport function xml2json(xml, tab = '    '/*XML_DOM, string*/) {\r\n   if (xml.nodeType == 9) // document node\r\n      xml = xml.documentElement;\r\n   var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\r\n   return \"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\";\r\n}\r\nexport function xml2jsonobj(xml, tab= '    '){\r\n   return X.toObj(X.removeWhite(xml));\r\n}\r\n// damiano: i needX.toObj(X.removeWhite(xml))\r\n","import React, {CSSProperties, ReactNode} from \"react\";\r\nimport type {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DModelElement,\r\n    DViewElement,\r\n    Json,\r\n    LGraph,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LViewElement,\r\n    Pointer, PrimitiveType\r\n} from \"../../../joiner\";\r\nimport {LClass, LEdge, LUser, LViewPoint} from \"../../../joiner\";\r\nimport {InitialVertexSize} from \"../../../joiner/types\";\r\n\r\nexport class GraphElementStatee {/*\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n        this.preRenderFunc = preRenderFunc;\r\n        this.evalContext = evalContext;\r\n        this.template = templatefunc;\r\n    }\r\n    preRenderFunc?: string;\r\n    evalContext: Json;\r\n    template: () => ReactNode;* /\r\n    nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n        this.nodeid = nodeid;\r\n    }*/\r\n    // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\r\n    classes!: string[];\r\n}\r\n\r\n\r\nexport class GraphElementReduxStateProps {\r\n    // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\r\n    view!: LViewElement;\r\n    views!: LViewElement[]; // all applicable views\r\n    // graphID!: string;\r\n    data?: LModelElement;\r\n    dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    // model?: LModel;\r\n    // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\r\n    preRenderFunc?: string;\r\n    evalContext!: Json;\r\n    template!: string;\r\n    node!: LGraphElement;\r\n    graph!: LGraph;\r\n\r\n    lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };// vertex only\r\n}\r\n\r\nexport class GraphElementDispatchProps {\r\n}\r\n\r\nexport class GraphElementOwnProps {\r\n    data?: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    view?:Pointer<DViewElement, 1, 1, LViewElement>; // | LViewElement\r\n    // generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\r\n    children?: any;\r\n    style?: CSSProperties;\r\n    'class'?: string | string[];\r\n    'className'?: string | string[];\r\n    key?: string;\r\n    parentnodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    nodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    graphid?: Pointer<DGraph, 1, 1, LGraph>; // injected\r\n    parentViewId?: Pointer<DViewElement, 1, 1, LViewElement>; // injected\r\n    htmlindex?: number; // injected\r\n    initialSize?: InitialVertexSize;\r\n}\r\n\r\nexport class EdgeOwnProps extends GraphElementOwnProps {\r\n    onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    isGraph?: boolean = false;\r\n    isVertex?: boolean = true;\r\n    start!: LGraphElement[\"id\"];\r\n    end!: LGraphElement[\"id\"];\r\n    label?: DEdge[\"longestLabel\"];\r\n    labels?: DEdge[\"labels\"];\r\n    key?: string;\r\n}\r\n\r\nexport class EdgeStateProps extends GraphElementReduxStateProps {\r\n    node!: LEdge;\r\n    lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    // key: string;\r\n}\r\n","import {Mixin} from \"ts-mixer\";\r\nimport type {\r\n    DEdge,\r\n    DEdgePoint,\r\n    DExtEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    DRefEdge,\r\n    DVertex,\r\n    DVoidEdge,\r\n    DVoidVertex,\r\n    LEdge,\r\n    LEdgePoint,\r\n    LExtEdge,\r\n    LGraph,\r\n    LGraphElement,\r\n    LGraphVertex,\r\n    LRefEdge,\r\n    LVertex,\r\n    LVoidEdge,\r\n    LVoidVertex,\r\n    WEdge,\r\n    WEdgePoint,\r\n    WExtEdge,\r\n    WGraph,\r\n    WGraphElement,\r\n    WGraphVertex,\r\n    WRefEdge,\r\n    WVertex,\r\n    WVoidEdge,\r\n    WVoidVertex\r\n} from \"../model/dataStructure\";\r\nimport type {Class, Longest} from \"ts-mixer/dist/types/types\";\r\nimport type {\r\n    DAnnotation,\r\n    DAttribute,\r\n    DClass,\r\n    DClassifier,\r\n    DDataType,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DMap,\r\n    DModel,\r\n    DModelElement,\r\n    DNamedElement,\r\n    DObject,\r\n    DOperation,\r\n    DPackage,\r\n    DParameter,\r\n    DReference,\r\n    DStructuralFeature,\r\n    DTypedElement,\r\n    DValue,\r\n    LAnnotation,\r\n    LAttribute,\r\n    LClass,\r\n    LClassifier,\r\n    LDataType,\r\n    LEnumerator,\r\n    LEnumLiteral,\r\n    LMap,\r\n    LModel,\r\n    LModelElement,\r\n    LNamedElement,\r\n    LObject,\r\n    LOperation,\r\n    LPackage,\r\n    LParameter,\r\n    LReference,\r\n    LStructuralFeature,\r\n    LTypedElement,\r\n    LValue,\r\n    WAnnotation,\r\n    WAttribute,\r\n    WClass,\r\n    WClassifier,\r\n    WDataType,\r\n    WEnumerator,\r\n    WEnumLiteral,\r\n    WMap,\r\n    WModel,\r\n    WModelElement,\r\n    WNamedElement,\r\n    WObject,\r\n    WOperation,\r\n    WPackage,\r\n    WParameter,\r\n    WReference,\r\n    WStructuralFeature,\r\n    WTypedElement,\r\n    WValue\r\n} from \"../model/logicWrapper\";\r\n// import type {Pointer} from \"./typeconverter\";\r\nimport type {\r\n    CClass, Constructor, Dictionary, DocString, GObject, InitialVertexSize,\r\n    InitialVertexSizeFunc, InitialVertexSizeObj, orArr, Proxyfied, unArr\r\n} from \"./types\";\r\nimport {EdgeBendingMode, EdgeGapMode, PrimitiveType} from \"./types\";\r\nimport type {\r\n    DViewElement,\r\n    DViewTransientProperties,\r\n    LViewElement,\r\n    LViewTransientProperties,\r\n    WViewElement,\r\n    WViewTransientProperties\r\n} from \"../view/viewElement/view\";\r\nimport type {LogicContext} from \"./proxy\";\r\nimport type {EdgeSegment, DState, EdgeFillSegment} from \"./index\";\r\nimport {\r\n    Action,\r\n    BEGIN,\r\n    CreateElementAction,\r\n    DeleteElementAction,\r\n    END,\r\n    GraphPoint,\r\n    GraphSize,\r\n    IPoint,\r\n    Log,\r\n    ParsedAction,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    store,\r\n    U,\r\n} from \"./index\";\r\nimport TreeModel from \"tree-model\";\r\nimport {cssNumber} from \"jquery\";\r\n\r\nvar windoww = window as any;\r\n// qui dichiarazioni di tipi che non sono importabili con \"import type\", ma che devono essere davvero importate a run-time (eg. per fare un \"extend\", chiamare un costruttore o usare un metodo statico)\r\n\r\n\r\nconsole.warn('ts loading classes');\r\n\r\n\r\n// annotation @RuntimeAccessible\r\n// import {store} from \"../redux/createStore\";\r\n\r\n\r\nabstract class AbstractMixedClass {\r\n    // superclass!: Dictionary<DocString<'parent class name', Class>>;\r\n    static logic: typeof LPointerTargetable;\r\n    static structure: typeof DPointerTargetable;\r\n    static singleton: LPointerTargetable;\r\n    // static [key: string]: any;\r\n    static init_constructor(...constructorArguments: any): void{}\r\n}\r\n\r\nexport abstract class RuntimeAccessibleClass extends AbstractMixedClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static extendTree: TreeModel.Node<typeof RuntimeAccessibleClass>// Tree<string, typeof RuntimeAccessibleClass>;\r\n\r\n    static set_extend(superclass: typeof RuntimeAccessibleClass, subclass: typeof RuntimeAccessibleClass): void{\r\n        if (!superclass.hasOwnProperty(\"subclasses\")) superclass.subclasses = [subclass];\r\n        else if (superclass.subclasses.indexOf(subclass) === -1) superclass.subclasses.push(subclass);\r\n        if (!subclass.hasOwnProperty(\"_extends\")) subclass._extends = [superclass];\r\n        else if (subclass._extends.indexOf(superclass) === -1) subclass._extends.push(superclass);\r\n    }\r\n\r\n    static extendPrototypes(){\r\n        (Array.prototype as any).contains = function (o:any): boolean{\r\n            return this.indexOf(o) !== -1;\r\n        };\r\n        (Array.prototype as any).joinOriginal = Array.prototype.join;\r\n        (Array.prototype as any).separator = function(...separators: any[]/*: orArr<(PrimitiveType | null | undefined | JSX.Element)[]>*/): (string|JSX.Element)[]{\r\n            if (Array.isArray(separators[0])) separators = separators[0]; // case .join([1,2,3])  --> .join(1, 2, 3)\r\n            // console.log(\"separators debug\", this, separators, this[0], typeof this[0]);\r\n            if (typeof this[0] !== \"object\") return (this as any).joinOriginal(separators);\r\n            // if JSX\r\n            // it handles empty cells like it handles '', but this is how native .join() handles them too: [emptyx5, \"a\", emptyx1, \"b\"].join(\",\") ->  ,,,,,a,,b\r\n            let ret/*:JSX.Element[]*/ = [];\r\n            for (let i = 0; i < this.length; i++){\r\n                if (i === 0) {ret.push(this[i]); continue;}\r\n                ret.push(...separators);\r\n                ret.push(this[i]);\r\n            }\r\n            return ret;\r\n        }\r\n    }\r\n    static fixStatics() {\r\n        this.extendPrototypes();\r\n        // problem: se lo statico è un valore primitivo ne genera una copia.\r\n        for (let classs of Object.values(RuntimeAccessibleClass.annotatedClasses)) {\r\n            let gclass = classs as GObject;\r\n            for (let statickey in gclass.s) { gclass[statickey] = gclass.s[statickey]; }\r\n        }\r\n    }\r\n    // static allRuntimeClasses: string[] = [];\r\n    static classes: Dictionary<string, typeof RuntimeAccessibleClass> = {};\r\n    static annotatedClasses: Dictionary<string, typeof RuntimeAccessibleClass> = {};\r\n\r\n    static getAllNames(annotated = false): string[] {\r\n        return Object.keys(annotated ? RuntimeAccessibleClass.annotatedClasses : RuntimeAccessibleClass.classes); }\r\n    static getAllClasses(annotated = false): typeof RuntimeAccessibleClass[] {\r\n        return Object.values(annotated ? RuntimeAccessibleClass.annotatedClasses : RuntimeAccessibleClass.classes); }\r\n    static getAllClassesDictionary(annotated = false): Dictionary<string, typeof RuntimeAccessibleClass> {\r\n        return annotated ? RuntimeAccessibleClass.annotatedClasses : RuntimeAccessibleClass.classes; }\r\n\r\n    static wrapAll<D extends RuntimeAccessibleClass, L extends LPointerTargetable = LPointerTargetable, CAN_THROW extends boolean = false,\r\n        RET extends CAN_THROW extends true ? L[] : L[] = CAN_THROW extends true ? L[] : L[] >\r\n    (data: D[] | Pointer<DPointerTargetable, 0, 'N'>, baseObjInLookup?: DPointerTargetable, path: string = '', canThrow: CAN_THROW = false as CAN_THROW, state?: DState): CAN_THROW extends true ? L[] : L[] {\r\n        if (!Array.isArray(data)) return [];\r\n        return data.map( d => DPointerTargetable.wrap(d, baseObjInLookup, path, canThrow, state)) as L[];\r\n    }\r\n\r\n    static wrap<D extends RuntimeAccessibleClass, L extends LPointerTargetable = LPointerTargetable, CAN_THROW extends boolean = false,\r\n        RET extends CAN_THROW extends true ? L : L | undefined = CAN_THROW extends true ? L : L | undefined>\r\n    (data: D | Pointer | undefined | null, baseObjInLookup?: DPointerTargetable, path: string = '', canThrow: CAN_THROW = false as CAN_THROW, state?: DState): CAN_THROW extends true ? L : L | undefined{\r\n        if (!data || (data as any).__isProxy) return data as any;\r\n        if (typeof data === 'string') {\r\n            if (!state) state = windoww.store.getState() as DState;\r\n            data = state.idlookup[data] as unknown as D;\r\n            if (!data) {\r\n                if (canThrow) return windoww.Log.exx('Cannot wrap:', {data, baseObjInLookup, path});\r\n                else return undefined as RET;\r\n            }\r\n        }\r\n        if (Array.isArray(data)) { console.error('use WrapAll instead for arrays', {data, baseObjInLookup, path, canThrow}); throw new Error(\"use WrapAll instead for arrays\"); }\r\n        if (!data) return data;\r\n        // console.log('ProxyWrapping:', {data, baseObjInLookup, path});\r\n        return new Proxy(data, new windoww.TargetableProxyHandler(data, baseObjInLookup, path)) as L;\r\n    }\r\n    /*\r\n        static mapWrap2<D extends DPointerTargetable, L extends LPointerTargetable>(map: RuntimeAccessibleClass, container: D, baseObjInLookup?: DPointerTargetable, path: string = ''): L{\r\n            if (!map || (map as any).__isProxy) return map as any;\r\n            if (typeof container === 'string') {\r\n                container = store.getState().idlookup[container] as unknown as D;\r\n                if (!container) { return Log.exx('Cannot wrap map:', {map, container, baseObjInLookup, path}); }\r\n            }\r\n            // console.log('ProxyWrapping:', {data, baseObjInLookup, path});\r\n            return new Proxy(map, new MapProxyHandler(map, baseObjInLookup, path));\r\n        }\r\n\r\n    */\r\n\r\n    static mapWrap(data: Dictionary, baseObjInLookup: DPointerTargetable, path: string, subMapKeys: string[] = []): Proxyfied<Dictionary> {\r\n        if (!data || (data as any).__isProxy) return data as any;\r\n        // console.error('GETMAP', {data, logicContext, path});\r\n        return new Proxy(data, new windoww.MapProxyHandler(data, baseObjInLookup, path));\r\n    }\r\n\r\n    className!: string;\r\n    protected constructor(...a:any) {\r\n        super();\r\n        // RuntimeAccessibleClass.init_constructor(this, ...a);\r\n        // this.className = this.constructor.name;\r\n        // nb: per i mixin questo settaggio viene sovrascritto. perchè il mixin crea le 2 classi ereditate separatamente con i loro costruttori e le incrocia. quindi devo settarlo dall'annotazione @ tramite prototype\r\n        // RuntimeAccessibleClass.allRuntimeClasses.push(this.className);\r\n    }\r\n\r\n    static init_constructor(thiss: any, ...args: any): void {\r\n\r\n        // this.className = this.constructor.name;\r\n        // let finalObject = this;\r\n        // if (finalObject.constructor.name === \"DVoidVertex\" || finalObject.constructor.name === \"DGraphElement\") { let breakp = true; }\r\n        // this.init0(...arguments);\r\n        // thiss.className = this.name;\r\n    }\r\n\r\n    public static get<T extends typeof RuntimeAccessibleClass = typeof RuntimeAccessibleClass>(dclassname: string, annotated = false)\r\n        : T & {logic?: typeof LPointerTargetable} { return (annotated ? RuntimeAccessibleClass.annotatedClasses : this.classes)[dclassname] as any; }\r\n\r\n    public static extends(className?: string | typeof RuntimeAccessibleClass, superClassName?: string| typeof RuntimeAccessibleClass, returnIfEqual: boolean = true): boolean {\r\n        if (!className || !superClassName) return false;\r\n        const superclass = typeof superClassName === \"string\" ? RuntimeAccessibleClass.get(superClassName) : superClassName;\r\n        const thisclass = typeof className === \"string\" ? RuntimeAccessibleClass.get(className) : className;\r\n        if (!superclass || !thisclass) return false;\r\n        //console.trace(\"extends.1:\", {thisclass, superclass});\r\n        // console.log(\"extends.2:\", {iof:(thisclass instanceof superclass),\r\n        //     tree: !!(RuntimeAccessibleClass.extendTree.first((node) => node.model === superclass)?.first((node) => node.model === thisclass))});\r\n        if (superclass === thisclass) return returnIfEqual;\r\n        // for (let aaa in RuntimeAccessibleClass.extendTree.find(superClassName)) { }\r\n\r\n        return (thisclass instanceof superclass)\r\n            ||\r\n            !!(RuntimeAccessibleClass.extendTree.first((node) => node.model === superclass)\r\n                ?.first((node) => node.model === thisclass))\r\n            ;// || true; // todo:noes not work with constructors\r\n    }\r\n\r\n    getAllPrototypeSuperClasses(): GObject[] {\r\n        let currentlevel = this;\r\n        let ret: GObject[] = [];\r\n        while (true) {\r\n            if (!currentlevel) break;\r\n            ret.push(currentlevel);\r\n            // @ts-ignore\r\n            currentlevel = currentlevel.__proto__;\r\n        }\r\n        console.log('constructor chain:', ret);\r\n        return ret;\r\n    }\r\n    /*initBase(){\r\n        let superclasses = this.getAllPrototypeSuperClasses();\r\n        for (let sc of superclasses) {\r\n            if (!sc.hasOwnProperty('init0')) continue;\r\n            console.log('initbase calling ', {thiss: this, sc, init0: sc.init0, args:sc.constructorArguments});\r\n            sc.init0.apply(this, ...(sc.constructorArguments || []));\r\n        }\r\n    }*/\r\n    // protected abstract init(...constructorParameters: any): void;\r\n    // NB: per colpa della limitazione #3 di ts-mixer,\r\n    // DEVO chiamare init su ogni oggetto per settargli il corretto this.className, altrimenti prende quello dell'ultima superclasse\r\n    /*protected init0(...constructorParameters: any): void {\r\n        let a = this;\r\n        let finalObject = this;\r\n        console.log('creation of___ ', {thiss: this, finalObject});\r\n        if (finalObject.constructor.name === \"DVoidVertex\" || finalObject.constructor.name === \"DGraphElement\") {\r\n            let breakp = true; }\r\n\r\n        (window as any)[finalObject.constructor.name] =\r\n            RuntimeAccessibleClass.classes[finalObject.constructor.name] = finalObject.constructor as any;\r\n        // @ts-ignore\r\n        // delete this.className;\r\n        this.className = (finalObject as any).__proto__.className;\r\n    }*/\r\n\r\n}\r\nexport function Obsolete<T extends any>( constructor: T & GObject): T { return constructor; }\r\nexport function Leaf<T extends any>( constructor: T & GObject): T { return constructor; }\r\nexport function Node<T extends any>( constructor: T & GObject): T { return constructor; }\r\nexport function Abstract<T extends any>( constructor: T & GObject): T { return constructor; }\r\nexport function Instantiable<T extends any>(constructor: T & GObject, instanceConstructor?: Constructor): T { return constructor; } // for m2 cklasses that have m1 instances\r\nexport function RuntimeAccessible<T extends any>(constructor: T & GObject): T {\r\n    // console.log('DecoratorTest', {constructor, arguments});\r\n    // @ts-ignore\r\n    RuntimeAccessibleClass.classes[constructor.name] = constructor as any as typeof RuntimeAccessibleClass;\r\n    if (!window[constructor.name]) (window[constructor.name] as any) = constructor;\r\n    constructor.prototype.className = constructor.name;\r\n    //constructor.prototype.$$typeof = constructor.name;\r\n    //constructor.prototype.typeName = constructor.name;\r\n    (constructor as any).staticClassName = constructor.name;\r\n    // @ts-ignore\r\n    // console.log('runtimeaccessible annotation:', {thiss:this, constructor});\r\n    //    const classnameFixedConstructor = constructor; //  function (...args) { let obj = new constructor(...args); obj.init?.(); obj.init0?.(); return obj; }\r\n\r\n    // @ts-ignore\r\n    let outerthis = this;\r\n    // @ts-ignore\r\n    const classnameFixedConstructorDoNotRenameWithoutSearchStrings = function (...args) {\r\n        // @ts-ignore\r\n        // console.log('runtimeaccessible annotation inner:', {thiss:this, outerthis, constructor});\r\n        // @ts-ignore\r\n        let obj = new constructor(...args);\r\n        obj.classNameFromAnnotation = constructor.name;\r\n        obj.className = constructor.name;\r\n        //obj.prototype.$$typeof = constructor.name;\r\n        // obj.prototype.typeName = constructor.name;\r\n        // obj.init?.();\r\n        // obj.init0?.();\r\n        obj.initBase?.();\r\n        // @ts-ignore\r\n        // console.log('runtimeaccessible annotation inner end:', {thiss:this, outerthis, constructor, obj});\r\n        return obj; }\r\n    RuntimeAccessibleClass.annotatedClasses[constructor.name] = classnameFixedConstructorDoNotRenameWithoutSearchStrings as any as typeof RuntimeAccessibleClass;\r\n\r\n    for (let key in constructor) (classnameFixedConstructorDoNotRenameWithoutSearchStrings as GObject)[key] = constructor[key];\r\n    // constructor.constructor = classnameFixedConstructorDoNotRenameWithoutSearchStrings; return constructor;\r\n\r\n    // @ts-ignore\r\n    // for (let staticKey of constructor as GObject) { classnameFixedConstructorDoNotRenameWithoutSearchStrings[staticKey] = constructor[staticKey]; }\r\n    classnameFixedConstructorDoNotRenameWithoutSearchStrings.prototype = constructor.prototype;\r\n    classnameFixedConstructorDoNotRenameWithoutSearchStrings.prototype.constructor = constructor.prototype.constructor;\r\n\r\n    // required for inheriting static methods\r\n    classnameFixedConstructorDoNotRenameWithoutSearchStrings.__proto__ = constructor.__proto__;\r\n    classnameFixedConstructorDoNotRenameWithoutSearchStrings.s = constructor;\r\n    // return classnameFixedConstructorDoNotRenameWithoutSearchStrings as any;\r\n    return constructor;\r\n}\r\n\r\n\r\n(window as any).RuntimeAccessibleClass = RuntimeAccessibleClass;\r\n// todo: problema: per creare un PointerTargetable ho bisogno dell'userid, e devo generarlo prima che venga generato l'initialState... dovrebbe venir servito con la pagina dal server. o passato come navigation props dalla pagina di login\r\n\r\n\r\n\r\nexport type DtoL<DX extends GObject, LX = DX extends DEnumerator ? LEnumerator : (DX extends DAttribute ? LAttribute : (DX extends DReference ? LReference : (DX extends DRefEdge ? LRefEdge : (DX extends DExtEdge ? LExtEdge : (DX extends DDataType ? LDataType : (DX extends DClass ? LClass : (DX extends DStructuralFeature ? LStructuralFeature : (DX extends DParameter ? LParameter : (DX extends DOperation ? LOperation : (DX extends DEdge ? LEdge : (DX extends DEdgePoint ? LEdgePoint : (DX extends DGraphVertex ? LGraphVertex : (DX extends DModel ? LModel : (DX extends DValue ? LValue : (DX extends DObject ? LObject : (DX extends DEnumLiteral ? LEnumLiteral : (DX extends DPackage ? LPackage : (DX extends DClassifier ? LClassifier : (DX extends DTypedElement ? LTypedElement : (DX extends DVertex ? LVertex : (DX extends DVoidEdge ? LVoidEdge : (DX extends DVoidVertex ? LVoidVertex : (DX extends DGraph ? LGraph : (DX extends DNamedElement ? LNamedElement : (DX extends DAnnotation ? LAnnotation : (DX extends DGraphElement ? LGraphElement : (DX extends DMap ? LMap : (DX extends DModelElement ? LModelElement : (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (ERROR)))))))))))))))))))))))))))))))> = LX;\r\nexport type DtoW<DX extends GObject, WX = DX extends DEnumerator ? WEnumerator : (DX extends DAttribute ? WAttribute : (DX extends DReference ? WReference : (DX extends DRefEdge ? WRefEdge : (DX extends DExtEdge ? WExtEdge : (DX extends DDataType ? WDataType : (DX extends DClass ? WClass : (DX extends DStructuralFeature ? WStructuralFeature : (DX extends DParameter ? WParameter : (DX extends DOperation ? WOperation : (DX extends DEdge ? WEdge : (DX extends DEdgePoint ? WEdgePoint : (DX extends DGraphVertex ? WGraphVertex : (DX extends DModel ? WModel : (DX extends DValue ? WValue : (DX extends DObject ? WObject : (DX extends DEnumLiteral ? WEnumLiteral : (DX extends DPackage ? WPackage : (DX extends DClassifier ? WClassifier : (DX extends DTypedElement ? WTypedElement : (DX extends DVertex ? WVertex : (DX extends DVoidEdge ? WVoidEdge : (DX extends DVoidVertex ? WVoidVertex : (DX extends DGraph ? WGraph : (DX extends DNamedElement ? WNamedElement : (DX extends DAnnotation ? WAnnotation : (DX extends DGraphElement ? WGraphElement : (DX extends DMap ? WMap : (DX extends DModelElement ? WModelElement : (DX extends DUser ? WUser : (DX extends DPointerTargetable ? WPointerTargetable : (ERROR)))))))))))))))))))))))))))))))> = WX;\r\n// export type DtoW<DX extends GObject, WX = Omit<DtoW0<DX>, 'id'>> = WX;\r\nexport type LtoD<LX extends LPointerTargetable, DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LRefEdge ? DRefEdge : (LX extends LExtEdge ? DExtEdge : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LEdge ? DEdge : (LX extends LEdgePoint ? DEdgePoint : (LX extends LGraphVertex ? DGraphVertex : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LVertex ? DVertex : (LX extends LVoidEdge ? DVoidEdge : (LX extends LVoidVertex ? DVoidVertex : (LX extends LGraph ? DGraph : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : (LX extends LGraphElement ? DGraphElement : (LX extends LMap ? DMap : (LX extends LModelElement ? DModelElement : (LX extends LUser ? DUser : (LX extends LPointerTargetable ? DPointerTargetable : (ERROR)))))))))))))))))))))))))))))))> = DX;\r\nexport type LtoW<LX extends LPointerTargetable, WX = LX extends LEnumerator ? WEnumerator : (LX extends LAttribute ? WAttribute : (LX extends LReference ? WReference : (LX extends LRefEdge ? WRefEdge : (LX extends LExtEdge ? WExtEdge : (LX extends LDataType ? WDataType : (LX extends LClass ? WClass : (LX extends LStructuralFeature ? WStructuralFeature : (LX extends LParameter ? WParameter : (LX extends LOperation ? WOperation : (LX extends LEdge ? WEdge : (LX extends LEdgePoint ? WEdgePoint : (LX extends LGraphVertex ? WGraphVertex : (LX extends LModel ? WModel : (LX extends LValue ? WValue : (LX extends LObject ? WObject : (LX extends LEnumLiteral ? WEnumLiteral : (LX extends LPackage ? WPackage : (LX extends LClassifier ? WClassifier : (LX extends LTypedElement ? WTypedElement : (LX extends LVertex ? WVertex : (LX extends LVoidEdge ? WVoidEdge : (LX extends LVoidVertex ? WVoidVertex : (LX extends LGraph ? WGraph : (LX extends LNamedElement ? WNamedElement : (LX extends LAnnotation ? WAnnotation : (LX extends LGraphElement ? WGraphElement : (LX extends LMap ? WMap : (LX extends LModelElement ? WModelElement : (LX extends LUser ? WUser : (LX extends LPointerTargetable ? WPointerTargetable : (ERROR)))))))))))))))))))))))))))))))> = WX;\r\nexport type WtoD<IN extends WPointerTargetable, OUT = IN extends WEnumerator ? DEnumerator : (IN extends WAttribute ? DAttribute : (IN extends WReference ? DReference : (IN extends WRefEdge ? DRefEdge : (IN extends WExtEdge ? DExtEdge : (IN extends WDataType ? DDataType : (IN extends WClass ? DClass : (IN extends WStructuralFeature ? DStructuralFeature : (IN extends WParameter ? DParameter : (IN extends WOperation ? DOperation : (IN extends WEdge ? DEdge : (IN extends WEdgePoint ? DEdgePoint : (IN extends WGraphVertex ? DGraphVertex : (IN extends WModel ? DModel : (IN extends WValue ? DValue : (IN extends WObject ? DObject : (IN extends WEnumLiteral ? DEnumLiteral : (IN extends WPackage ? DPackage : (IN extends WClassifier ? DClassifier : (IN extends WTypedElement ? DTypedElement : (IN extends WVertex ? DVertex : (IN extends WVoidEdge ? DVoidEdge : (IN extends WVoidVertex ? DVoidVertex : (IN extends WGraph ? DGraph : (IN extends WNamedElement ? DNamedElement : (IN extends WAnnotation ? DAnnotation : (IN extends WGraphElement ? DGraphElement : (IN extends WMap ? DMap : (IN extends WModelElement ? DModelElement : (IN extends WUser ? DUser : (IN extends WPointerTargetable ? DPointerTargetable : (IN extends WViewElement ? DViewElement : (IN extends WViewTransientProperties ? DViewTransientProperties : (ERROR)))))))))))))))))))))))))))))))))> = OUT;\r\nexport type WtoL<IN extends WPointerTargetable, OUT = IN extends WEnumerator ? LEnumerator : (IN extends WAttribute ? LAttribute : (IN extends WReference ? LReference : (IN extends WRefEdge ? LRefEdge : (IN extends WExtEdge ? LExtEdge : (IN extends WDataType ? LDataType : (IN extends WClass ? LClass : (IN extends WStructuralFeature ? LStructuralFeature : (IN extends WParameter ? LParameter : (IN extends WOperation ? LOperation : (IN extends WEdge ? LEdge : (IN extends WEdgePoint ? LEdgePoint : (IN extends WGraphVertex ? LGraphVertex : (IN extends WModel ? LModel : (IN extends WValue ? LValue : (IN extends WObject ? LObject : (IN extends WEnumLiteral ? LEnumLiteral : (IN extends WPackage ? LPackage : (IN extends WClassifier ? LClassifier : (IN extends WTypedElement ? LTypedElement : (IN extends WVertex ? LVertex : (IN extends WVoidEdge ? LVoidEdge : (IN extends WVoidVertex ? LVoidVertex : (IN extends WGraph ? LGraph : (IN extends WNamedElement ? LNamedElement : (IN extends WAnnotation ? LAnnotation : (IN extends WGraphElement ? LGraphElement : (IN extends WMap ? LMap : (IN extends WModelElement ? LModelElement : (IN extends WUser ? LUser : (IN extends WPointerTargetable ? LPointerTargetable : (IN extends WViewElement ? LViewElement : (IN extends WViewTransientProperties ? LViewTransientProperties : (ERROR)))))))))))))))))))))))))))))))))> = OUT;\r\nexport type labelfunc = (e:LVoidEdge, segment: EdgeSegment, allNodes: LEdge[\"allNodes\"], allSegments: EdgeSegment[]) => PrimitiveType;\r\nexport enum CoordinateMode {\r\n    \"absolute\"              = \"absolute\",\r\n    \"relativePercent\"       = \"relative%\",\r\n    \"relativeOffset\"        = \"relativeOffset\",\r\n    \"relativeOffsetStart\"   = \"relativeOffsetStart\",\r\n    \"relativeOffsetEnd\"     = \"relativeOffsetEnd\",\r\n}\r\n\r\nexport enum EdgeHead {\r\n    composition = \"EdgeComposition\",\r\n    aggregation = \"EdgeAggregation\",\r\n    reference   = \"EdgeReference\",\r\n    extend      = \"EdgeExtend\"\r\n}\r\n\r\n\r\n\r\nlet canFireActions: boolean = true;\r\n@RuntimeAccessible\r\nexport class Constructors<T extends DPointerTargetable>{\r\n    private thiss: T;\r\n    private persist: boolean;\r\n    private callbacks: Function[];\r\n    fatherType?: Constructor;\r\n    constructor(t:T, father?: Pointer, persist: boolean = true, fatherType?: Constructor) {\r\n        persist = persist && canFireActions;\r\n        this.thiss = t;\r\n        this.persist = persist;\r\n        this.callbacks = [];\r\n        if (this.thiss.hasOwnProperty(\"father\")) {\r\n            (this.thiss as any).father = father;\r\n            persist && father && SetFieldAction.new(father, \"pointedBy\", PointedBy.fromID(t.id, \"father\" as any), '+=');\r\n        }\r\n        this.fatherType = fatherType;\r\n        if (this.persist) BEGIN()\r\n    }\r\n\r\n    static pause(): void { canFireActions = false; }\r\n    static resume(): void { canFireActions = true; }\r\n    // start(thiss: any): this { this.thiss = thiss; return this; }\r\n    end(simpledatacallback?: (d:T) => void): T {\r\n        console.log(\"doing callbacks\", this.callbacks, this);\r\n        if (simpledatacallback) simpledatacallback(this.thiss); // callback for setting primitive types, not pointers not context-dependant values (name being potentially invalid / chosen according to parent)\r\n        if (!this.persist) return this.thiss;\r\n        if (this.callbacks.length) {\r\n            setTimeout(() => {for (let cb of this.callbacks) cb();}, 0);\r\n        }\r\n        Log.ex(windoww.ddebug, \"stop\");\r\n        DPointerTargetable.pendingCreation[this.thiss.id] = this.thiss; // todo: removable?\r\n        END([CreateElementAction.new(this.thiss, true)])\r\n        /// todo: warning: there is a begin and end at constructor and end() methods, do not use BEGIN+END/TRANSACTION inside\r\n        return this.thiss; }\r\n\r\n\r\n    DState(): this {\r\n        let thiss: DState = this.thiss as any;\r\n        // todo: this must become a pointer to idlookup and fire a CreateNewElementAction\r\n        thiss.currentUser = DUser.new(undefined, false);\r\n        thiss.users = [thiss.currentUser.id];\r\n        thiss.models = [];\r\n        return this; }\r\n\r\n    DModelElement(): this { return this; }\r\n    DClassifier(): this { return this; }\r\n    DParameter(defaultValue?: any): this {\r\n        let thiss: DParameter = this.thiss as any;\r\n        thiss.defaultValue = defaultValue;\r\n        this.persist && thiss.father && SetFieldAction.new(thiss.father, \"parameters\", thiss.id, '+=', true);\r\n        return this; }\r\n    DStructuralFeature(): this {\r\n        if (this.thiss.className === 'DOperation') return this;\r\n        if (!this.persist) return this;\r\n        let thiss: DAttribute|DReference = this.thiss as any;\r\n        const _DClass: typeof DClass = windoww.DClass;\r\n        const _DValue: typeof DValue = windoww.DValue;\r\n\r\n\r\n        let targets: DClass[] = [_DClass.fromPointer(thiss.father)];\r\n        let alreadyParsed: Dictionary<Pointer, DClass> = {};\r\n        while(targets.length) {\r\n            let nextTargets = [];\r\n            for (let target of targets) {\r\n                if (alreadyParsed[target.id]) continue;\r\n                alreadyParsed[target.id] = target;\r\n                for(let ext of target.extendedBy) nextTargets.push(_DClass.fromPointer(ext));\r\n            }\r\n            targets = nextTargets;\r\n        }\r\n        this.persist && this.callbacks.push(()=>{\r\n            for(let pointer in alreadyParsed) {\r\n                for (let instance of alreadyParsed[pointer].instances) {\r\n                    _DValue.new(thiss.name, thiss.id, undefined, instance);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        return this;\r\n    }\r\n    DReference(): this {\r\n        let thiss: DReference = this.thiss as any;\r\n        // update father's collections (pointedby's here are set automatically)\r\n        this.persist && thiss.father && SetFieldAction.new(thiss.father, \"references\", thiss.id, '+=', true);\r\n        return this;\r\n    }\r\n    DAttribute(): this {\r\n        let thiss: DAttribute = this.thiss as any;\r\n        // update father's collections (pointedby's here are set automatically)\r\n        this.persist && thiss.father && SetFieldAction.new(thiss.father, \"attributes\", thiss.id, '+=', true);\r\n        return this; }\r\n    DDataType(): this { return this; }\r\n    DObject(instanceoff?: DObject[\"instanceof\"]): this {\r\n        let thiss: DObject = this.thiss as any;\r\n\r\n        if (this.persist && thiss.father) {\r\n            if (this.fatherType!.name === \"DModel\") {\r\n                this.persist && thiss.father && SetFieldAction.new(thiss.father as Pointer<DModel>, \"objects\", thiss.id, '+=', true);\r\n            }\r\n            else {\r\n                // object containing object is not in any direct child collection. access through values\r\n                // this.persist && thiss.father && SetFieldAction.new(thiss.father as Pointer<DObject>, \"subpackages\", thiss.id, '+=', true);\r\n            }\r\n        }\r\n\r\n        if (this.persist && instanceoff) this.callbacks.push( () => {\r\n            (LPointerTargetable.wrap(thiss) as LObject).instanceof = instanceoff as any;\r\n        })\r\n        else thiss.instanceof = instanceoff || null;\r\n        //old ver: this.persist && instanceoff && SetFieldAction.new(thiss.id, \"instanceof\", instanceoff, undefined, true);\r\n        // update father's collections (pointedby's here are set automatically)\r\n        // this.persist && instanceoff && SetFieldAction.new(instanceoff, \"instances\", thiss.id, '+=', true);\r\n\r\n        return this; }\r\n\r\n    DValue(instanceoff?: DValue[\"instanceof\"], val?: DValue[\"values\"], isMirage?: DValue[\"isMirage\"]): this {\r\n        let thiss: DValue = this.thiss as any; thiss.edges = [];\r\n        thiss.values = val || [];\r\n        thiss.instanceof = instanceoff;\r\n        thiss.isMirage = isMirage || false;\r\n\r\n        // update father's collections (pointedby's here are set automatically)\r\n        if (this.persist && instanceoff) {\r\n            SetFieldAction.new(thiss.id, \"instanceof\", instanceoff, undefined, true);\r\n            SetFieldAction.new(instanceoff as Pointer<DAttribute>, \"instances\", thiss.id, '+=', true);\r\n        }\r\n        else thiss.instanceof = instanceoff;\r\n        this.persist && thiss.father && SetFieldAction.new(thiss.father, \"features\", thiss.id, '+=', true);\r\n        return this; }\r\n\r\n    DAnnotation(source?: DAnnotation[\"source\"], details?: DAnnotation[\"details\"]): this {\r\n        const thiss: DAnnotation = this.thiss as any;\r\n        thiss.source = source || '';\r\n        thiss.details = details || [];\r\n        if (this.persist && details) {\r\n            //BEGIN() Constructors is always already inside a transaction\r\n            for (let det of details) SetFieldAction.new(det, \"pointedBy\", PointedBy.fromID(thiss.id, \"details\"), '+=');\r\n            // update father's collections (pointedby's here are set automatically)\r\n            this.persist && thiss.father && SetFieldAction.new(thiss.father, \"annotations\", thiss.id, '+=', true);\r\n            //END()\r\n        }\r\n        return this; }\r\n\r\n    static makeID(): Pointer{ return new Date().getTime() + \"_\" + DUser.current + \"_\" + (DPointerTargetable.maxID++) }\r\n    DPointerTargetable(isUser: boolean = false, id?: string): this {\r\n        const thiss: DPointerTargetable = this.thiss as any;\r\n        thiss.id = id || Constructors.makeID();\r\n        console.log(\"DPointerTargetable id\", {id, tid: thiss.id})\r\n\r\n        thiss.className = thiss.constructor.name;\r\n        // this.className = thiss.className;\r\n        if (this.persist) {\r\n            // no pointedBy\r\n        }\r\n        return this; }\r\n\r\n    DUser(id?: DUser[\"id\"]): this {\r\n        const thiss: DPointerTargetable = this.thiss as any;\r\n        thiss.id = id ||  new Date().getTime() + '_USER_' + (DPointerTargetable.maxID++);\r\n        if (this.persist) {\r\n            // no pointedBy\r\n        }\r\n        return this; }\r\n\r\n    DNamedElement(name?: DNamedElement[\"name\"]): this {\r\n        const thiss: DNamedElement = this.thiss as any;\r\n        thiss.name = (name !== undefined) ? name || '' : thiss.constructor.name.substring(1) + \" 1\";\r\n        if (this.persist) {\r\n            // no pointedBy\r\n        }\r\n        return this; }\r\n\r\n    DTypedElement(type?: DTypedElement[\"type\"]): this {\r\n        const thiss: DTypedElement = this.thiss as any;\r\n        thiss.type = type as Pointer<DClassifier, 1, 1, LClassifier>;\r\n        if (this.persist) {\r\n            type && SetFieldAction.new(type, \"pointedBy\", PointedBy.fromID(thiss.id, \"type\"), '+=');\r\n        }\r\n        return this; }\r\n\r\n    DPackage(uri?: DPackage[\"uri\"], prefix?: DPackage[\"prefix\"]): this {\r\n        const thiss: DPackage = this.thiss as any;\r\n        thiss.uri = uri || '';// || 'org.jodel-react.username';\r\n        thiss.prefix = prefix || '';\r\n        if (this.persist) {\r\n            // no pointedBy\r\n            // update father's collections (pointedby's here are set automatically)\r\n            if (this.persist && thiss.father) {\r\n                if (this.fatherType!.name === \"DModel\") {\r\n                    this.persist && thiss.father && SetFieldAction.new(thiss.father as Pointer<DModel>, \"packages\", thiss.id, '+=', true);\r\n                }\r\n                else {\r\n                    this.persist && thiss.father && SetFieldAction.new(thiss.father as Pointer<DPackage>, \"subpackages\", thiss.id, '+=', true);\r\n                }\r\n            }\r\n        }\r\n        return this; }\r\n\r\n    DModel(instanceoff?: DModel[\"instanceof\"], isMetamodel?: DModel[\"isMetamodel\"]): this {\r\n        const thiss: DModel = this.thiss as any;\r\n        thiss.packages = []; // packages;\r\n        thiss.instanceof = instanceoff || null;\r\n        thiss.isMetamodel = isMetamodel || false;\r\n        if (this.persist) {\r\n            if (instanceoff) SetFieldAction.new(instanceoff, \"pointedBy\", PointedBy.fromID(thiss.id, \"instanceof\"), '+=');\r\n            // instanceoff && SetFieldAction.new(instanceoff, 'models', thiss.id, '+=', true);\r\n            SetRootFieldAction.new(isMetamodel ? \"m2models\" : \"m1models\", thiss.id, \"+=\", true);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    DOperation(exceptions: DOperation[\"exceptions\"] = [], implementation?: string/*, parameters: DOperation[\"parameters\"] = []*/): this {\r\n        const thiss: DOperation = this.thiss as any;\r\n        // thiss.parameters = parameters;\r\n        thiss.implementation = implementation || 'return \"default placeholder function called\";'\r\n        thiss.exceptions = exceptions;\r\n        if (this.persist) {\r\n            //BEGIN()\r\n            // if (parameters) for (let par of parameters) SetFieldAction.new(par, \"pointedBy\", PointedBy.fromID(thiss.id, \"parameters\"), '+=');\r\n            if (exceptions) for (let exc of exceptions) SetFieldAction.new(exc, \"pointedBy\", PointedBy.fromID(thiss.id, \"exceptions\"), '+=');\r\n            // update father's collections (pointedby's here are set automatically)\r\n            this.persist && thiss.father && SetFieldAction.new(thiss.father, \"operations\", thiss.id, '+=', true);\r\n            //END()\r\n        }\r\n        return this; }\r\n\r\n    DClass(isInterface: DClass[\"interface\"] = false, isAbstract: DClass[\"abstract\"] = false, isPrimitive: LClassifier[\"isPrimitive\"] = false,\r\n           partial: DClass[\"partial\"] = false, partialdefaultname: DClass[\"partialdefaultname\"] = ''): this {\r\n        const thiss: DClass = this.thiss as any;\r\n        thiss.interface = isInterface;\r\n        thiss.abstract = isAbstract;\r\n        thiss.isPrimitive = isPrimitive;\r\n        thiss.partial = partial;\r\n        thiss.partialdefaultname = partialdefaultname;\r\n        // thiss.isClass = !isPrimitive;\r\n        // thiss.isEnum = false;\r\n\r\n        if (this.persist) {\r\n            // no pointedBy\r\n            // update father's collections (pointedby's here are set automatically)\r\n            this.persist && thiss.father && SetFieldAction.new(thiss.father, \"classifiers\", thiss.id, '+=', true);\r\n        }\r\n        return this; }\r\n\r\n    DEnumLiteral(value?: DEnumLiteral[\"value\"]): this { // vv4\r\n        const thiss: DEnumLiteral = this.thiss as any;\r\n        thiss.value = value as any; // undef is ok, handled in getter as automatic ordinal index\r\n        thiss.literal = thiss.name;\r\n        if (this.persist) {\r\n            // no pointedBy?\r\n            // update father's collections (pointedby's here are set automatically)\r\n            this.persist && thiss.father && SetFieldAction.new(thiss.father, \"literals\", thiss.id, '+=', true);\r\n        }\r\n        return this; }\r\n\r\n    DEnumerator(/*set it from DLiteral.new() instead literals: DEnumerator[\"literals\"] = []*/): this {\r\n        const thiss: DEnumerator = this.thiss as any;\r\n        // thiss.literals = literals;\r\n        // thiss.isClass = false;\r\n        // thiss.isEnum = true;\r\n        if (this.persist) {\r\n            // if (literals) for (let lit of literals) SetFieldAction.new(lit, \"pointedBy\", PointedBy.fromID(thiss.id, \"literals\"), '+=');\r\n            // update father's collections (pointedby's here are set automatically)\r\n            this.persist && thiss.father && SetFieldAction.new(thiss.father, \"classifiers\", thiss.id, '+=', true);\r\n        }\r\n        return this; }\r\n    DEdgePoint(): this { return this; }\r\n    DEdge(): this {\r\n        let thiss: DVoidEdge = this.thiss as any;\r\n        return this; }\r\n    DVertex(): this { return this; }\r\n    DVoidEdge(start: DGraphElement[\"id\"] | DGraphElement | LGraphElement | DModelElement[\"id\"] | DModelElement | LModelElement,\r\n          end: DGraphElement[\"id\"] | DGraphElement | LGraphElement | DModelElement[\"id\"] | DModelElement | LModelElement,\r\n          longestLabel: DEdge[\"longestLabel\"], labels: DEdge[\"labels\"]): this {\r\n        const thiss: DVoidEdge = this.thiss as any;\r\n        let startid: DGraphElement[\"id\"] = (windoww.LGraphElement as typeof LGraphElement).getNodeId(start);\r\n        let endid: DGraphElement[\"id\"] = (windoww.LGraphElement as typeof LGraphElement).getNodeId(end);\r\n        Log.ex(!startid || !endid, \"cannot create an edge without start or ending nodes\", {start, end, startid, endid});\r\n        thiss.midnodes = [];\r\n        thiss.midPoints = []; // the logic part which instructs to generate the midnodes\r\n        thiss.start = startid;\r\n        thiss.end = endid;\r\n        // thiss.labels = undefined;\r\n        let ll: labelfunc = (e: LVoidEdge, s: EdgeSegment, allNodes: LGraphElement[], allSegments: EdgeSegment[]\r\n        ) => /*defining the edge label (e.start.model as any)?.name + \" ~ \" + (e.end.model as any)?.name */\" (\" + s.length.toFixed(1) + \")\";\r\n        thiss.longestLabel = ll;\r\n        if (this.persist) {\r\n            startid && SetFieldAction.new(startid, \"pointedBy\", PointedBy.fromID<DVoidEdge>(thiss.id, \"start\"), '+=');\r\n            endid && SetFieldAction.new(endid, \"pointedBy\", PointedBy.fromID<DVoidEdge>(thiss.id, \"end\"), '+=');\r\n        }\r\n        return this; }\r\n    DExtEdge(): this { return this; }\r\n    DRefEdge(): this { return this; }\r\n\r\n    DGraphElement(model: DGraphElement[\"model\"]|null|undefined, parentNodeID: DGraphElement[\"father\"]|undefined, parentgraphID: DGraphElement[\"graph\"]|undefined,\r\n                  htmlindex: number): this {\r\n        const thiss: DGraphElement = this.thiss as any;\r\n        if (parentNodeID) thiss.father = parentNodeID;\r\n        if (parentgraphID) thiss.graph = parentgraphID;\r\n        thiss.model = model||undefined;\r\n        thiss.subElements = [];\r\n        thiss.favoriteNode = false;\r\n        thiss.zIndex = htmlindex;\r\n        //  if (nodeID) thiss.id = nodeID;\r\n        if (this.persist) {\r\n            model && SetFieldAction.new(model, \"pointedBy\", PointedBy.fromID<DGraphElement>(thiss.id, \"model\"), '+=');\r\n            parentgraphID && SetFieldAction.new(parentgraphID, \"pointedBy\", PointedBy.fromID<DGraphElement>(thiss.id, \"graph\"), '+=');\r\n            parentNodeID && SetFieldAction.new(thiss.father, \"pointedBy\", PointedBy.fromID<DGraphElement>(thiss.id, \"father\"), '+=');\r\n            // update collections (pointedby's here are set automatically)\r\n            parentNodeID && SetFieldAction.new(thiss.father, \"subElements\", thiss.id, '+=', true);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    DViewElement(name: string, jsxString: string, defaultVSize?: GraphSize, usageDeclarations: string = '', constants: string = '',\r\n                 preRenderFunc: string = '', appliableToClasses: string[] = [], oclApplyCondition: string = '', priority: number = 1): this {\r\n        const thiss: DViewElement = this.thiss as any;\r\n        thiss.name = name;\r\n        thiss.appliableToClasses = appliableToClasses;\r\n        thiss.jsxString = jsxString;\r\n        thiss.usageDeclarations = usageDeclarations;\r\n        thiss.constants = constants;\r\n        thiss.preRenderFunc = preRenderFunc;\r\n        // thiss.__transient = new DViewTransientProperties();\r\n        thiss.subViews = [];\r\n        thiss.oclApplyCondition = '';\r\n        thiss.explicitApplicationPriority = priority;\r\n        thiss.defaultVSize = defaultVSize || new GraphSize(0, 0, 351, 201);\r\n        thiss.size = {};\r\n        thiss.storeSize = false;\r\n        thiss.lazySizeUpdate = false;\r\n        thiss.constraints = [];\r\n        //thiss.useSizeFrom = EuseSizeFrom.node;\r\n        // thiss.adaptHeight = false;\r\n        // thiss.adaptWidth = false;\r\n\r\n\r\n        thiss.draggable = true;\r\n        thiss.resizable = true;\r\n        thiss.display = 'flex' as any;\r\n        thiss.width = 200;\r\n        thiss.height = 100;\r\n        thiss.adaptWidth = false;\r\n        thiss.adaptHeight = false; //'fit-content';\r\n\r\n        thiss.edgeStartOffset = new GraphPoint(50, 50);\r\n        thiss.edgeEndOffset = new GraphPoint(50, 50);\r\n        thiss.edgeStartOffset_isPercentage = true;\r\n        thiss.edgeEndOffset_isPercentage = true;\r\n        thiss.edgeStartStopAtBoundaries = true;\r\n        thiss.edgeEndStopAtBoundaries = true;\r\n        thiss.bendingMode = EdgeBendingMode.Bezier_quadratic;\r\n        thiss.edgeGapMode = EdgeGapMode.gap;\r\n        thiss.edgePointCoordMode = CoordinateMode.relativeOffset;\r\n        /// edge\r\n\r\n        thiss.edgeHeadSize = new GraphPoint(20, 20);\r\n        thiss.edgeTailSize = new GraphPoint(20, 20);\r\n\r\n        if (this.persist) {\r\n            // no pointedBy?\r\n        }\r\n        return this;\r\n    }\r\n\r\n    DViewPoint(): this {\r\n        return this;\r\n    }\r\n\r\n    static DGraph_maxID: number = 0;\r\n    public static DGraph_makeID(modelid: DGraph[\"model\"]): Pointer<DGraph, 1, 1, LGraph> {\r\n        if (!modelid) modelid = \"shapeless\";\r\n        return modelid + '^graph' + Constructors.DGraph_maxID++;\r\n    }\r\n    DGraph(): this {\r\n        const thiss: DGraph = this.thiss as any;\r\n        thiss.graph = thiss.id;\r\n        thiss.zoom = new GraphPoint(1, 1);\r\n        thiss.graphSize = new GraphSize(0, 0, 0, 0);  // GraphSize.apply(this, [0, 0, 0 ,0]);\r\n        thiss._subMaps = {zoom: true, graphSize: true}\r\n        if (this.persist) {\r\n            // no pointedBy?\r\n        }\r\n        return this; }\r\n\r\n    DVoidVertex(defaultVSize?: InitialVertexSize): this {\r\n        const thiss: DVoidVertex = this.thiss as any;\r\n        /*[]{}<>\r\n?'^~\r\n&&||\\+\r\n6nb*/\r\n        let defaultVSizeObj: InitialVertexSizeObj | undefined;\r\n        let defaultVSizeFunc: InitialVertexSizeFunc;\r\n        thiss.isResized = false;\r\n        let func: undefined | (() => void);\r\n        if (defaultVSize) {\r\n            func = () => {\r\n            BEGIN() // this executes after the Constructor.end() so it's necessary to start a new transaction\r\n            // fromPointer because i need to pick the one from the store that might be updated\r\n            //    with a view or other data instead of the D version i have here\r\n            let lvertex: LVoidVertex = LPointerTargetable.fromD(thiss);\r\n            if (typeof defaultVSize !== \"function\") {\r\n                defaultVSizeObj = defaultVSize;\r\n                //defaultVSizeFunc = () => defaultVSizeObj;\r\n            }\r\n            else {\r\n                defaultVSizeFunc = defaultVSize;\r\n                try { defaultVSizeObj = defaultVSizeFunc(lvertex.father, lvertex); }\r\n                catch (e) { Log.e(\"Error in user DefaultVSize function:\", {e, defaultVSizeFunc, txt:defaultVSizeFunc.toString()}); }\r\n            }\r\n            if (defaultVSizeObj) {\r\n                if (!this.persist) lvertex = thiss as any;\r\n                if (defaultVSizeObj.x !== undefined) lvertex.x = defaultVSizeObj.x;\r\n                if (defaultVSizeObj.y !== undefined) lvertex.y = defaultVSizeObj.y;\r\n                if (defaultVSizeObj.w !== undefined) lvertex.w = defaultVSizeObj.w;\r\n                if (defaultVSizeObj.h !== undefined) lvertex.h = defaultVSizeObj.h;\r\n\r\n                if ((defaultVSizeObj as any).index >= 0 && this.persist && thiss.className === \"DEdgePoint\") {\r\n                    let updateEPindex = () => {\r\n                        let lep = lvertex as LEdgePoint;\r\n                        let le: LVoidEdge = lep.father;\r\n                        let de: DVoidEdge = le.__raw;\r\n                        let subelements = [...de.subElements];\r\n                        let presubelements = [...subelements]; // a\r\n                        U.arrayRemoveAll(subelements, thiss.id);\r\n                        subelements.splice(defaultVSizeObj?.index as number, 0, thiss.id);\r\n                        // console.log(\"setting subelements\", {presubelements, subelements, de, le, thiss});\r\n                        le.subElements = subelements as any;\r\n                        // todo: this might break \"pointedBy\" x984\r\n                    }\r\n                    // updateEPindex();\r\n                    // it's already wrapped in a callback\r\n                    // but needs a second one because after node is created, id is auto-appended to this collection\r\n                    // and i need to rewrite that append by inserting my own customized index position\r\n                    console.log(\"setting subelements 0\", {updateEPindex});\r\n                    setTimeout(updateEPindex, 0);\r\n                    // NB: do not use this.callbacks.push because the body of this func is executed after Constructors.end() so end() can never find and execute it.\r\n                }\r\n            }\r\n            END() }\r\n        }\r\n\r\n        // func = ... the if (defaultVSizeObj) above\r\n        if (func) {\r\n            if (this.persist) this.callbacks.push(func as Function); // because i want to be sure the parent node exists too, not just this node.\r\n            // if (this.persist) this.callbacks.push(() => setTimeout(func as Function, 1)); // because i want to be sure the parent node exists too, not just this node.\r\n            else func();\r\n        }\r\n\r\n        if (this.persist) {\r\n            // no pointedBy?\r\n        }\r\n        return this; }\r\n\r\n\r\n}\r\n// export const Constructors = new _Constructors();\r\n\r\n@RuntimeAccessible\r\nexport class DPointerTargetable extends RuntimeAccessibleClass {\r\n    static defaultComponent: (ownProps: GObject, children?: (string | React.Component)[]) => React.ReactElement;\r\n    public static maxID: number = 0;\r\n    public static logic: typeof LPointerTargetable;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    _storePath?: string[];\r\n    _subMaps?: Dictionary<string, boolean>;\r\n    id!: Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    // pointedBy: DocString<'path in store'>[] = []; // NB: potrebbe contenere puntatori invalidi.\r\n    // se viene cancellato un intero oggetto A che contiene una lista di puntatori, gli oggetti che puntano ad A rimuovono A dai loro \"poitnedBy\",\r\n    // ma gli oggetti puntati da A tramite sotto-oggetti o attributi (subviews...) non vengono aggiornati in \"pointedby\"\r\n    pointedBy: PointedBy[] = [];\r\n    public className!: string;\r\n    static pendingCreation: Dictionary<Pointer, DPointerTargetable> = {};\r\n\r\n\r\n    static defaultname<L extends LModelElement = LModelElement>(startingPrefix: string | ((meta:L)=>string), father?: Pointer | DPointerTargetable | ((a:string)=>boolean), metaptr?: Pointer | null): string {\r\n        let lfather: LModelElement;\r\n        // startingPrefix = \"model_\", father = ((name: string) => !dmodelnames.includes(name))\r\n        if (father) {\r\n            if (typeof father === \"string\" || (father as any).className) { // Pointer or D\r\n                lfather = LPointerTargetable.wrap(father as DModelElement) as LModelElement;\r\n                if (!lfather) return (typeof startingPrefix === \"string\" ? startingPrefix : \"unnamed_elem\"); // can happen during parse when father ptr exist but it's not in store yet. not a prob\r\n                if (typeof startingPrefix !== \"string\") {\r\n                    let meta = LPointerTargetable.from(metaptr as Pointer);\r\n                    startingPrefix = startingPrefix(meta as L);\r\n                }\r\n                const childrenNames: (string)[] = lfather.children.map(c => (c as LNamedElement).name);\r\n                return U.increaseEndingNumber(startingPrefix + '0', false, false, (newname) => childrenNames.indexOf(newname) >= 0);\r\n            }\r\n            else {\r\n                let condition: (a:string)=>boolean = father as any;\r\n                return U.increaseEndingNumber(startingPrefix + '0', false, false, condition);\r\n            }\r\n        }\r\n        return startingPrefix + \"1\"; }\r\n\r\n    public static new(...a:any): DPointerTargetable { //father?: Pointer, persist: boolean = false, fatherType?: Constructor, ...a:any): DPointerTargetable {\r\n        Log.exx(\"cannot instantiate abstract class DPointerTargetable\");\r\n        return null as any;\r\n        // return new Constructors(new DPointerTargetable('dwc'), father, persist, fatherType).DPointerTargetable().end();\r\n    }\r\n    constructor(fakearg_detectwrongcalls:'dwc') {\r\n        super();\r\n        if (!fakearg_detectwrongcalls) throw new Error( \"cannot build D-objects using new keyword, use the static D-Class.new method instead\");\r\n    }\r\n\r\n    static fromL<LX extends LPointerTargetable,\r\n        DX = LX extends LEnumerator ? LEnumerator : (LX extends LAttribute ? LAttribute : (LX extends LReference ? LReference : (LX extends LRefEdge ? LRefEdge : (LX extends LExtEdge ? LExtEdge : (LX extends LDataType ? LDataType : (LX extends LClass ? LClass : (LX extends LStructuralFeature ? LStructuralFeature : (LX extends LParameter ? LParameter : (LX extends LOperation ? LOperation : (LX extends LEdge ? LEdge : (LX extends LEdgePoint ? LEdgePoint : (LX extends LGraphVertex ? LGraphVertex : (LX extends LModel ? LModel : (LX extends LValue ? LValue : (LX extends LObject ? LObject : (LX extends LEnumLiteral ? LEnumLiteral : (LX extends LPackage ? LPackage : (LX extends LClassifier ? LClassifier : (LX extends LTypedElement ? LTypedElement : (LX extends LVertex ? LVertex : (LX extends LVoidEdge ? LVoidEdge : (LX extends LVoidVertex ? LVoidVertex : (LX extends LGraph ? LGraph : (LX extends LNamedElement ? LNamedElement : (LX extends LAnnotation ? LAnnotation : (LX extends LGraphElement ? LGraphElement : (LX extends LMap ? LMap : (LX extends LModelElement ? LModelElement : (LX extends LUser ? LUser : (LX extends LPointerTargetable ? LPointerTargetable : (ERROR)))))))))))))))))))))))))))))))\r\n        >(data: LX): DX {\r\n        return data.__raw as any;\r\n    }\r\n\r\n\r\n    static fromPointer<// LOW extends number, UPP extends number | 'N',\r\n        T extends Pointer | Pointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        DDD extends (T extends Pointer<infer D> ? D : 'undefined D'),\r\n        LOW extends (T extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (T extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n\r\n        DDDARR extends (T extends Pointer<infer D>[] ? D : 'undefined_DARR'),\r\n        LOWARR extends (T extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (T extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n\r\n        RET = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n        INFERRED = {ret: RET, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR},>(ptr: T, s?: DState)\r\n        : RET {\r\n        s = s || store.getState();\r\n        if (Array.isArray(ptr)) {\r\n            return ptr.map( (p: Pointer) => DPointerTargetable.fromPointer(p, s)) as any;\r\n        }\r\n        if (typeof ptr !== \"string\") { ptr = (ptr as any)?.id; }\r\n        if (typeof ptr !== \"string\") { throw new Error(\"wrong parameter in DPointerTargetable.fromPointers()\"); }\r\n        return s.idlookup[ptr as string] as any;\r\n    }\r\n    static from<// LOW extends number, UPP extends number | 'N',\r\n        PTR extends Pointer | Pointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        DDD extends (PTR extends Pointer<infer D> ? D : 'undefined D'),\r\n        LOW extends (PTR extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (PTR extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n\r\n        DDDARR extends (PTR extends Pointer<infer D>[] ? D : 'undefined_DARR'),\r\n        LOWARR extends (PTR extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (PTR extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n\r\n        LX extends LPointerTargetable,\r\n\r\n        RETPTR = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n\r\n\r\n        // DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : ('ERROR'))))))))))))))))),\r\n        DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LRefEdge ? DRefEdge : (LX extends LExtEdge ? DExtEdge : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LEdge ? DEdge : (LX extends LEdgePoint ? DEdgePoint : (LX extends LGraphVertex ? DGraphVertex : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LVertex ? DVertex : (LX extends LVoidEdge ? DVoidEdge : (LX extends LVoidVertex ? DVoidVertex : (LX extends LGraph ? DGraph : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : (LX extends LGraphElement ? DGraphElement : (LX extends LMap ? DMap : (LX extends LModelElement ? DModelElement : (LX extends LUser ? DUser : (LX extends LPointerTargetable ? DPointerTargetable : (ERROR))))))))))))))))))))))))))))))),\r\n        RET = DX extends 'ERROR' ? RETPTR : (RETPTR extends DX ? RETPTR : DX),\r\n        INFERRED = {ret: RET, RETPTR:RETPTR, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR, LX:LX, DX:DX}>(ptr: PTR | LX, s?: DState)\r\n        : RET {\r\n        s = s || store.getState();\r\n        return s.idlookup[ptr as string] as any;\r\n    }\r\n    static from0(a: any, ...aa: any): any { return null; }\r\n    static writeable<LX extends LPointerTargetable, WX = LtoW<LX>>(l: LX): WX { return l as any; }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, DPointerTargetable);\r\n/*\r\nlet d0: LClassifier = null as any;\r\nlet ptrr: Pointer<DPackage, 1, 'N', LPackage> = null as any;\r\nlet ptr1: Pointer<DPackage, 1, 1, LPackage> = null as any;\r\nlet dd = DPointerTargetable.from(d0.id);\r\n*/\r\n\r\n\r\n/*\r\ntype Pack1<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L>, R = {D:D, L:L, P:P} > = P|D|L\r\ntype PackArr<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L> , ARR = Pack1<D>> = (ARR)[];\r\ntype Pack<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L> , ARR = Pack1<D>> = ARR | (ARR)[];*/\r\n\r\n\r\n\r\n@RuntimeAccessible\r\nexport class Pointers{\r\n    static filterValid<P extends (Pointer | Pointer[]) = any, RET = P extends Pointer[] ? P : P | null>\r\n    (p: P): P | null {\r\n        const pointerval: DPointerTargetable | DPointerTargetable[] = DPointerTargetable.from(p);\r\n        if (Array.isArray(pointerval)) return pointerval.filter( p => !!p).map( p => p.id) as P;\r\n        if (!pointerval) return null;\r\n        return pointerval.id as P; }\r\n\r\n    fromArr<D extends DPointerTargetable, L extends LPointerTargetable, P extends Pointer> (val: (P | D | L | null | undefined)[] |  (P | D | L | null | undefined)): P[] {\r\n        if (!val) val = [];\r\n        if (!Array.isArray(val)) { val = [val]; }\r\n        if (!val.length) { return []; }\r\n        if ((val[0] as any).id) { val = (val as any as (LModelElement | DModelElement)[]).filter(v => !!v).map( (v) => v.id) as any[]; }\r\n        return val.filter( v => !!v) as any[]; }\r\n\r\n    fromm<D extends DPointerTargetable, L extends LPointerTargetable, P extends Pointer> (val: (P | D | L)): P | null { return !val ? null : (val as any).id; }\r\n\r\n    from0<// LOW extends number, UPP extends number | 'N',\r\n        PTR extends Pointer | Pointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        // DDD extends (PTR extends Pointer<infer D> ? D : 'undefined_D'),\r\n        LOW extends (PTR extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (PTR extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n        DDD extends (PTR extends Pointer<any, number, any, infer LL> ? LL : 'undefined_L'),\r\n\r\n        LOWARR extends (PTR extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (PTR extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n        DDDARR extends (PTR extends Pointer<any, any, any, infer LL>[] ? LL : 'undefined_LARR'),\r\n\r\n        DX extends DPointerTargetable,\r\n        LX extends LPointerTargetable,\r\n        WX extends WPointerTargetable,\r\n        RETPTR = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n\r\n\r\n        // DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : ('ERROR'))))))))))))))))),\r\n        LXX = DtoL<DX>,\r\n        DXX = LtoD<LX>,\r\n        LXFinal = LXX extends 'ERROR' ? LX : LXX,\r\n        DXFinal = DXX extends 'ERROR' ? DX : DXX,\r\n        RET = {d: DXFinal, l:LXFinal}, // Pointer<DX, 0 | 1, 1 | 'N', LX>\r\n        INFERRED = {ret: RET, RETPTR: RETPTR, LXX: LXX, DXX: DXX, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR, LX:LX, DX:DX}>(data: LX | DX | WX)\r\n        : INFERRED {\r\n        return null as any;\r\n    }\r\n\r\n\r\n    static from00<\r\n        // LOW extends number, UPP extends number | 'N',\r\n        // DDD extends (PTR extends Pointer<infer D> ? D : 'undefined_D'),\r\n        DWL extends {id: any},\r\n        // PCK extends (T extends Pack<infer PPP> ? PPP : never),\r\n        //ISARR extends (T extends any[] ? true : false),\r\n        // PCK1 extends (T extends any[] ? null : T extends Pack1<infer PPP> ? PPP : never), //         PCK1 extends (T extends any[] ? true : false),\r\n        // PCKA extends (T extends PackArr<infer PPP> ? PPP : 'undefined_arrpack'),\r\n        // PTR extends DWL[\"id\"], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        // T extends DWL | DWL[] | null | undefined,\r\n        /*DX extends (PTR extends Pointer<infer D0> ? D0 : 'undefined_D'),\r\n        LOW extends (PTR extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (PTR extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n        LX extends (PTR extends Pointer<any, number, any, infer LL> ? LL : 'undefined_L'),\r\n\r\n        LOWARR extends (PTR extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (PTR extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n        DDDARR extends (PTR extends Pointer<any, any, any, infer LL>[] ? LL : 'undefined_LARR'),\r\n        RET = DX extends DPointerTargetable ? ( LOW extends number ? ( UPP extends number ? ( LX extends LPointerTargetable ? Pointer<DX, LOW, UPP, LX> : '_notret_L_') : '_notret_UPP_') : '_notret_LOW_') : '_notret_D_'\r\n        */\r\n        PTRPARAM = Pointer | Pointer[],\r\n        T = Exclude<DWL | DWL[] | PTRPARAM, unknown[]>,\r\n        // @ts-ignore\r\n        PTR = T extends null ? null : T extends undefined ? null : (T extends PTRPARAM ? T : (T extends any[] ? T[number]['id'][] : T['id'])),\r\n        // RET extends Pointer<DPointerTargetable, any, any, LPointerTargetable> = T extends DWL ? DWL[\"id\"] : (T extends DWL[] ? DWL[\"id\"] : null),\r\n        // INF = { PCK:PCK, ISARR: ISARR,  PTR: PTR, DWL: DWL, RET: RET}, // {DD:DD, LL: LL}//\r\n        >(data: T | T[] ): PTR { // RET | RET[] {\r\n        if (Array.isArray(data)) return data.filter(d => !!d).map(d => (typeof d === \"string\" ? d : (d as any as DWL).id)) as any;\r\n        else return (data ? (data as any).id : null);\r\n    } // stavolta fai infer so D|l.id\r\n\r\n\r\n    public static from<DX extends DPointerTargetable>(data:DX): DX[\"id\"]; // | {D:any};\r\n    public static from<DX extends DPointerTargetable>(data:DX[]): DX[\"id\"][]; // | {DD:any};\r\n    public static from<LX extends LPointerTargetable>(data:LX): LX[\"id\"]; // | {L:any};\r\n    public static from<LX extends LPointerTargetable>(data:LX[]): LX[\"id\"][]; // | {LL:any};\r\n    public static from<WX extends WPointerTargetable>(data:WX): WX[\"id\"]; // | {W:any};\r\n    public static from<WX extends WPointerTargetable>(data:WX[]): WX[\"id\"][]; // | {WW:any};\r\n    public static from<PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable>>(data:PTR): PTR; // | {P:any};\r\n    public static from<PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable>>(data:PTR[]): PTR[]; // | {PP:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack1<T>): Pointer<LtoD<T>, 1, 1, T>; //{TEST1:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack1<T>[]): Pointer<LtoD<T>, 1, 1, T>[]; //{TEST111:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack<T>): Pointer<LtoD<T>, 1, 1, T>[]; //{TEST0:any};\r\n    public static from<P extends Pack<T> | undefined, T extends LPointerTargetable>(data: P): Pointer<LtoD<T>, 1, 1, T>[]; //{TEST0:any};\r\n    public static from<T extends LPointerTargetable>(data:PackArr<T>): Pointer<LtoD<T>, 1, 1, T>[]; //{TESTARR:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack1<T[]>): Pointer<LtoD<T>, 1, 1, T>; //{TEST1:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack1<T[]>[]): Pointer<LtoD<T>, 1, 1, T>[]; //{TEST111:any};\r\n    public static from<T extends LPointerTargetable>(data:Pack<T[]>): Pointer<LtoD<T>, 1, 1, T>[]; //{TEST0:any};\r\n    public static from<T extends LPointerTargetable>(data:PackArr<T[]>): Pointer<LtoD<T>, 1, 1, T>[]; //{TESTARR:any};\r\n\r\n    /*\r\n        public static from(data:undefined): undefined; // | {D:any};\r\n        public static from<DX extends DPointerTargetable | undefined | null>(data:DX): DX extends DPointerTargetable ? DX[\"id\"] : DX; // | {D:any};\r\n        public static from<DX extends DPointerTargetable | undefined | null>(data:DX[]): DX extends DPointerTargetable ? DX[\"id\"][] : DX; // | {DD:any};\r\n        public static from<LX extends LPointerTargetable | undefined | null>(data:LX): LX extends LPointerTargetable ? LX[\"id\"] : LX; // | {L:any};\r\n        public static from<LX extends LPointerTargetable | undefined | null>(data:LX[]): LX extends LPointerTargetable ? LX[\"id\"][] : LX; // | {LL:any};\r\n        public static from<WX extends WPointerTargetable | undefined | null>(data:WX): WX extends WPointerTargetable ? WX[\"id\"] : WX; // | {W:any};\r\n        public static from<WX extends WPointerTargetable | undefined | null>(data:WX[]): WX extends WPointerTargetable ? WX[\"id\"][] : WX; // | {WW:any};\r\n        public static from<PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable> | undefined | null>(data:PTR): PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable> ? PTR : PTR; // | {P:any};\r\n        public static from<PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable> | undefined | null>(data:PTR[]): PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable> ? PTR[] : PTR; // | {PP:any};\r\n        public static from<T extends LPointerTargetable | undefined | null>(data:Pack1<T>): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T> : T; //{TEST1:any};\r\n        public static from<T extends LPointerTargetable | undefined | null>(data:Pack1<T>[]): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T>[] : T; //{TEST111:any};\r\n        public static from<T extends LPointerTargetable | undefined | null>(data:Pack<T>): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T>[] : T; //{TEST0:any};\r\n        public static from<T extends LPointerTargetable | undefined | null>(data:PackArr<T>): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T>[] : T; //{TESTARR:any};\r\n        // public static from<T extends LPointerTargetable | undefined | null>(data:Pack1<T[]>): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T> : T; //{TEST1:any};\r\n        // public static from<T extends LPointerTargetable | undefined | null>(data:Pack1<T[]>[]): T extends LPointerTargetable ? Pointer<LtoD<T>, 1, 1, T>[] : T; //{TEST111:any};\r\n        // DDD extends (T extends Pointer<infer D> ? D : 'undefined D'),*/\r\n    public static from<TT extends Pack<LPointerTargetable[]> | undefined | null,\r\n        // @ts-ignore\r\n        T extends (TT extends Pack<infer PTYPE> ? PTYPE : undefined)>(data:T): T extends null | undefined ? T : Pointer<LtoD<T>, 1, 1, T>[]; //{TEST0:any};\r\n    // @ts-ignore\r\n    public static from<T extends LPointerTargetable | undefined | null>(data: PackArr<T[]>): T extends null | undefined ? T : Pointer<LtoD<T>, 1, 1, T>[]; //{TESTARR:any};\r\n    public static from(data:null | undefined): null; // | {Dn:any};\r\n    public static from(data:(null | undefined)[]): []; // | {Dnn:any};\r\n    public static from(data:(null | undefined) | (null | undefined)[]): []; // | {Dn0:any};\r\n\r\n    // function from<PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable>>(data:unknown | unknown[]): PTR | PTR[] | GObject {\r\n    public static from<T extends LClass, PTR extends Pointer<DPointerTargetable, 1, 1, LPointerTargetable>>(data:unknown | unknown[]): null | PTR | PTR[]{\r\n        if (!data) return null;\r\n        if (Array.isArray(data)) return data.filter(d => !!d).map(d => (typeof d === \"string\" ? d : (d as any).id)) as any;\r\n        return typeof data === \"string\" ? data : (data as any).id;\r\n    }\r\n\r\n    static isPointer(val: any): val is Pointer {\r\n        // todo: must refine this in a safer way\r\n        return typeof val === \"string\" ? val.includes(\"Pointer\") : false;\r\n    }\r\n}\r\n/*\r\nexport type Pack1<L extends LPointerTargetable | undefined | null,\r\n    // L extends LPointerTargetable | undefined | null = LL extends LPointerTargetable[] ? LPointerTargetable : null | undefined,\r\n    D extends (L extends LPointerTargetable ? LtoD<L> : undefined | null) = (L extends LPointerTargetable ? LtoD<L> : undefined | null)> =\r\n    L extends LPointerTargetable ? ( D extends DPointerTargetable ? D | L /*| LtoW<L>* / | Pointer<D, 1, 1, L> : L) : undefined;\r\nexport type PackArr<LL extends orArr<LPointerTargetable> | undefined | null,\r\n    L extends LPointerTargetable | undefined | null = LL extends undefined | null ? undefined : unArr<LL>> = Pack1<L>[];\r\nexport type Pack<\r\n    LL extends orArr<LPointerTargetable> | undefined | null,\r\n    L extends unArr<LL> = unArr<LL>,\r\n    // L extends (LL extends orArr<LPointerTargetable> ? LPointerTargetable : undefined | null) = (LL extends orArr<LPointerTargetable> ? unArr<LL> : undefined)\r\n    >\r\n    = LL extends undefined ? undefined : Pack1<L> | PackArr<L>;\r\n*/\r\nexport type Pack1<LL extends orArr<LPointerTargetable> | undefined, L extends LPointerTargetable | undefined = unArr<LL>,\r\n    D extends (L extends LPointerTargetable ? LtoD<L> : undefined) = (L extends LPointerTargetable ? LtoD<L> : undefined)> =\r\n    L extends LPointerTargetable ? ( D extends DPointerTargetable ? D | L | Pointer<D, 1, 1, L> : undefined) : undefined;\r\nexport type PackArr<LL extends orArr<LPointerTargetable> | undefined, L extends LPointerTargetable | undefined = unArr<LL>> = Pack1<L>[];\r\nexport type Pack<LL extends orArr<LPointerTargetable> | undefined, L extends LPointerTargetable | undefined = unArr<LL>> = L extends undefined ? undefined : Pack1<L> | PackArr<L>;\r\n/*\r\nlet n: any = null;\r\nlet aa: DClass = n;\r\nlet ptrr = Pointers.from(aa.parent);\r\naa.parent = ptrr;*/\r\n\r\n@RuntimeAccessible\r\nexport class PendingPointedByPaths{\r\n    static all: PendingPointedByPaths[] = [];\r\n    // static pendingMoreThanTwice: ParsedAction[] = [];\r\n    static maxSolveAttempts: number = 20;\r\n    public solveAttempts: number = 1;\r\n    private stackTrace: string[];\r\n\r\n    // tmp fields, not sure what i need\r\n    public action!: ParsedAction; // todo: remove\r\n    static new(action: ParsedAction, oldState: DState): PendingPointedByPaths {\r\n        const ptr: Pointer = action.value;\r\n        const target: DPointerTargetable | null = oldState.idlookup[ptr as string];\r\n        let pendingPointedBy = new PendingPointedByPaths(action.path, ptr);\r\n        pendingPointedBy.action = action;\r\n        return pendingPointedBy;\r\n    }\r\n\r\n    private constructor(\r\n        public from: DocString<\"full Path in store including field key\">,\r\n        // todo 6: how about actions that do not include index but just += -= [] ?\r\n        public to: Pointer){\r\n        this.stackTrace = U.getStackTrace();\r\n    }\r\n    static attemptimplementationdelete(pb: PointedBy) {\r\n        let state: DState = store.getState();\r\n        let objectChain = U.followPath(state, pb.source);\r\n    }\r\n\r\n    public attemptResolve(state: DState): ParsedAction | null {\r\n        if (this.canBeResolved(state)) return this.resolve();\r\n        return null;\r\n    }\r\n\r\n    private resolve(): ParsedAction{\r\n        U.arrayRemoveAll(PendingPointedByPaths.all, this);\r\n        return Action.parse(SetRootFieldAction.create(\"idlookup.\" + this.to + '.pointedBy', PointedBy.new(this.action.path), '+=', false));\r\n    }\r\n\r\n    public saveForLater(): void { PendingPointedByPaths.all.push(this); }\r\n    private canBeResolved(state: DState): boolean {\r\n        this.solveAttempts++;\r\n        if (this.solveAttempts >= PendingPointedByPaths.maxSolveAttempts) Log.ex(\"pending PointedBy action is not revolved for too long, some pointer was wrongly set up.\", this.stackTrace, this, state);\r\n        return !!state.idlookup[this.to]; }\r\n\r\n    static getSolveableActions(oldState: DState): ParsedAction[] {\r\n        let allClone = [...this.all]; // necessary because the array will remove some elements during iteration as they are solved.\r\n        return allClone.map( p => p.attemptResolve(oldState)).filter(p => (!!p)) as ParsedAction[];\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class PointedBy{\r\n    static list: string[] = [\"father\", \"parent\", \"annotations\", \"packages\", \"type\", \"subpackages\", \"classifiers\", \"exceptions\", \"parameters\", \"defaultValue\", \"instances\", \"operations\", \"features\", \"attributes\", \"references\", \"extends\", \"extendedBy\", \"implements\", \"implementedBy\", \"instanceof\", \"edges\", \"target\", \"opposite\", \"parameters\", \"exceptions\", \"literals\", \"values\"];\r\n    source: string; // elemento da cui parte il puntatore\r\n    // field: keyof DPointerTargetable;\r\n    // il bersaglio non c'è qui, perchè è l'oggetto che contiene questo dentro l'array pointedBy\r\n\r\n    /*private constructor(source: DPointerTargetable, field: any) {\r\n        this.source = source;\r\n        this.field = field;\r\n    }*/\r\n\r\n    static getPath(p: PointedBy) : string { return p.source.substring(0, p.source.lastIndexOf(\".\")); }\r\n    static getLastKey(p: PointedBy) : string { return p.source.substring(p.source.lastIndexOf(\".\")); }\r\n    static getPathArr(p: PointedBy) : string[] { return p.source.split('.'); }\r\n    private constructor(source: string) {\r\n        this.source = source;\r\n    }\r\n    static fromID<D extends DPointerTargetable>(ptr: Pointer<D>, field: keyof D) {\r\n        // Giordano: add ignore for webpack\r\n        //@ts-ignore\r\n        return PointedBy.new(\"idlookup.\" + ptr + \".\" + field);\r\n    }\r\n    static new(source: DocString<\"full path in store including key. like \\'idlookup.id.extends\\'\">, modifier: \"-=\" | \"+=\" | undefined = undefined, action?: ParsedAction): PointedBy {\r\n        // let source: DocString<\"full path in store including key\"> = action.path;\r\n        // if (source.includes(\"true\")) { console.error(this, action); throw new Error(\"mixed a bool\"); }\r\n        if (modifier) source = source.substring(0, source.length - (modifier?.length || 0));\r\n        return new PointedBy(source);\r\n    }\r\n    // static new0<D extends DPointerTargetable> (source: D, field: keyof D): PointedBy { return new PointedBy(source, field); }\r\n\r\n\r\n\r\n    public static remove(oldValue: Pointer | undefined, action: ParsedAction, state: DState, casee: \"+=\" | \"-=\" | undefined = undefined): DState {\r\n        if (!oldValue) return state;\r\n        let oldtarget: DPointerTargetable = state.idlookup[oldValue];// todo: if += -=\r\n        if (!oldtarget) return state;\r\n        let index = -1;\r\n        let actionpath: string = action.path.substring(0, action.path.length -(casee?.length || 0))\r\n        for (let i = 0; i < oldtarget.pointedBy.length; i++) { if (oldtarget.pointedBy[i].source === actionpath) {index = i; break; } }\r\n        if (index >= 0) {\r\n            state = {...state} as DState;\r\n            state.idlookup = {...state.idlookup};\r\n            state.idlookup[oldValue] =  {...oldtarget, pointedBy: [...oldtarget.pointedBy]} as any;\r\n            state.idlookup[oldValue].pointedBy.splice(index, 1) // in-place edit\r\n        }\r\n        // console.warn('pointedby remove:', {from: oldtarget.pointedBy, to: state.idlookup[oldValue].pointedBy, obj: state.idlookup[oldValue], index, oldValue, actionpath});\r\n        return state;\r\n    }\r\n\r\n    public static add(newtargetptr: Pointer | undefined, action: ParsedAction, state: DState, casee: \"+=\" | \"-=\" | undefined = undefined): DState {\r\n        if (!newtargetptr) return state;\r\n        // todo: if can't be done because newtarget doesn't exist, build an action from this and set it pending.\r\n        let newtarget: DPointerTargetable = state.idlookup[newtargetptr];\r\n        if (!newtarget) {\r\n            PendingPointedByPaths.new(action, state).saveForLater(); // {from: action.path, field: action.field, to: target});\r\n            return state;\r\n        }\r\n        let oldtarget = {...newtarget, pointedBy: [...newtarget.pointedBy]}\r\n        state = {...state} as DState;\r\n        state.idlookup = {...state.idlookup};\r\n        state.idlookup[newtargetptr] = {...newtarget, pointedBy:  [...newtarget.pointedBy, PointedBy.new(action.path, casee)]} as any;\r\n        // console.warn('pointedby add:', {from: oldtarget.pointedBy, to: state.idlookup[newtargetptr].pointedBy, obj: state.idlookup[newtargetptr]});\r\n        return state;\r\n    }\r\n}\r\n\r\ntype AnyPointer = Pointer<DPointerTargetable, number, number|'N', LPointerTargetable>;\r\n\r\n@RuntimeAccessible\r\nexport class LPointerTargetable<Context extends LogicContext<DPointerTargetable> = any, D extends DPointerTargetable = DPointerTargetable> extends DPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public static structure: typeof DPointerTargetable;\r\n    public static singleton: LPointerTargetable;\r\n    public __raw!: D;\r\n    public pointedBy!: PointedBy[];\r\n\r\n    public __isProxy!: boolean;\r\n    public __serialize!: DocString<\"json\">;\r\n    private inspect!:D;\r\n    private clonedCounter!:number;\r\n    private __random!:number;\r\n\r\n    private __info_of__id = {type:\"Pointer&lt;this&gt;\", txt:\"<a href=\\\"https://github.com/DamianoNaraku/jodel-react/wiki/identifiers\\\"><span>Unique identifier, and value used to point this object.</span></a>\"};\r\n\r\n    protected wrongAccessMessage(str: string): any {\r\n        let msg = \"Method \"+str+\" should not be called directly, attempting to do so should trigger get_\"+str+\"(). This is only a signature for type checking.\";\r\n        Log.ex(msg);\r\n        throw new Error(msg); }\r\n\r\n    public toString(): string { throw this.wrongAccessMessage(\"toString\"); }\r\n    protected get_toString(context: Context): () => string {\r\n        const data = context.data as DNamedElement;\r\n        return () => ( data.name ? data.name : data.className.substring(0));\r\n        // return () => data.id;\r\n    }\r\n\r\n\r\n    protected cannotSet(field: string): any { return Log.exx('\"' + field + '\" field is read-only', this); }\r\n    protected get_id(context: Context): this[\"id\"] { return context.data.id; }\r\n    protected set_id(): boolean { return this.cannotSet('id'); }\r\n\r\n    protected _get_default< DD extends DPointerTargetable, T extends string & keyof (DD) & keyof (L), L extends LModelElement = LModelElement>(data: DD, key: T): L[T]{\r\n        // @ts-ignore\r\n        return LPointerTargetable.from(data[key]); }\r\n\r\n    public delete(): void { throw this.wrongAccessMessage(\"delete\"); }\r\n    public _delete(context: Context): void { new DeleteElementAction(context.data); }\r\n    protected get_delete(context: Context): () => void {\r\n        return () => {\r\n            alert(\"Delete in LPOINTER\")\r\n            this._delete(context);\r\n        }\r\n    }\r\n\r\n    public get__extends(superClassName: string, context: LogicContext<DPointerTargetable>): boolean {\r\n        return RuntimeAccessibleClass.extends(context.data.className, superClassName);\r\n    }\r\n\r\n    /*\r\n    public get_pointedBy(superClassName: string, context: LogicContext<DPointerTargetable>): LPointerTargetable[] {\r\n        let state: GObject = windoww.store.getState();\r\n        function getForemostObjectInPath(path: DocString<'storePath'>): undefined | LPointerTargetable {\r\n            let lastPointableObject: undefined | DPointerTargetable;\r\n            let pathArray = path.split('.');\r\n            for (let key of pathArray) {\r\n                let currentObj: GObject = state[key];\r\n                if (!currentObj) break;\r\n                if (currentObj && currentObj.id && state.idlookup[currentObj.id]) lastPointableObject = state.idlookup[currentObj.id];\r\n            }\r\n            return lastPointableObject && DPointerTargetable.wrap(lastPointableObject);\r\n        }\r\n        return (context.data.pointedBy || []).map(getForemostObjectInPath).filter( lobj => !!lobj) as LPointerTargetable[];\r\n    }*/\r\n\r\n    public set_pointedBy(val: never, context: LogicContext<DPointerTargetable>): boolean {\r\n        windoww.Log.exx('pointedBy field should never be directly edited.', {context, val});\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    static fromD<DX extends DPointerTargetable,\r\n        LX = DX extends DEnumerator ? LEnumerator : (DX extends DAttribute ? LAttribute : (DX extends DReference ? LReference : (DX extends DRefEdge ? LRefEdge : (DX extends DExtEdge ? LExtEdge : (DX extends DDataType ? LDataType : (DX extends DClass ? LClass : (DX extends DStructuralFeature ? LStructuralFeature : (DX extends DParameter ? LParameter : (DX extends DOperation ? LOperation : (DX extends DEdge ? LEdge : (DX extends DEdgePoint ? LEdgePoint : (DX extends DGraphVertex ? LGraphVertex : (DX extends DModel ? LModel : (DX extends DValue ? LValue : (DX extends DObject ? LObject : (DX extends DEnumLiteral ? LEnumLiteral : (DX extends DPackage ? LPackage : (DX extends DClassifier ? LClassifier : (DX extends DTypedElement ? LTypedElement : (DX extends DVertex ? LVertex : (DX extends DVoidEdge ? LVoidEdge : (DX extends DVoidVertex ? LVoidVertex : (DX extends DGraph ? LGraph : (DX extends DNamedElement ? LNamedElement : (DX extends DAnnotation ? LAnnotation : (DX extends DGraphElement ? LGraphElement : (DX extends DMap ? LMap : (DX extends DModelElement ? LModelElement : (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (ERROR))))))))))))))))))))))))))))))),\r\n        >(data: DX): LX {\r\n        // return null as any;\r\n        if (Array.isArray(data)) return LPointerTargetable.wrapAll(data) as any;\r\n        return LPointerTargetable.wrap(data) as any;\r\n    }\r\n\r\n\r\n    static fromPointer<\r\n        T extends AnyPointer | AnyPointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        DDD extends (T extends Pointer<any, any, any, infer D> ? D : 'undefined L'),\r\n        LOW extends (T extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (T extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n\r\n        DDDARR extends (T extends Pointer<any, any, any, infer D>[] ? D : 'undefined_DARR'),\r\n        LOWARR extends (T extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (T extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n\r\n        RET = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n        INFERRED = {ret: RET, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR},>(ptr: T | undefined, state?: DState)\r\n        : RET {\r\n        // return null as any;\r\n        if (Array.isArray(ptr)) return LPointerTargetable.wrapAll(ptr as any, undefined, '', false, state) as any;\r\n        return LPointerTargetable.wrap(ptr) as any;\r\n    }\r\n    static fromArr<\r\n        PTR extends Pointer | Pointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        // DDD extends (PTR extends Pointer<infer D> ? D : 'undefined_D'),\r\n        LOW extends (PTR extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (PTR extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n        DDD extends (PTR extends Pointer<any, number, any, infer LL> ? LL : 'undefined_L'),\r\n\r\n        LOWARR extends (PTR extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (PTR extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n        DDDARR extends (PTR extends Pointer<any, any, any, infer LL>[] ? LL : 'undefined_LARR'),\r\n\r\n        DX extends DPointerTargetable,\r\n\r\n        RETPTR = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n\r\n        // DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : ('ERROR'))))))))))))))))),\r\n        LX = DX extends DEnumerator ? LEnumerator : (DX extends DAttribute ? LAttribute : (DX extends DReference ? LReference : (DX extends DRefEdge ? LRefEdge : (DX extends DExtEdge ? LExtEdge : (DX extends DDataType ? LDataType : (DX extends DClass ? LClass : (DX extends DStructuralFeature ? LStructuralFeature : (DX extends DParameter ? LParameter : (DX extends DOperation ? LOperation : (DX extends DEdge ? LEdge : (DX extends DEdgePoint ? LEdgePoint : (DX extends DGraphVertex ? LGraphVertex : (DX extends DModel ? LModel : (DX extends DValue ? LValue : (DX extends DObject ? LObject : (DX extends DEnumLiteral ? LEnumLiteral : (DX extends DPackage ? LPackage : (DX extends DClassifier ? LClassifier : (DX extends DTypedElement ? LTypedElement : (DX extends DVertex ? LVertex : (DX extends DVoidEdge ? LVoidEdge : (DX extends DVoidVertex ? LVoidVertex : (DX extends DGraph ? LGraph : (DX extends DNamedElement ? LNamedElement : (DX extends DAnnotation ? LAnnotation : (DX extends DGraphElement ? LGraphElement : (DX extends DMap ? LMap : (DX extends DModelElement ? LModelElement : (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (ERROR))))))))))))))))))))))))))))))),\r\n        RET = LX extends 'ERROR' ? RETPTR : (RETPTR extends LX ? RETPTR : LX),\r\n        INFERRED = {ret: RET, RETPTR: RETPTR, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR, LX:LX, DX:DX}>(ptr: PTR[] | DX[])\r\n        : RET[] {\r\n        return LPointerTargetable.from(ptr as any); }\r\n\r\n    static from<// LOW extends number, UPP extends number | 'N',\r\n        PTR extends Pointer<DPointerTargetable, 0|1, 1|'N', LPointerTargetable> | Pointer[], // <DPointerTargetable, 1, 'N', LPointerTargetable>,\r\n        // DDD extends (PTR extends Pointer<infer D> ? D : 'undefined_D'),\r\n        LOW extends (PTR extends Pointer<any, infer LO> ? LO : 'undefined_upp'),\r\n        UPP extends (PTR extends Pointer<any, number, infer UP> ? UP : 'undefined_low'),\r\n        DDD extends (PTR extends Pointer<any, number, any, infer LL> ? LL : 'undefined_L'),\r\n\r\n        LOWARR extends (PTR extends Pointer<any, infer LO>[] ? LO : 'undefined_uppARR'),\r\n        UPPARR extends (PTR extends Pointer<any, number, infer UP>[] ? 'UP_is_N' : 'undefined_lowARR'),\r\n        DDDARR extends (PTR extends Pointer<any, any, any, infer LL>[] ? LL : 'undefined_LARR'),\r\n\r\n        DX extends DPointerTargetable,\r\n\r\n        RETPTR = UPPARR extends 'UP_is_N' ?\r\n            (DDDARR[]) : // 0...N\r\n            (UPP extends 1 ? (LOW extends 0 ? DDD | null : DDD) : // 0...1 && 1...1\r\n                (LOW extends 1 ? DDD : undefined)  //1...1\r\n                ),\r\n\r\n\r\n        // DX = LX extends LEnumerator ? DEnumerator : (LX extends LAttribute ? DAttribute : (LX extends LReference ? DReference : (LX extends LDataType ? DDataType : (LX extends LClass ? DClass : (LX extends LStructuralFeature ? DStructuralFeature : (LX extends LParameter ? DParameter : (LX extends LOperation ? DOperation : (LX extends LModel ? DModel : (LX extends LValue ? DValue : (LX extends LObject ? DObject : (LX extends LEnumLiteral ? DEnumLiteral : (LX extends LPackage ? DPackage : (LX extends LClassifier ? DClassifier : (LX extends LTypedElement ? DTypedElement : (LX extends LNamedElement ? DNamedElement : (LX extends LAnnotation ? DAnnotation : ('ERROR'))))))))))))))))),\r\n        LX = DX extends DEnumerator ? LEnumerator : (DX extends DAttribute ? LAttribute : (DX extends DReference ? LReference : (DX extends DRefEdge ? LRefEdge : (DX extends DExtEdge ? LExtEdge : (DX extends DDataType ? LDataType : (DX extends DClass ? LClass : (DX extends DStructuralFeature ? LStructuralFeature : (DX extends DParameter ? LParameter : (DX extends DOperation ? LOperation : (DX extends DEdge ? LEdge : (DX extends DEdgePoint ? LEdgePoint : (DX extends DGraphVertex ? LGraphVertex : (DX extends DModel ? LModel : (DX extends DValue ? LValue : (DX extends DObject ? LObject : (DX extends DEnumLiteral ? LEnumLiteral : (DX extends DPackage ? LPackage : (DX extends DClassifier ? LClassifier : (DX extends DTypedElement ? LTypedElement : (DX extends DVertex ? LVertex : (DX extends DVoidEdge ? LVoidEdge : (DX extends DVoidVertex ? LVoidVertex : (DX extends DGraph ? LGraph : (DX extends DNamedElement ? LNamedElement : (DX extends DAnnotation ? LAnnotation : (DX extends DGraphElement ? LGraphElement : (DX extends DMap ? LMap : (DX extends DModelElement ? LModelElement : (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (ERROR))))))))))))))))))))))))))))))),\r\n        RET = LX extends 'ERROR' ? RETPTR : (RETPTR extends LX ? RETPTR : LX),\r\n        INFERRED = {ret: RET, RETPTR: RETPTR, upp: UPP, low:LOW, ddd: DDD, dddARR: DDDARR, lowARR: LOWARR, uppARR: UPPARR, LX:LX, DX:DX}>(ptr: PTR | DX, s?: DState)\r\n        : RET {\r\n        // return null as any;\r\n        if (Array.isArray(ptr)) return LPointerTargetable.wrapAll(ptr) as any;\r\n        return LPointerTargetable.wrap(ptr as any) as any;\r\n    }\r\n\r\n    // static from0(a: any, ...aa: any): any { return null; }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, LPointerTargetable);\r\n/*\r\nlet pttr: Pointer<DClassifier, 0, 1, LClassifier> = null as any;\r\nlet ptrany: Pointer<DClassifier, 0|1, 1|'N'>[] = null as any;\r\nlet ptrarr: Pointer<DClassifier>[] = null as any;\r\nlet ptrarr2: Pointer<DClassifier, 1, 'N'> = null as any;\r\nlet d: DClassifier = null as any;\r\nlet darr: DClassifier[] = null as any;\r\n\r\ntype VoidPtr = null | undefined | '';\r\nfunction dfrom<\r\n    PARAM extends orArr<AnyPointer | VoidPtr>,//orArr<WPointerTargetable | LPointerTargetable | DPointerTargetable | AnyPointer>,\r\n\r\n\r\n    DDD extends (PARAM extends Pointer<infer DD> ? DD : 'undefined_D'),\r\n    LOW extends (PARAM extends Pointer<any, infer LO> ? LO : 'undefined_low'),\r\n    LOW0 extends (PARAM extends Pointer<any, 0, any, any> ? 0 : never),\r\n    LOW1 extends (PARAM extends Pointer<any, 1, any, any> ? 1 : never),\r\n    LOW2 extends (VoidPtr extends PARAM ? 0 | 'first' : (PARAM extends VoidPtr ? 0 | 1 | 'second': 1|'third')),\r\n    UPP extends (PARAM extends Pointer<any, number, infer UP> ? UP : 'undefined_upp'),\r\n    LLL extends (PARAM extends Pointer<any, number, any, infer LL> ? LL : 'undefined_L'),\r\n\r\n\r\n\r\n    ISVOID extends PARAM extends VoidPtr  ? 'isvoid' : never,\r\n    ISARR extends PARAM extends [] ? true : false,\r\n    ISPTR extends (PARAM extends AnyPointer | VoidPtr ? 'ptr' : never),\r\n    ISPTRARR extends (PARAM extends (AnyPointer | VoidPtr)[] | Pointer<DPointerTargetable, 1|0, 'N', LPointerTargetable> ? 'ptr_arr' : never),\r\n    ISD extends (PARAM extends DPointerTargetable ? 'd' : never),\r\n    ISDARR extends (PARAM extends DPointerTargetable[] ? 'd_arr' : never),\r\n    ISL extends (PARAM extends LPointerTargetable ? 'l' : never),\r\n    ISLARR extends (PARAM extends LPointerTargetable[] ? 'l_arr' : never),\r\n    ISW extends (PARAM extends WPointerTargetable ? 'w' : never),\r\n    ISWARR extends (PARAM extends WPointerTargetable[] ? 'w_arr' : never),\r\n    // INFER = {LOW:LOW, UPP:UPP, DDD:DDD, LLL:LLL, LOW2:LOW2},\r\n    INFER = { LOW2:LOW2},\r\n    RET = ISVOID | ISPTR | ISPTRARR | ISD | ISDARR | ISL | ISLARR | ISW | ISWARR | INFER\r\n    >\r\n(ptr: PARAM): RET { return null as any; }\r\nlet Lptr = dfrom(pttr as Pointer<DClassifier, 0, 1, LClassifier> );\r\nlet Lptrany = dfrom(ptrany);\r\nlet Lptrarr = dfrom(ptrarr);\r\nlet Lptrarr2 = dfrom(ptrarr2);\r\nlet Ld = dfrom(d);\r\nlet Ldarr = dfrom(darr);*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@RuntimeAccessible\r\nexport class WPointerTargetable extends DPointerTargetable{\r\n    id!: never;\r\n    _storePath!: never;\r\n    _subMaps!: never;\r\n    pointedBy!: never;\r\n    // todo: WfromD, WfromL, WfromPointer, Wfrom\r\n\r\n    static fromD<DX extends DPointerTargetable, WX extends DtoW<DX>>(data: DX): WX { return LPointerTargetable.fromD(data) as any; }\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, LPointerTargetable);\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, WPointerTargetable);\r\nfunction fffff<DX, LX = DX extends DRefEdge ? LRefEdge : 'not'>( t: DX): LX { return null as any; }\r\nlet a: DGraphElement = null as any;\r\nlet bbb = LPointerTargetable.from(a);\r\nlet bb2 = fffff(a);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DUser extends DPointerTargetable{\r\n    static current: DocString<Pointer<DUser, 1, 1>> = 'Pointer' + Date.now(); // todo\r\n    // Session's token that change for every session\r\n    static token: DocString<Pointer<DUser, 1, 1>> = 'Pointer' + Date.now();\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    cursorPositionX: number = 0;\r\n    cursorPositionY: number = 0;\r\n    // public static structure: typeof DPointerTargetable;\r\n    // public static singleton: LPointerTargetable;\r\n    id!: Pointer<DUser, 1, 1, LUser>;\r\n    __isUser: true = true; // necessary to trick duck typing to think this is NOT the superclass of anything that extends PointerTargetable.\r\n    public static new(id?: DUser[\"id\"], triggerActions: boolean = true): DUser {\r\n        return new Constructors(new DUser('dwc'), undefined, false).DPointerTargetable().DUser(id).end(); }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LUser extends LPointerTargetable { // MixOnlyFuncs(DUser, LPointerTargetable)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // public static structure: typeof DPointerTargetable;\r\n    // public static singleton: LPointerTargetable;\r\n    public __raw!: DUser;\r\n    id!: Pointer<DUser, 1, 1, LUser>;\r\n    __isUser!: true;\r\n    cursorPosition!: IPoint; //todo\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DUser);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LUser);\r\nexport type WUser = getWParams<LUser, DUser>;\r\n\r\n@RuntimeAccessible\r\nexport class MyError extends Error {\r\n    constructor(message?: string, ...otherMsg: any[]) {\r\n        // 'Error' breaks prototype chain here\r\n        super(message);\r\n        const proto = (this as any).__proto__;\r\n\r\n        console.error(proto.constructor.name, message, ...otherMsg);\r\n        // restore prototype chain\r\n        const actualProto = new.target.prototype;\r\n\r\n        if (Object.setPrototypeOf) { Object.setPrototypeOf(this, actualProto); }\r\n        else { (this as any).__proto__ = actualProto; }\r\n        (this as any).className = this.constructor.name;\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class JsType{\r\n    public static all: JsType[] = [];\r\n    public static object: JsType = new JsType(\"object\", JsType.isObject, false);\r\n    public static function: JsType = new JsType(\"function\", JsType.isFunction, false);\r\n    public static array: JsType = new JsType(\"array\", JsType.isArray, false);\r\n    public static date: JsType = new JsType(\"Date\", JsType.isDate, false);\r\n\r\n    public static lambdaFunction: JsType = new JsType(\"lambda-function\", JsType.isLambdaFunction, true);\r\n    public static nonLambdaFunction: JsType = new JsType(\"non-lambda-function\", JsType.isNonLambdaFunction, true);\r\n    public static symbol: JsType = new JsType(\"symbol\", JsType.isSymbol, true);\r\n    public static undefined: JsType = new JsType(\"undefined\", JsType.isUndefined, true);\r\n    public static null: JsType = new JsType(\"null\", JsType.isNull, true);\r\n    public static boolean: JsType = new JsType(\"boolean\", JsType.isBoolean, true);\r\n    public static number: JsType = new JsType(\"number\", JsType.isNumber, true);\r\n    public static bigint: JsType = new JsType(\"bigint\", JsType.isBigint, true);\r\n    public static string: JsType = new JsType(\"string\", JsType.isString, true);\r\n\r\n    private constructor(public printableTypeName: string, public check: (data: any) => boolean, public isExclusiveType: boolean){\r\n        JsType.all.push(this);\r\n    }\r\n    public toString(): string { return this.printableTypeName; }\r\n    /*\r\n    * example: isObject but not Date, not function...\r\n    * */\r\n    public static isOnlyType(data: any, type: JsType): boolean { return !JsType.getTypes(data, type).length; }\r\n    public static isAnyOfTypes(data: any, ...acceptables: JsType[]): boolean { return !!windoww.Uarr.arrayIntersection(JsType.getTypes(data), acceptables).length; }\r\n    public static getTypes(data: any, stopIfTypeIsNot?: JsType): JsType[]{\r\n        const ret: JsType[] = [];\r\n        for (const type of JsType.all) {\r\n            if (type.check(data)) {\r\n                ret.push(data);\r\n                if (stopIfTypeIsNot !== type) { return []; }\r\n                if (type.isExclusiveType) return ret;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /// is...\r\n    public static isObject(data: GObject | any): boolean { return typeof data === \"object\"; }\r\n    public static isFunction(data: Function | any): boolean { return typeof data === \"function\"; }\r\n    public static isLambdaFunction(data: Function | any): boolean {\r\n        if (!JsType.isFunction(data)) return false;\r\n        return windoww.U.getFunctionSignatureFromComments(data).isLambda; }\r\n    public static isNonLambdaFunction(data: Function | any): boolean { return JsType.isFunction(data) && !JsType.isNonLambdaFunction(data); }\r\n    public static isArray(data: Array<any> | any): boolean { return Array.isArray(data); }\r\n    public static isSymbol(data: symbol | any): boolean { return typeof data === \"symbol\"; }\r\n    public static isBoolean(data: symbol | any): boolean { return !!data === data; }\r\n    public static isNumber(data: number | any): boolean { return typeof data === \"number\"; }\r\n    public static isBigint(data: bigint | any): boolean { return typeof data === \"bigint\"; }\r\n    public static isString(data: string | any): boolean { return typeof data === \"string\"; }\r\n    public static isNull(data: null | any): boolean { return data === null; }\r\n    public static isUndefined(data: undefined | any): boolean { return data === undefined; }\r\n    public static isDate(data: Date | any): boolean { return data instanceof Date; }\r\n\r\n    /// as...\r\n    public static asObject<T>(data: GObject | any, fallbackReturn: T): T | GObject { return JsType.isObject(data) ? data : fallbackReturn; }\r\n    public static asFunction<T>(data: Function | any, fallbackReturn: T): T | Function { return JsType.isFunction(data) ? data : fallbackReturn; }\r\n    public static asLambdaFunction<T>(data: Function | any, fallbackReturn: T): T | Function { return JsType.isLambdaFunction(data) ? data : fallbackReturn; }\r\n    public static asNonLambdaFunction<T>(data: Function | any, fallbackReturn: T): T | Function { return JsType.isNonLambdaFunction(data) ? data : fallbackReturn; }\r\n    public static asArray<T, A>(data: Array<A> | any, fallbackReturn: T): T | Array<A> { return JsType.isArray(data) ? data : fallbackReturn; }\r\n    public static asSymbol<T>(data: symbol | any, fallbackReturn: T): T | symbol { return JsType.isSymbol(data) ? data : fallbackReturn; }\r\n    public static asBoolean<T>(data: boolean | any, fallbackReturn: T): T | boolean { return JsType.isBoolean(data) ? data : fallbackReturn; }\r\n    public static asNumber<T>(data: number | any, fallbackReturn: T): T | number { return JsType.isNumber(data) ? data : fallbackReturn; }\r\n    public static asBigint<T>(data: bigint | any, fallbackReturn: T): T | bigint { return JsType.isBigint(data) ? data : fallbackReturn; }\r\n    public static asString<T>(data: string | any, fallbackReturn: T): T | string { return JsType.isString(data) ? data : fallbackReturn; }\r\n    public static asNull<T>(data: null | any, fallbackReturn: T): T | null { return JsType.isNull(data) ? data : fallbackReturn; }\r\n    public static asUndefined<T>(data: undefined | any, fallbackReturn: T): T | undefined { return JsType.isUndefined(data) ? data : fallbackReturn; }\r\n    public static asDate<T>(data: Date | any, fallbackReturn: T): T | Date { return JsType.isDate(data) ? data : fallbackReturn; }\r\n    public static isPrimitive(data: any) { return !JsType.isAnyOfTypes(data, JsType.object, JsType.function, JsType.array); }\r\n}\r\n\r\n\r\nfunction invalidSuperClassError(/*callee: Class,*/ scname: string, superclass: Class): (() => never) {\r\n    return () => { windoww.Log.exDevv('parent super class \"' + scname + '\" is not implementing init_constructor', {scname, superclass, }); throw new Error(); }\r\n}\r\n// @ts-ignore\r\nfunction MixinFakeConstructor() { this.isMixinFakeConstructor = true; }\r\nexport function MixOnlyFuncs2<A1 extends any[], I1, S1, A2 extends any[], I2, S2>(c1: Class<A1, I1, S1> & typeof RuntimeAccessibleClass, c2: Class<A2, I2, S2> & typeof RuntimeAccessibleClass):\r\n    Class<A1, I1, S1> & Class<A2, I2, S2>{\r\n    return MixOnlyFuncs(c1, c2) as any;\r\n}\r\nexport function MixOnlyFuncs3<A1 extends any[], I1, S1, A2 extends any[], I2, S2>(c1: Class<A1, I1, S1> & typeof RuntimeAccessibleClass, c2: Class<A2, I2, S2> & typeof RuntimeAccessibleClass):\r\n    Class<A1&A2, I1&I2, S1&S2>{\r\n    return MixOnlyFuncs(c1, c2) as any;\r\n}\r\nexport function MixOnlyFuncs<A1 extends any[], I1, S1, A2 extends any[], I2, S2>(c1: Class<A1, I1, S1> & typeof RuntimeAccessibleClass, c2: Class<A2, I2, S2> & typeof RuntimeAccessibleClass):\r\n    CClass<Longest<A1, A2>, I1 & I2\r\n        & {\r\n        // superclass: Dictionary<string, (/*thiss: I1 & I2,* / ...superConstructorParams:ConstructorParameters<Class<A1, I1, S1>> | ConstructorParameters<Class<A2, I2, S2>>) => void>,\r\n        superclass1: Dictionary<DocString<'constructor name to make sure the user knows what superclass constructor is calling'>,  (...superConstructor1Params:ConstructorParameters<Class<A1, I1, S1>>) => void>,\r\n        superclass2: Dictionary<DocString<'constructor name to make sure the user knows what superclass constructor is calling'>,  (...superConstructor2Params:ConstructorParameters<Class<A2, I2, S2>>) => void>,\r\n        // initt: Class<A1, I1, S1>\r\n    } & AbstractMixedClass\r\n        // , Omit<Omit<Omit<S1 & S2, 'init_constructor'>, 'logic'>, 'maxID'> & typeof AbstractMixedClass> {\r\n        , S1 & S2 & GObject & typeof AbstractMixedClass> {\r\n    // strategia: passo dei finti valori che copiano i prototipi delle classi sovrascrivendo i costruttori per evitare che chiami i costruttori delle superclassi\r\n    // ma che comunque erediti campi e funzioni\r\n    // @ts-ignore\r\n    let c1noconstructor: any = MixinFakeConstructor;\r\n    let c2noconstructor: any = MixinFakeConstructor;\r\n    c1noconstructor.prototype = c1.prototype;\r\n    c2noconstructor.prototype = c2.prototype;\r\n\r\n    let disableconstructor = false;\r\n    if (!disableconstructor) {\r\n        c1noconstructor = c1;\r\n        c2noconstructor = c2; }\r\n\r\n\r\n    let ret = Mixin(c1noconstructor, c2noconstructor);\r\n    let c1name = c1.name === 'classnameFixedConstructorDoNotRenameWithoutSearchStrings' ? c1.prototype.className : c1.name;\r\n    let c2name = c2.name === 'classnameFixedConstructorDoNotRenameWithoutSearchStrings' ? c2.prototype.className : c2.name;\r\n    //ret.prototype['superclass'] = {};\r\n    // ret.prototype['superclass'][c1name] = c1.prototype.init_constructor || invalidSuperClassError(c1name, c1);\r\n    // ret.prototype['superclass'][c2name] = c2.init_constructor || invalidSuperClassError(c2name, c2);\r\n    ret.prototype['superclass1'] = {};\r\n    ret.prototype['superclass2'] = {};\r\n    ret.prototype['superclass1'][c1name] = c1.init_constructor || invalidSuperClassError(c1name, c1);\r\n    ret.prototype['superclass2'][c2name] = c2.init_constructor || invalidSuperClassError(c2name, c2);\r\n    return ret;\r\n}\r\nconsole.warn('ts loaded classes');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//*********************************************************************************************\r\n//*********************************************************************************************\r\n///////                              type juggling starts here                          ///////\r\n//*********************************************************************************************\r\n//*********************************************************************************************\r\n\r\n// export type NotAString<T extends any = 'uselessval'> = Omit<string, 'bold'> & {big: T};\r\n// export type NotAString<T extends any = 'uselessval'> = Omit<string, 'bold'>;\r\n// export type NotAString<T extends any = 'uselessval', T2 extends any = any, T3 extends any = any, T4 extends any = any> = string & Omit<string, 'bold'> & {bold: ()=>string};\r\nexport type NotAString<T extends any = 'uselessval', T2 extends any = any, T3 extends any = any, T4 extends any = any> = string & Omit<string, 'bold'> & {bolda?: T};\r\n// export type NotAString<T> = string;\r\n// type Pointer<T> = NotAString<T>;\r\nexport type Pointer<T extends DPointerTargetable = DPointerTargetable, lowerbound extends number = 1, upperbound extends number|'N' = 1,\r\n    RET extends LPointerTargetable = DtoL<T>> =\r\n    upperbound extends 'N' ? NotAString<T, lowerbound, upperbound, RET>[] : (\r\n        upperbound extends 0 ? never : (\r\n            lowerbound extends 0 ? (NotAString<T, lowerbound, upperbound, RET> | null) : NotAString<T, upperbound, lowerbound, RET>));\r\n\r\n\r\nexport type PtrString = any; // to convert Pointers to strings more explicitly then using as any\r\n// let ptr: Pointer<Object> = null as any;\r\n\r\nclass D extends DPointerTargetable{\r\n    parent!: Pointer<D>;\r\n    dattrib!: boolean;\r\n    juststring!: string;\r\n    nattrib!: number;\r\n    ddattrib!: Date\r\n}\r\n\r\nclass D2 extends D{\r\n    d2!: string;\r\n}\r\nclass D3 extends D{\r\n    d3!: string;\r\n}\r\n\r\n\r\n\r\ntype OverrideTypes<M, N> = { [P in keyof M]: P extends keyof N ? N[P] : M[P] }; // usage:  OverrideTypes<A, { x: number }>;\r\n\r\ninterface LFix {\r\n    parent: L;\r\n}\r\ninterface L { // no instances ever\r\n    parent: L;\r\n    lattrib: boolean;\r\n}\r\ninterface L2 extends L { // no instances ever\r\n    l2: string;\r\n}\r\ninterface L3 extends L{ // no instances ever\r\n    l3: string;\r\n}\r\n\r\nclass P { // singleton\r\n    get_parent(){}\r\n    set_parent(){}\r\n}\r\nclass P2 extends P { // singleton\r\n    get_d2() {}\r\n}\r\nclass P3 extends P { // singleton\r\n    get_d3() {}\r\n}\r\n\r\ntype ERROR = \"_TYPE_ERROR_\";\r\n// RegExp extends Animal ? number : string\r\n\r\n\r\nfunction buildWrapSignature(maxdepth = 100) {\r\n    let arr = windoww[\"DPointerTargetable\"].subclasses;\r\n    /*\r\n    let dict0 = arr.reduce((a, v) => ({ ...a, [v.name]: v}), {});\r\n    let dict = {}\r\n    for (let name in dict0) { let n = name.substring(1); dict[n] = {\"D\":dict0[\"D\"+n], \"L\":dict0[\"L\"+n]}; dict[\"D\"+n] = dict0[\"L\"+n]; dict[\"L\"+n] = dict0[\"D\"+n]; }\r\n    console.log(\"dict\", dict);\r\n    console.table(dict);\r\n    */\r\n    function onlyUnique(value: any, index: number, self: any) { return self.indexOf(value) === index; }\r\n\r\n    let dep = arr; // .map( (me) => { return {\"name\": me.name, \"me\": me, \"Derror\": (dict[me.name] || me).name, \"Lerror\": (dict[me.name] || me).name, \"subclasses\": [...me.subclasses]}});\r\n    let depsorted = [];\r\n\r\n    let byLevels = [];\r\n    let loopdetecter: any[] = [arr];\r\n    while (dep.length && maxdepth--) {\r\n        let namelist = dep.map((e: any) => e.name).filter(onlyUnique);\r\n        depsorted.push(...namelist);\r\n        byLevels.push([...namelist]);\r\n        let olddep = dep;\r\n        dep = dep.flatMap((d: any) => d.subclasses).filter(onlyUnique);\r\n        for (let d of dep) {\r\n            windoww.loopdetecter = loopdetecter;\r\n            windoww.dep = dep;\r\n            windoww.olddep = olddep;\r\n            windoww.byLevels = byLevels;\r\n            windoww.d = d;\r\n            if ( loopdetecter.includes(d.subclasses) ) throw new Error(\"class is not redefining subclasses static array: \" + d.name);\r\n            loopdetecter.push(d.subclasses);\r\n        }\r\n    }\r\n    console.log(\"byLevels\");\r\n    console.table(byLevels);\r\n\r\n    console.log(\"depsorted\", depsorted);\r\n\r\n    // console.log(\"map\");\r\n    // console.table(depsorted.map(dn => {let d = window[dn]; return !d ? \"\" :{name:d.name, scount: d.subclasses.length, subclasses:d.subclasses}}));\r\n\r\n\r\n    let goalSignature = \"function wrap<DX extends D, LX = DX extends D2 ? L2: (DX extends D3 ? L3: (DX extends D ? L : ERROR))>(data: DX): LX {\";\r\n    let lparam = \"ERROR\";\r\n    let epsorted = depsorted.map( e => e.substring(1)).filter(onlyUnique);\r\n    console.table(epsorted)\r\n    for (let e of epsorted) {\r\n        let D = \"D\" + e;\r\n        let L = \"L\" + e;\r\n        lparam = \"DX extends \" + D + \" ? \"  + L + \" : (\" + (lparam) + \")\";\r\n    }\r\n    let signature = \"function wrap<DX extends DPointerTargetable, LX = \" + lparam + \">(data: DX): LX {\";\r\n    return signature;\r\n}\r\nwindoww.buildWrapSignature = buildWrapSignature;\r\n// function wrap<DX extends D, LX = DX extends D2 ? L2: (DX extends D3 ? L3: (DX extends D ? L : ERROR))>(data: DX): LX {\r\n\r\n/*\r\n* NO    L -> D    /// l.__raw\r\n* NO    L -> Ptr  /// l.id\r\n*\r\n* NO    D -> Ptr   // d.id\r\n* YES   D -> L     // wrap\r\n*\r\n* NO    Ptr -> D\r\n* NO    Ptr -> L\r\n*\r\n*\r\n*\r\n*\r\n* DpointerTargetable.from( L or pointer )\r\n* LpointerTargetable.from( D or pointer )\r\n*\r\n* MyProxyHandler.wrap = LpointerTargetable.from;\r\n*\r\n* DpointerTargetable.toPointer( d );\r\n*\r\n* */\r\n\r\n\r\n\r\ntype subtract<P, C> = { [F in keyof P]: keyof C extends undefined ? undefined : P[F] };\r\ntype subtractDL = subtract<D, L>;\r\ntype Exclude3<T, U> = T & {[T in keyof U]: never};\r\ntype Override<A, B> = Omit<A, keyof B> & B; //////////////////////////////////////////// best solution so far\r\n\r\ntype Exclude2<Type, field> = {\r\n    [Property in keyof Type as Exclude<Property, keyof field>]: Type[Property]      /////////////////////////equally best solution\r\n};\r\n\r\n\r\ntype OnlyKeysOfTypeTmp<T, IncludeType> = ({[P in keyof T]: T[P] extends IncludeType ? P : never })[keyof T];\r\ntype OnlyKeysOfType<T, IncludeType> = Pick<T, OnlyKeysOfTypeTmp<T, IncludeType>>;\r\ntype RemoveKeysOfType<T, ExcludeType> = Exclude2<T, OnlyKeysOfType<T, ExcludeType>>;\r\n\r\n// todo: can't automatically convert D to L (generating the type instead of manual defining L) rules are: LClass <--- Pointer<LClass>, LClass[] <-- Pointer<LClass, 0, 'N'>, subobject = ? should not be there\r\n\r\n/**\r\n i have a documentation type that is actually a string, but it\\'s have a different purpose from the others, and i made a type to keep documentally separated.\r\n let's say it's\r\n type StringOf<P> = string; // regardless of P\r\n\r\n and i use it to define objects\r\n\r\n class C {\r\n           str: StringOf<Date>;\r\n           str2: StringOf<number>;\r\n           purestring: string;\r\n           num: number\r\n         }\r\n now i want to crete a derivate type that excludes all properties of type StringOf from C\r\n\r\n\r\n\r\n type OnlyKeysOfTypeTmp<T, IncludeType> = ({[P in keyof T]: T[P] extends IncludeType ? P : never })[keyof T];\r\n type OnlyKeysOfType<T, IncludeType> = Pick<T, OnlyKeysOfTypeTmp<T, IncludeType>>;\r\n type RemoveKeysOfType<T, ExcludeType> = Exclude2<T, OnlyKeysOfType<T, string>>;\r\n\r\n type D = RemoveKeysOfType<C, StringOf<any>>\r\n due to duck typing, this removes all StringOf attributes, but also \"purestring\" attribute.\r\n how can i remove only StringOf attributes?\r\n\r\n\r\n */\r\n\r\n\r\n\r\nexport type getWParams<L extends LPointerTargetable, D extends Object> ={\r\n    // [Property in keyof ValidObj<L>]: L[Property] extends never ? never : L[Property]\r\n    [Property in keyof L]:/*\r\n            Property extends \"opposite\" ? LReference | DReference | Pointer<DReference> :\r\n            Property extends \"parent\" ? LModelElement | DModelElement | Pointer<DModelElement> :\r\n            Property extends \"annotations\" ? LAnnotation | DAnnotation | Pointer<DAnnotation> :*/\r\n    (Property extends string ? (\r\n        Property extends \"id\" ? 'id is read-only' :\r\n            //@ts-ignore\r\n            (L[`set_${Property}`] extends (a:any, b: any, ...b:any)=> any ? // at least 2 params: 1 for val and 1 for Context\r\n                // if a set_ first parameter is Context it means the set_ is ill-defined, need to change actual method signature.\r\n                //@ts-ignore\r\n                Parameters<L[`set_${Property}`]>[0] // if set_X function is defined, get first param\r\n                //@ts-ignore\r\n                : never ///D[Property] | `todo: should define set_${Property}` // default type if it's not assigned = type in the D version\r\n                )): never)\r\n} // & L\r\n","import type {DocString, DtoL, DtoW, GObject, Proxyfied, WPointerTargetable,} from \"../joiner\";\r\nimport {\r\n    Dictionary,\r\n    DModelElement,\r\n    DPointerTargetable,\r\n    JsType,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    U\r\n} from \"../joiner\";\r\n\r\ntype NotAConcatenation = null;\r\ntype ERROR = \"_Type_Error_\";\r\n\r\n// (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (ERROR))\r\n// (DX extends DUser ? LUser : (DX extends DPointerTargetable ? LPointerTargetable : (           WViewElement\r\n//\r\n// (IN extends WViewElement ? LViewElement : (IN extends WViewTransientProperties ? LWiewTransientProperties : (ERROR)))\r\n// ))\r\n// type WtoL<WX extends WPointerTargetable> ='';\r\n\r\n@RuntimeAccessible\r\nexport class LogicContext<\r\n    DX extends GObject = DModelElement,\r\n    LX = DtoL<DX>,\r\n    // PF extends MyProxyHandler<DX> = MyProxyHandler<DX>,\r\n    WX = DtoW<DX>\r\n    > extends RuntimeAccessibleClass{\r\n    // public proxyfyFunction: PF;\r\n    public proxyObject: LX;\r\n    public data: DX;// & GObject;\r\n    public write: WX;\r\n    constructor(proxyObject: LX, data: DX) {\r\n        super();\r\n        this.className = this.constructor.name;\r\n        this.data = data;\r\n        this.proxyObject = proxyObject;\r\n        this.write = proxyObject as any;\r\n    }\r\n    /*\r\n        saveToRedux(propkey: \"keyof data\" | string, val: \"typeof data[path]\" | any): void { // todo: ask non stackoverflow\r\n            // todo, put data in redux store, path is \"obj1.obj2.obj3...\" might replace it with a path funciton that return the foremost nested object container\r\n            if (!propkey) {\r\n                // todo: set whole object instead of a property\r\n            }\r\n        }*/\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, LogicContext);\r\n@RuntimeAccessible\r\nexport class MapLogicContext extends LogicContext<GObject, LPointerTargetable, WPointerTargetable> {\r\n    data: GObject;\r\n    path: string;\r\n    subMaps: string[];\r\n    constructor(proxy: LPointerTargetable, data: GObject, path: string, subMaps: string[] = []) {\r\n        super(proxy, data);\r\n        // this.proxyfyFunction = proxyfyFunction;\r\n        this.proxyObject = proxy;\r\n        this.data = data;\r\n        this.path = path;\r\n        this.subMaps = subMaps;\r\n        this.className = this.constructor.name;\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(LogicContext, MapLogicContext);\r\n@RuntimeAccessible\r\nexport abstract class MyProxyHandler<T extends GObject> extends RuntimeAccessibleClass implements ProxyHandler<T>{\r\n    s: string = 'set_';\r\n    g: string = 'get_';\r\n    /*get(target: T, p: string | number | symbol, proxyitself: Proxyfied<T>): boolean {\r\n        switch (p) {\r\n            case '_isProxy': return true;\r\n            case 'init': return (this as any).init;\r\n            case 'init0': return (this as any).init0;\r\n            default: throw new Error('proxy get must be overridden, called for key: ' + (p as string));\r\n        }}*/\r\n    set(target: T, p: string | number | symbol, value: any, proxyitself: Proxyfied<T>): boolean { throw new Error('proxy set must be overridden'); }\r\n    deleteProperty(target: T, p: string | symbol): boolean { throw new Error('proxy delete must be overridden'); }\r\n\r\n    ownKeys(target: T): ArrayLike<string | symbol>{ return Object.getOwnPropertyNames(target); }\r\n    static wrap<D extends RuntimeAccessibleClass, L extends LPointerTargetable = LPointerTargetable, CAN_THROW extends boolean = false,\r\n        RET extends CAN_THROW extends true ? L : L | undefined  = CAN_THROW extends true ? L : L>\r\n    (data: D | Pointer | undefined | null, baseObjInLookup?: DPointerTargetable, path: string = '', canThrow: CAN_THROW = false as CAN_THROW): RET{\r\n\r\n//    static wrap<D extends RuntimeAccessibleClass, L extends LPointerTargetable, RET extends boolean = false>\r\n//        (data: D | Pointer<DViewElement>, baseObjInLookup?: DPointerTargetable, path: string = '', canthrow: RET = false as RET): RET {\r\n        return DPointerTargetable.wrap(data, baseObjInLookup, path) as RET; }\r\n\r\n    static isProxy(data: GObject): boolean { return data?.__isProxy || false; }\r\n}\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, MyProxyHandler);\r\nexport type GetPath<T = GObject> = T;\r\n/*\r\n* handling proxy += and proxy -=\r\n*\r\n* will become var = var + add; which will call Symbol.getPrimitive\r\nconsole.log(+obj2);     // 10        — hint is \"number\"         NaN with +array with multiple vals, +array[0] with array of size 1, NaN with functions & objects\r\nconsole.log(`${obj2}`); // \"hello\"   — hint is \"string\"         array => array.join(','), object => \"[object Object]\", function => function.toString() whole func definition with body code\r\nconsole.log(obj2 + \"\"); // \"true\"    — hint is \"default\"        array, object, function => same as with hint \"string\"\r\n*\r\n* */\r\n\r\n// NB: lclass.extends += somepointer will become: lclass.extends = lclass.extends + somepointer;\r\n// array + string will cause getPrimitive(\"default\") to array, then .join(',') on it, and finally and toString() to be called on all array members.\r\n// so pointers cannot include \",\" char and toString() must return a pointer to keep lclass.extends += somepointer as a valid expression;\r\n// -= will call getPrimitive(\"number\") which will result in array -> NaN, so NaN = NaN - pointer and cannot be done.\r\n\r\n@RuntimeAccessible\r\nclass GetPathHandler<T extends GObject> extends MyProxyHandler<T>{\r\n    strbuilder: string = '';\r\n    array: (string | number | symbol)[] = [];\r\n    calls: (GObject<'parameters of get calls'>)[] = [];\r\n    public static __asCalls: boolean = false;\r\n    public static __asArray: boolean = false;\r\n    public static __nested: boolean = true;\r\n\r\n    public constructor() { super(); }\r\n\r\n    get(targetObj: T, propKey: keyof T | string, proxyitself: Proxyfied<T>): any {\r\n        // console.log('GetPathHandler', {targetObj, propKey, proxyitself});\r\n        if (propKey === \"start\") { this.strbuilder = ''; this.array = []; }\r\n        if (propKey === '$') {\r\n            const ret = GetPathHandler.__asCalls ? this.calls : (GetPathHandler.__asArray ? this.array : this.strbuilder);\r\n            this.array = [];\r\n            this.strbuilder = '';\r\n            return ret; }\r\n        this.array.push(propKey);\r\n        this.calls.push(arguments);\r\n        if (propKey === Symbol.toPrimitive) {\r\n            console.log(\"toprimitive\");\r\n            return (...a: any)=> {console.log(\"toprimitive called with parameters\", a); }\r\n        }\r\n        if (!GetPathHandler.__asArray && !GetPathHandler.__asCalls) {\r\n            if (typeof propKey === \"symbol\") { this.strbuilder += propKey.toString(); }\r\n            else {\r\n                // Giordano: add ignore for webpack\r\n                //@ts-ignore\r\n                this.strbuilder += (this.strbuilder ? '.' : '') + propKey;\r\n            }\r\n        }\r\n        return GetPathHandler.__nested ? proxyitself : {};\r\n    }\r\n\r\n    set(target: T, p: string | number | symbol, value: any, proxyitself: Proxyfied<T>): boolean {\r\n        switch(p){\r\n            case '__asArray':\r\n            case '__asCalls':\r\n            case '__nested':\r\n                (GetPathHandler as any)[p] = value;\r\n                return true;\r\n            default:\r\n                throw new Error('getPath proxy cannot be written');\r\n        }\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(MyProxyHandler, GetPathHandler);\r\n@RuntimeAccessible\r\nexport class TargetableProxyHandler<ME extends GObject = DModelElement, LE extends LPointerTargetable = LModelElement> extends MyProxyHandler<ME> {\r\n// permette di fare cose tipo: user.name_surname che ritorna la concatenazione di nome e cognome anche se il campo name_surname non esiste.\r\n    lg: LE & GObject; // to disable type check easily and access 'set_' + varname dynamically\r\n    l: LE;\r\n    d: ME;\r\n    additionalPath: string;\r\n\r\n    public baseObjInLookup: DPointerTargetable;\r\n\r\n    constructor(d: ME, baseObjInLookup?: DPointerTargetable, additionalPath: string = '', l?: LE) {\r\n        super();\r\n        this.d = d;\r\n        if (!l) {\r\n            l = RuntimeAccessibleClass.get(d.className)?.logic?.singleton as LE;\r\n            Log.exDev(!l, 'Trying to wrap class without singleton or logic mapped', { object: d })\r\n        }\r\n        this.baseObjInLookup = baseObjInLookup || d as any;\r\n        this.additionalPath = additionalPath;\r\n        this.l = l as LE;\r\n        this.lg = this.l;\r\n        this.className = this.constructor.name;\r\n    }\r\n\r\n    // damiano todo: this does not work\r\n    private concatenableHandler(targetObj: ME, propKey: number | string | symbol, proxyitself: Proxyfied<ME>): NotAConcatenation | any[] | string {\r\n        console.log(\"concatenableHandler 1\", {targetObj, propKey, proxyitself});\r\n        if (propKey in targetObj)  return null as NotAConcatenation;\r\n        const propKeyStr: null | string = U.asString(propKey, null);\r\n        let _index: number = propKeyStr ? propKeyStr.indexOf('_') : -1;\r\n        console.log(\"concatenableHandler 2\", {targetObj, propKey, propKeyStr, proxyitself, _index});\r\n        if (_index < 0) return null as NotAConcatenation;\r\n\r\n        let isConcatenable = true;\r\n        let ret: any[] = (propKey as string).split('_').map( (subKey: string) => {\r\n            console.log(\"concatenableHandler 3.0\", {targetObj, subKey, propKeyStr, proxyitself});\r\n            // se trovo multipli ___ li tratto come spazi aggiuntivi invece che come proprietà '' che ritornano undefined, così posso fare name___surname --> \"damiano   di vincenzo\"\r\n            let val: any = subKey === '' ? ' ' : this.get(targetObj, subKey, proxyitself);\r\n            console.log(\"concatenableHandler 3.1\", {targetObj, subKey, val, propKeyStr, proxyitself, isConcatenable});\r\n            isConcatenable = isConcatenable && JsType.isPrimitive(val);\r\n            console.log(\"concatenableHandler 3.2\", {targetObj, subKey, val, propKeyStr, proxyitself, isConcatenable});\r\n            return val;\r\n        });\r\n        console.log(\"concatenableHandler 4\", {targetObj, propKey, propKeyStr, proxyitself, ret, isConcatenable});\r\n        return isConcatenable ? ret.join(' ') : ret; }\r\n\r\n    public get(targetObj: ME, propKey: string | symbol, proxyitself: Proxyfied<ME>): any {\r\n        let ret;\r\n        let isError = false;\r\n        // console.error('_proxy get PRE:', {targetObj, propKey, proxyitself, arguments});\r\n        try { ret = this.get0(targetObj, propKey, proxyitself); } catch(e) { ret = e; isError = true;}\r\n\r\n        // if (isError) throw ret;\r\n        // console.error('_proxy get POST:', {targetObj, propKey, ret, isError});\r\n        return ret;\r\n    }\r\n\r\n    public get0(targetObj: ME, propKey: string | symbol, proxyitself: Proxyfied<ME>): any {\r\n        // console.log('proxy keysearch', {propKey, targetObj, l: this.l, proxyitself, d: this.d});\r\n        let canThrowErrors = true;\r\n        if (propKey === \"__raw\") return targetObj;\r\n\r\n        switch(typeof propKey){\r\n            case \"symbol\":\r\n                switch(String(propKey)){\r\n                    default: Log.exDevv('unexpected symbol:', propKey); break;\r\n                    case \"Symbol(Symbol.toPrimitive)\": return (targetObj as any)[propKey];//  || typeof targetObj;\r\n                }\r\n                return null;\r\n            case \"number\": return null;\r\n        }\r\n\r\n        switch(propKey){\r\n            case 'inspect': // node.js util\r\n            case '__Raw':\r\n            case '__raw': return targetObj;\r\n            case '__serialize': return JSON.stringify(targetObj);\r\n            case '__isproxy':\r\n            case '__isProxy': return true;\r\n            case '__random': return Math.random();\r\n            case 'editCount':\r\n            case 'clonedcounter':\r\n            case 'clonedCounter':\r\n                return targetObj.clonedCounter || 0;\r\n        }\r\n        if (propKey[0] === \"_\" && propKey.indexOf(\"__info_of__\")===0) {\r\n            return (this.l as GObject)[propKey];\r\n        }\r\n\r\n\r\n        const proxyacceptables = {typeName:'', $$typeof:''};\r\n        // check if exist directly in D.key, L.key or through a get_key\r\n        if (propKey in this.l || propKey in this.d || (this.l as GObject)[this.g + (propKey as string)] || propKey in proxyacceptables) {\r\n            // todo: il LogicContext passato come parametro risulta nell'autocompletion editor automaticamente generato, come passo un parametro senza passargli il parametro? uso arguments senza dichiararlo?\r\n            if (typeof propKey !== 'symbol' && this.g + propKey in this.lg) return this.lg[this.g + propKey](new LogicContext(proxyitself as any, targetObj));\r\n\r\n\r\n\r\n            // if specific custom getter exist\r\n            if (typeof propKey !== 'symbol' && this.g + propKey in this.lg) {\r\n                let getterMethod: Function = this.lg[this.g + propKey]; // || this.defaultGetter;\r\n                // console.log(\"gets method\", {getterMethod, lg:this.lg, thiss: this});\r\n                if (getterMethod) return getterMethod(new LogicContext(proxyitself as any, targetObj));\r\n\r\n            }\r\n            // if custom generic getter exist\r\n            if (this.lg._defaultGetter) return this.lg._defaultGetter(new LogicContext(proxyitself as any, targetObj), propKey);\r\n\r\n\r\n            switch (propKey){\r\n                default:\r\n                    //constructor.prototype.typeName\r\n                    // se esiste la proprietà ma non esiste il getter, che fare? do errore?\r\n                    // Log.eDevv(\"dev error: property exist but getter does not: \", propKey, this);\r\n                    // console.error('proxy GET direct match', {targetObj, propKey, ret: this.d[propKey as keyof ME]});\r\n                    // console.error('proxy GET direct match', {l:this.l});\r\n                    return this.d[propKey as keyof ME];\r\n                case '$$typeof':\r\n                case \"typeName\":\r\n                    return this.d.className;\r\n            }\r\n        }\r\n\r\n        // if not exist check for children names\r\n\r\n        if (typeof propKey === \"string\" && propKey !== \"children\" && (\"children\" in this.l)) { // __info_of_children__\r\n            let lchildren: LPointerTargetable[];\r\n            try { lchildren = this.get(targetObj, 'children', proxyitself); }\r\n            catch (e) { lchildren = []; }\r\n            // let dchildren: DPointerTargetable[] = lchildren.map<DPointerTargetable>(l => l.__raw as any);\r\n            let lc: GObject;\r\n            if (propKey[0] === \"@\") { propKey = propKey.substring(1); canThrowErrors = false; }\r\n            for (lc of lchildren) {\r\n                if (lc.name === propKey) return lc;\r\n            }\r\n        }\r\n\r\n        // if property do not exist, try a concatenation\r\n        let concatenationTentative = null;\r\n        try {concatenationTentative = this.concatenableHandler(targetObj, propKey, proxyitself); } catch(e) {}\r\n        if (concatenationTentative !== null) return concatenationTentative;\r\n        Log.ex(canThrowErrors,'GET property \"'+ (propKey as any)+ '\" do not exist in object of type \"' + U.getType(this.l) + \" DType:\" +  U.getType(this.l), {logic: this.l, data: targetObj});\r\n        return undefined;\r\n        // todo: credo che con espressioni sui tipi siano tipizzabili tutti i return di proprietà note eccetto quelle ottenute per concatenazione.\r\n    }\r\n\r\n    public defaultGetter(targetObj: ME, key: string, proxyitself: Proxyfied<ME>): any {\r\n        if (!targetObj) return targetObj;\r\n        if (!targetObj._subMaps || !targetObj._subMaps[key]) return (targetObj as Dictionary)[key];\r\n        // if is a nexted subobject\r\n        let context: MapLogicContext = new MapLogicContext(proxyitself as any, targetObj, key, []);\r\n        let retRaw: Dictionary = this.lg[this.s + key]\r\n        return MapProxyHandler.mapWrap((targetObj as Dictionary)[key], targetObj as any, this.additionalPath + '.' + key)\r\n    }\r\n\r\n    public defaultSetter(targetObj: DPointerTargetable, propKey: string, value: any, proxyitself?: Proxyfied<ME>): boolean {\r\n        SetFieldAction.new(targetObj, propKey as any, value);\r\n        return true;\r\n    }\r\n\r\n    public set(targetObj: ME, propKey: string | symbol, value: any, proxyitself?: Proxyfied<ME>): boolean {\r\n        let enableFallbackSetter = true;\r\n\r\n        // console.error('_proxy set PRE:', {targetObj, propKey, value, proxyitself, arguments});\r\n        // if (propKey in this.l || propKey in this.d || (this.l as GObject)[this.s + (propKey as string)] || (this.l as GObject)[(propKey as string)]) {\r\n        if (propKey in this.l || propKey in this.d || (this.l as GObject)[this.s + (propKey as string)]) {\r\n            // todo: il LogicContext passato come parametro risulta nell'autocompletion editor automaticamente generato, come passo un parametro senza passargli il parametro? uso arguments senza dichiararlo?\r\n            if (typeof propKey !== 'symbol' && this.s + propKey in this.lg) return this.lg[this.s + propKey](value, new LogicContext(proxyitself as any, targetObj));\r\n\r\n\r\n\r\n            // if custom generic getter exist\r\n            if (this.lg._defaultSetter) return this.lg._defaultSetter(value, new LogicContext(proxyitself as any, targetObj), propKey);\r\n            if (enableFallbackSetter) {\r\n                return this.defaultSetter(targetObj as any as DPointerTargetable, propKey as string, value, proxyitself);\r\n                // new SetFieldAction(new LogicContext(proxyitself as any, targetObj).data as any, propKey as string, value); return true;\r\n            }\r\n            // se esiste la proprietà ma non esiste il setter, che fare? do errore.\r\n            Log.eDevv(\"dev error: property exist but setter does not: \", propKey, this);\r\n            return false;\r\n        }\r\n        // if property do not exist\r\n        let breakpoint = 1;\r\n\r\n        // if custom generic getter exist\r\n        if (this.lg._defaultSetter) return this.lg._defaultSetter(value, new LogicContext(proxyitself as any, targetObj), propKey);\r\n        if (enableFallbackSetter && typeof (propKey === \"string\") && ((propKey as string)[0] === '_' || (propKey as string).indexOf('tmp') > 0)) {\r\n            return this.defaultSetter(targetObj as any as DPointerTargetable, propKey as string, value, proxyitself);\r\n            // new SetFieldAction(new LogicContext(proxyitself as any, targetObj).data as any, propKey as string, value); return true;\r\n        }\r\n        Log.exx('SET property \"set_' + (propKey as any) + '\" do not exist in object of type \"' + U.getType(this.l) + \" DType:\" +  U.getType(this.l), {'this': this, targetObj});\r\n        return false; }\r\n    /*      problema: ogni oggetto deve avere multipli puntatori, quando ne modifico uno devo modificarli tutti, come tengo traccia?\r\n            ipotesi 1: lo memorizzo in un solo posto (store.idlookup) e uso Pointer<type, lb, ub> che è una stringa che simula un puntatore\r\n            problema 1: se fornisco l'intero store ai componenti si aggiornano ad ogni singola modifica, se estraggo i campi interesasti le stringhe puntatore sono invariate ma il contenuto puntato è cambiato e il componente non lo sa...\r\n            problemone 2: non so a quali proprietà dello store devo abbonarmi, devo leggere sempre tutto lo store?\r\n            !!!!! soluzione 2?: dovrei dichiarare le variabili a cui mi abbono, salvarle nello stato e precaricarle tramite mapStateToProps*/\r\n\r\n    public deleteProperty(target: ME, key: string | symbol, proxyItself?: Proxyfied<any>): boolean {\r\n        if (typeof key === \"symbol\") return false;\r\n        this.set(target, key, undefined, proxyItself);\r\n        delete target[key];\r\n        return true; }\r\n\r\n    ownKeys(target: ME): ArrayLike<string | symbol>{\r\n        return U.arrayMergeInPlace(Object.keys(target), Object.keys(this.l).filter(k => k.indexOf('set_') !== 0 || k.indexOf('get_') !== 0));\r\n    }\r\n\r\n    /*\r\n    apply(target: DModelElement, thisArg: any, argArray: any[]): any {\r\n        // will i ever use it? dovrei pasare una funzione invece di una classe, quindi in questo caso credo wrappi solo il costruttore\r\n    }*/\r\n}\r\nRuntimeAccessibleClass.set_extend(MyProxyHandler, TargetableProxyHandler);\r\n@RuntimeAccessible\r\nexport class MapProxyHandler extends TargetableProxyHandler<Dictionary, LPointerTargetable> {\r\n    // todo: sposta alcune funzioni da TargetableProxy a MyProxy e fai estendere direttamente MyProxy a questa classe\r\n    public subMapKeys: Dictionary<string, any | Dictionary<DocString<'nested map keys'>>>;\r\n\r\n    constructor(d: Dictionary, baseObjInLookup: DPointerTargetable, additionalPath: string = '', subMapKeys: Dictionary<string, any | Dictionary<DocString<'nested map keys'>>> = {}) {\r\n        super(d, baseObjInLookup, additionalPath, LPointerTargetable.singleton);\r\n        this.subMapKeys = subMapKeys;\r\n    }\r\n\r\n    get(target: Dictionary, key: string | number | symbol, proxyitself: Proxyfied<Dictionary>): any {\r\n        if (typeof key === \"symbol\") return this.d[key as any];\r\n        let val: any = this.d[key];\r\n        if (key in this.subMapKeys && !(key in target)) { Log.exx('property not found in dictionary', {target, key, thiss:this, proxyitself, submapkeys: this.subMapKeys}); return undefined; }\r\n        if (key in this.subMapKeys) {\r\n            this.additionalPath += '.';\r\n            return MapProxyHandler.mapWrap( this.d, this.baseObjInLookup, this.additionalPath, this.subMapKeys[key]);\r\n            Log.exDevv('todo: wrap sub-map', {thiss: this});\r\n        }\r\n        return target[key as string]; }\r\n\r\n    set(target: Dictionary, key: string | number | symbol, value: any, proxyitself: Proxyfied<Dictionary>): boolean {\r\n        if (typeof key === \"symbol\") { Log.exx('cannot set a symbol in dictionary', {target, key, value, proxyitself}); return false; }\r\n        SetRootFieldAction.new(this.additionalPath + '.' + key, value, '',false)\r\n        return true;\r\n    }\r\n\r\n    public deleteProperty(target: Dictionary, key: string | symbol, proxyItself?: Proxyfied<any>): boolean {\r\n        if (typeof key === \"symbol\") return false;\r\n        this.set(target, key, undefined, proxyItself);\r\n        delete target[key];\r\n        return true; }\r\n}\r\nRuntimeAccessibleClass.set_extend(MyProxyHandler, MapProxyHandler);\r\n// 15-20 min + 5 di domande entro il 1° ottobre, discussione 10-12 ottobre\r\nexport const getPath: GetPath = new Proxy( {}, new GetPathHandler());\r\n(window as any).getPath = getPath;\r\n// usage: pathstring = ((getPath as DType).some.path.to.follow as any).$; // = \"some.path.to.follow\" with compilation-time validation\r\n","import {DocString, EdgeHead, ShortAttribETypes as SAType, U} from '../joiner';\r\nimport {GObject, RuntimeAccessible} from '../joiner';\r\nimport React, {ReactElement} from \"react\";\r\n// const beautify = require('js-beautify').html; // BEWARE: this adds some newline that might be breaking and introduce syntax errors in our JSX parser\r\nconst beautify = (s: any)=>s;\r\nlet ShortAttribETypes: typeof SAType = (window as any).ShortAttribETypes;\r\n\r\n@RuntimeAccessible\r\nexport class DV {\r\n    public static modelView(): string { return beautify(DefaultView.model()); } // damiano: che fa beautify? magari potremmo settarlo in LView.set_jsx invece che solo qui, così viene formattato anche l'input utente?\r\n    public static packageView(): string { return beautify(DefaultView.package()); }\r\n    public static classView(): string { return beautify(DefaultView.class()); }\r\n    public static attributeView(): string { return beautify(DefaultView.feature()); }\r\n    public static referenceView(): string { return beautify(DefaultView.feature()); }\r\n    public static enumeratorView(): string { return beautify(DefaultView.enum()); }\r\n    public static literalView(): string { return beautify(DefaultView.literal()); }\r\n    public static voidView(): string { return beautify(DefaultView.void()); }\r\n    public static operationView(): string { return beautify(DefaultView.operation()); }\r\n    public static operationViewm1(): string { return beautify(DefaultView.operationm1()); }\r\n    public static objectView(): string { return beautify(DefaultView.object()); }\r\n    public static valueView(): string { return beautify(DefaultView.value()); }\r\n    public static defaultPackage(): string { return beautify(DefaultView.defaultPackage()); }\r\n    public static errorView_string(publicmsg: string | JSX.Element, debughiddenmsg?:any): string {\r\n        let visibleMessage = publicmsg && typeof publicmsg === \"string\" ? U.replaceAll(publicmsg, \"Parse Error: \", \"\") : publicmsg;\r\n        console.error(\"error in view:\", {publicmsg, debuginfo:debughiddenmsg}); return DefaultView.error_string(visibleMessage); }\r\n    public static errorView(publicmsg: string | JSX.Element, debughiddenmsg?:any): React.ReactNode {\r\n        let visibleMessage = publicmsg && typeof publicmsg === \"string\" ? U.replaceAll(publicmsg, \"Parse Error: \", \"\") : publicmsg;\r\n        console.error(\"error in view:\", {publicmsg, debuginfo:debughiddenmsg}); return DefaultView.error(visibleMessage); }\r\n\r\n    static edgePointView(): string { return beautify(\r\n        `<div className={\"edgePoint\"} tabIndex=\"-1\" hoverscale={\"hardcoded in css\"} style={{borderRadius:\"999px\", border: \"2px solid black\", background:\"transparent\", width:\"100%\", height:\"100%\"}} />`\r\n    )}\r\n    static edgePointViewSVG(): string { return beautify(\r\n        `<ellipse stroke={\"black\"} fill={\"red\"} cx={\"50\"} cy={\"50\"} rx={\"20\"} ry={\"20\"} />`\r\n        //`<ellipse stroke={\"black\"} fill={\"red\"} cx={this.props.node.x} cy={this.props.node.y} rx={this.props.node.w} ry={this.props.node.h} />`\r\n    )}\r\n\r\n    static svgHeadTail(head: \"Head\" | \"Tail\", type: EdgeHead): string {\r\n        let inner: string;\r\n        let headstr = head===\"Head\" ? \"this.segments.head\" : \"this.segments.tail\";\r\n        let styleTranslate = \"{}\"; // '{transform:\"translate(\" + ' + headstr + '.x + \"px, \" + ' + headstr + '.y + \"px)\"}';\r\n        let styleTranslateRotate = '{transform:\"translate(\" + ' + headstr + '.x + \"px, \" + ' + headstr + '.y + \"px) rotate(\" + (' + headstr + '.rad) + \"rad)\",' +\r\n            ' \"transformOrigin\":'+headstr+'.w/2+\"px \"+ '+headstr+'.h/2+\"px\"}';\r\n        let styleRotate = 'style={{transform:\"rotate(\" + ' + headstr + '.rad + \"rad), transformOrigin:\"noooope  not center\"}}'; // edgeHead EdgeReference\r\n        let attrs = `\\n\\t\\t\\t\\tstyle={`+styleTranslateRotate +`}\\n\\t\\t\\t\\t stroke={this.strokeColor} strokeWidth={this.strokeWidth}\r\n className={\"edge` + head + ` ` + type +` preview\"}></path>\\n`;\r\n        let path: string;\r\n        let hoverAttrs = `\\n\\t\\t\\t\\tstyle={`+styleTranslateRotate +`}\\n\\t\\t\\t\\t stroke={this.segments.all[0]&&(this.segments.all[0].length > this.strokeLengthLimit )&& this.strokeColorLong || this.strokeColorHover} strokeWidth={this.strokeWidthHover}\r\n className={\"edge` + head + ` ` + type +` clickable content\"}></path>\\n`;\r\n        switch(type) {\r\n            default:\r\n                inner = \"edge '\" + head + \"' with type: '\" +type + \"' not found\";\r\n                break;\r\n            case EdgeHead.extend:\r\n                path = `<path d={\"M 0 0   L \" + `+headstr+`.w + \" \" + `+headstr+`.h/2 + \"   L 0 \" + `+headstr+`.h + \"Z\" } fill=\"#fff\" `;\r\n                inner = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.reference:\r\n                path = `<path d={\"M 0 0   L \" + `+headstr+`.w + \" \" + `+headstr+`.h/2 + \"   L 0 \" + `+headstr+`.h } fill=\"none\" `;\r\n                inner = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.aggregation:\r\n                path = `<path d={\"M 0 \" + `+headstr+`.h/2 + \" L \" + `+headstr+`.w/2 + \" 0 L \" +\r\n                    `+headstr+`.w + \" \" +`+headstr+`.h/2 + \" L \" + `+headstr+`.w/2 + \" \" + `+headstr+`.h + \" Z\"} fill=\"#fff\" `;\r\n                inner = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.composition:\r\n                path = `<path d={\"M 0 \" + `+headstr+`.h/2 + \" L \" + `+headstr+`.w/2 + \" 0 L \" +\r\n                    `+headstr+`.w + \" \" + `+headstr+`.h/2 + \" L \" + `+headstr+`.w/2 + \" \" + `+headstr+`.h + \" Z\"} fill=\"#000\" `;\r\n                inner = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n                /* `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" style={overflow: \"visible\"}>\r\n                                            <path d={\"M 10 0 L 0 20 L 20 20 Z\"} fill=\"#ffffff\" stroke=\"#808080\" strokeWidth=\"1\"></path>\r\n                                         </svg>`;*/\r\n                //  style={transform: \"rotate3d(xcenter, ycenter, zcenter??, 90deg)\"}\r\n        }\r\n        //  transform={\"rotate(\"+`+headstr+`.rad+\"rad \"+ this.segments.all[0].start.pt.toString(false, \" \")}\r\n        return inner; // no wrap because of .hoverable > .preview  on root & subelements must be consecutive\r\n        // return `<g className=\"edge`+head + ` ` + type +`\" style={` + styleTranslate + `}>\\n`+ inner +`</g>`\r\n    }\r\n\r\n    // about label rotation in .edge > foreignObect > div (label)\r\n    // first transform is h-center. second is rotate, third adds [0, 50%] of 50% vertical offset AFTER rotation to take label out of edge. fourth is to add a margin.\r\n    static edgeView(modename: EdgeHead, head: DocString<\"JSX\">, tail: DocString<\"JSX\">, dashing: string | undefined): string { return beautify(\r\n        `<div className={\"edge ` + modename + `\"} style={{overflow: \"visible\", width:\"100%\", height:\"100%\", pointerEvents:\"none\"}}>\r\n            <svg className={\"hoverable\"} style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\r\n                { /* edge full segment */ }\r\n                <path className={\"preview\"} strokeWidth={this.strokeWidth}\r\n                stroke={this.strokeColor} fill={\"none\"} d={this.edge.d} strokeDasharray=\"` + dashing + `\"></path>\r\n                { /* edge separate segments */ }\r\n                { console.warn(\"inside jxs\", {thiss:this, segments:this.segments}) && null }\r\n                {this.segments.all.flatMap(s => [\r\n                    <path className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={this.strokeWidthHover}\r\n                    stroke={s.length > this.strokeLengthLimit && this.strokeColorLong || this.strokeColorHover}\r\n                     fill={\"none\"} d={s.dpart}></path>,\r\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\r\n                    <div\r\n                     style={{width: \"fit-content\",\r\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\r\n                     \" translate(0%, -5px\", color: this.strokeColor}}>{s.label}</div>\r\n                    </foreignObject>\r\n                ])}\r\n            { /* edge head */ }\r\n            ` + head + `\r\n            { /* edge tail */ }\r\n            ` + tail + `\r\n            </svg>\r\n            { /* interactively added edgepoints */ }\r\n            {\r\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\r\n            }{\r\n                \r\n                false && edge.end.model.attributes.map( (m, index, arr) => <EdgePoint data={m.id} initialSize={(parent) => {\r\n                    let segs = parent.segments.segments;\r\n                    let pos = segs[0].start.pt.multiply(1-(index+1)/(arr.length+1), true).add(segs[segs.length-1].end.pt.multiply((index+1)/(arr.length+1), true));\r\n                    // console.trace(\"initial ep\", {segs, pos, ratio:(index+1)/(arr.length+1), s:segs[0].start.pt, e:segs[segs.length-1].end.pt});\r\n                    return {...pos, w:55, h:55}}} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\r\n                    \r\n            }{\r\n                false && <EdgePoint key={\"midnode1\"} view={\"Pointer_ViewEdgePoint\"} />\r\n            }{\r\n                false && <EdgePoint key={\"midnode2\"} view={\"Pointer_ViewEdgePoint\"} />\r\n            }{\r\n                false && props.children && \"this would cause loop no idea why, needs to be fixed to allow passing EdgeNodes here\" || []\r\n            }\r\n        </div>`\r\n    )}\r\n}\r\n\r\nlet valuecolormap: GObject = {};\r\nvaluecolormap[ShortAttribETypes.EBoolean] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EByte] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EShort] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EInt] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.ELong] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EFloat] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EDouble] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EDate] = \"green\";\r\nvaluecolormap[ShortAttribETypes.EString] = \"green\";\r\nvaluecolormap[ShortAttribETypes.EChar] = \"green\";\r\nvaluecolormap[ShortAttribETypes.void] = \"gray\";\r\n\r\n// &&[]bn\r\nlet valuecolormap_str = JSON.stringify(valuecolormap);\r\n\r\n\r\nclass DefaultView {\r\n\r\n    public static model(): string {\r\n        return `<div className={'root model'}>\r\n            {!this.data && \"Model data missing.\"}\r\n            <div className=\"edges\" style={{zIndex:101, position: \"absolute\", height:0, width:0, overflow: \"visible\"}}>{[\r\n                    true && this.data.suggestedEdges.reference &&\r\n                    this.data.suggestedEdges.reference.map(\r\n                        se => (!se.vertexOverlaps)\r\n                         && <DamEdge start={se.start.father} end={se.end} view={\"Pointer_ViewEdge\" + ( se.start.containment && \"Composition\" || \"Association\")} key={se.start.node.id+\"~\"+se.end.node.id}/>)\r\n                         ,\r\n                    true && this.data.suggestedEdges.extend &&\r\n                    this.data.suggestedEdges.extend.map(\r\n                        se => (!se.vertexOverlaps)\r\n                         && <DamEdge start={se.start} end={se.end} view={\"Pointer_ViewEdgeInheritance\"} key={se.start.node.id+\"~\"+se.end.node.id}/>)]\r\n                }\r\n            </div>\r\n             {this.data && this.data.packages.map((pkg, index) => {\r\n                return <DefaultNode key={pkg.id} data={pkg.id}></DefaultNode>\r\n            })}\r\n            {this.data && this.data.allSubObjects.map((child, index) => {\r\n                return <DefaultNode key={child.id} data={child.id}></DefaultNode>\r\n            })}\r\n        </div>`;\r\n    }\r\n\r\n    public static void(): string {\r\n        return `<div className={'round bg-white root void model-less p-1'}>\r\n            <div>voidvertex element test</div>\r\n            <div>data: {this.props.data ? this.props.data.name : \"empty\"}</div>\r\n        </div>`;\r\n    }\r\n    public static package(): string {\r\n        return `<div className={'round bg-white root package'}>\r\n            { /*<Input jsxLabel={<b className={'package-name'}>EPackage:</b>} field={'name'} hidden={true} />*/ }\r\n            { console.log(\"evalcontex:\", {thiss: this, pname: this.pname, c: this._context}) && null}\r\n            <Input jsxLabel={<b>{this.pname}:</b>} field={'name'} hidden={true} />\r\n            <hr />\r\n            <div className={'package-children'}>\r\n                {this.data.children.map((child, index) => {\r\n                    return <DefaultNode key={child.id} data={child.id}></DefaultNode>\r\n                })}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    public static class(): string {\r\n        return `<div className={'round bg-white root class'}>\r\n            <Input jsxLabel={<b className={'class-name'}>EClass:</b>} \r\n                   data={this.data.id} field={'name'} hidden={true} autosize={true} />\r\n            <hr/>\r\n            {/* i kept them separated because i want them in this order. i could have used data.children once, or put all in same container to mix them. */}\r\n            <div className={'class-children'}>{ this.data.attributes.map(c => <DefaultNode key={c.id} data={c.id} />) }</div>\r\n            <div className={'class-children'}>{ this.data.references.map(c => <DefaultNode key={c.id} data={c.id} />) }</div>\r\n            <div className={'class-children'}>{ this.data.operations.map(c => <DefaultNode key={c.id} data={c.id} />) }</div>\r\n        </div>`;\r\n    }\r\n\r\n    public static enum(): string {\r\n        return `<div className={'round bg-white root enumerator'}>\r\n            <Input jsxLabel={<b className={'enumerator-name'}>EEnum:</b>} \r\n                   data={this.data.id} field={'name'} hidden={true} autosize={true} />\r\n            <hr />\r\n            <div className={'enumerator-children'}>\r\n                {this.data.children.map((child, index) => {\r\n                    return <DefaultNode key={child.id} data={child.id}></DefaultNode>\r\n                })}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    public static feature(): string {\r\n        return `<div><Select className={'root feature'} data={this.data} field={'type'} label={this.data.name} /></div>`;\r\n    }\r\n\r\n    public static literal(): string {\r\n        return `<label className={'d-block text-center root literal'}>{this.data.name}</label>`\r\n    }\r\n\r\n    public static operation(): string {\r\n        return `<Select className={'root operation'} data={this.data} field={'type'} label={this.data.name+this.data.signature} />`;\r\n    }\r\n\r\n\r\n\r\n    public static operationm1(): string {\r\n        return `<div className={'d-flex root operationm1'} style={{paddingRight: \"6px\"}}>\r\n             {<label className={'d-block ms-1'}>{this.props.data.instanceof.name}</label>}\r\n            <label className={'d-block ms-auto hover-root'} style={{color:` + valuecolormap_str + `[this.props.data.values.type] || \"gray\"\r\n            }}>→→→{\r\n                <div className=\"hover-content\">{\r\n                    <ParameterForm operation = {this.props.data.id} vertical={true} />\r\n                }\r\n                }</label>\r\n        </div>`\r\n    }\r\n\r\n    public static object(): string {\r\n        return `<div className={'round bg-white root class'}>\r\n            <label className={'ms-1'}>\r\n                <Input jsxLabel={<b className={'class-name'}>{this.data.instanceof ? this.data.instanceof.name : \"Object\"}:</b>} \r\n                   data={this.data.id} field={'name'} hidden={true} autosize={true}/>\r\n            </label>\r\n            <hr />\r\n            <div className={'object-children'}>\r\n                {this.data.features.map((child, index) => {\r\n                    return <DefaultNode key={child.id} data={child.id}></DefaultNode>\r\n                })}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    public static value() {\r\n        return `<div className={'d-flex root value'} style={{paddingRight: \"6px\"}}>\r\n             {this.props.data.instanceof && <label className={'d-block ms-1'}>{this.props.data.instanceof.name}</label>}\r\n             {!this.props.data.instanceof && <Input asLabel={true} data={this.data.id} field={'name'} hidden={true} autosize={true} />}\r\n            <label className={'d-block ms-auto'} style={{color:` + valuecolormap_str + `[this.props.data.values.type] || \"gray\"\r\n            }}>: {this.props.data.valuestring()}</label>\r\n        </div>`\r\n    }\r\n\r\n    public static defaultPackage() {\r\n        return `<div style={{backgroundColor: 'transparent', position: 'fixed', width: '-webkit-fill-available', height: '-webkit-fill-available'}}>\r\n            {this.data.children.map((child, index) => {\r\n            return <DefaultNode key={child.id} data={child.id}></DefaultNode>\r\n            })}\r\n        </div>`;\r\n    }\r\n\r\n    public static error(msg: undefined | string | JSX.Element) {\r\n        return <div className={'w-100 h-100 round bg-white border border-danger'} style={{minHeight:\"min-content\"}}>\r\n            <div className={'text-center text-danger'} style={{background:\"#fff7\"}}>\r\n                <b>SYNTAX ERROR</b>\r\n                <hr/>\r\n                <label className={'text-center mx-1 d-block'}>\r\n                    The JSX you provide is NOT valid!\r\n                </label>\r\n                {msg && <label className={'text-center mx-1 d-block'} style={{color:\"black\"}}>{msg}</label>}\r\n            </div>\r\n        </div>;\r\n    }\r\n    public static error_string(msg: undefined | string | JSX.Element): string {\r\n        return `<div className={'w-100 h-100 round bg-white border border-danger'} style={{minHeight:\"min-content\"}}>\r\n            <div className={'text-center text-danger'} style={{background:\"#fff7\"}}>\r\n                <b>SYNTAX ERROR</b>\r\n                <hr/>\r\n                <label className={'text-center mx-1 d-block'}>\r\n                    The JSX you provide is NOT valid!\r\n                </label>\r\n                ` + (msg ? `<label className={'text-center mx-1 d-block'} style={{color:\"black\"}>{\"` + msg + `\"}</label>` : \"\") + `\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n}\r\n","import type { GObject, Temporary, TODO} from \"../joiner\";\r\nimport {DPointerTargetable, RuntimeAccessible, windoww, Log, RuntimeAccessibleClass} from \"../joiner\";\r\n\r\n@RuntimeAccessible\r\nexport abstract class IPoint extends RuntimeAccessibleClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public x!: number;\r\n    public y!: number;\r\n\r\n    // @ts-ignore static getM is not null but must be declared nullable to achieve subclass mixing\r\n    // public static getM? = function(firstPt: IPoint, secondPt: IPoint): number { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }\r\n    public static getM(firstPt: IPoint, secondPt: IPoint): number { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }\r\n    public static getQ(firstPt: IPoint, secondPt: IPoint, m?: number): number {\r\n        if (m === undefined) m = IPoint.getM(firstPt, secondPt);\r\n        return firstPt.y - (m * firstPt.x);\r\n    }\r\n\r\n    public constructor(x: number = 0, y: number = 0) {\r\n        super(); // super('dwc');\r\n        IPoint.init_constructor(this, x, y);\r\n    }\r\n\r\n    static init_constructor(thiss: GObject, x: any = 0, y: any = 0, ...a: any): void {\r\n        thiss.id = \"POINT_\" + (DPointerTargetable.maxID++) + \"_\" + new Date().getTime();\r\n        thiss.className = thiss.constructor.name;\r\n        if (x === null || x === undefined) thiss.x = undefined as Temporary;\r\n        else if (isNaN(+x)) { thiss.x = 0; }\r\n        else thiss.x = +x;\r\n        if (y === null || y === undefined) thiss.y = undefined as Temporary;\r\n        else if (isNaN(+y)) { thiss.y = 0; }\r\n        else thiss.y = +y;\r\n        thiss.className = this.name;\r\n    }\r\n\r\n    public raw(): {x: number, y: number} { return {x: this.x, y: this.y}; }\r\n\r\n    public toString(letters: boolean=true, separator: string = \" \"): string {\r\n        if (letters) return  JSON.stringify({x:this.x, y: this.y});\r\n        else return this.x + separator + this.y + separator;\r\n    }\r\n    public clone(other: { x: number, y: number }): this { this.x = other.x; this.y = other.y; return this; }\r\n\r\n    protected abstract new(): this;\r\n    public duplicate(): this { const ret = this.new(); ret.clone(this); return ret; }\r\n\r\n    public distanceFromPoint(tentativeEnd: IPoint, skipSqrt: boolean = false): number {\r\n        let d_pow2 = (this.x - tentativeEnd.x)**2 + (this.y - tentativeEnd.y)**2;\r\n        return skipSqrt ? d_pow2 : Math.sqrt(d_pow2);\r\n        // return this.subtract(tentativeEnd, true).absolute();\r\n    }\r\n\r\n    public subtract(p2: IPoint, newInstance: boolean): this {\r\n        Log.e(!p2, 'subtract argument must be a valid point: ', p2);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x -= p2.x;\r\n        p1.y -= p2.y;\r\n        return p1; }\r\n\r\n    public add(p2: { x: number, y: number }, newInstance: boolean): this {\r\n        Log.e(!p2, 'add argument must be a valid point: ', p2);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x += p2.x;\r\n        p1.y += p2.y;\r\n        return p1; }\r\n\r\n    public addAll(p: IPoint[], newInstance: boolean): this {\r\n        let i;\r\n        let p0: this;\r\n        if (!newInstance) { p0 = this; } else { p0 = this.duplicate(); }\r\n        for (i = 0; i < p.length; i++) { p0.add(p[i], true); }\r\n        return p0; }\r\n\r\n    public subtractAll(p: this[], newInstance: boolean): this {\r\n        let i;\r\n        let p0: this;\r\n        if (!newInstance) { p0 = this; } else { p0 = this.duplicate(); }\r\n        for (i = 0; i < p.length; i++) { p0.subtract(p[i], true); }\r\n        return p0; }\r\n\r\n    public multiply(pt: Partial<this> | number, newInstance: boolean = false): this {\r\n        let ret: this = (newInstance ? this.duplicate() : this);\r\n        if (typeof pt === \"number\") {\r\n            ret.x *= pt;\r\n            ret.y *= pt;\r\n        }\r\n        else {\r\n            if (\"x\" in pt) ret.x *= pt.x as number;\r\n            if (\"y\" in pt) ret.y *= pt.y as number;\r\n        }\r\n        return ret; }\r\n\r\n    public divide(pt: Partial<this> | number, newInstance: boolean = false): this {\r\n        let ret = (newInstance ? this.duplicate() : this);\r\n        if (typeof pt === \"number\") {\r\n            ret.x /= pt;\r\n            ret.y /= pt;\r\n        }\r\n        else {\r\n            ret.x /= pt.x as number;\r\n            ret.y /= pt.y as number;\r\n        }\r\n        return ret; }\r\n\r\n    public multiplyScalar(scalar: number, newInstance: boolean): this {\r\n        Log.e(isNaN(+scalar), 'IPoint.multiply()', 'scalar argument must be a valid number: ', scalar);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x *= scalar;\r\n        p1.y *= scalar;\r\n        return p1; }\r\n\r\n    public divideScalar(scalar: number, newInstance: boolean): this {\r\n        Log.e(isNaN(+scalar), 'IPoint.divide()', 'scalar argument must be a valid number: ', scalar);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x /= scalar;\r\n        p1.y /= scalar;\r\n        return p1; }\r\n\r\n    public isInTheMiddleOf(firstPt: this, secondPt: this, tolleranza: number): boolean {\r\n        const rectangle: Size = Size.fromPoints(firstPt, secondPt);\r\n        const tolleranzaX = tolleranza; // actually should be cos * arctan(m);\r\n        const tolleranzaY = tolleranza; // actually should be sin * arctan(m);\r\n        if (this.x < rectangle.x - tolleranzaX || this.x > rectangle.x + rectangle.w + tolleranzaX) { return false; }\r\n        if (this.y < rectangle.y - tolleranzaX || this.y > rectangle.y + rectangle.h + tolleranzaY) { return false; }\r\n        // const m = IPoint.getM(firstPt, secondPt);\r\n        // const q = IPoint.getQ(firstPt, secondPt);\r\n        const lineDistance = this.distanceFromLine(firstPt, secondPt);\r\n        // console.log('distance:', lineDistance, ', this:', this, ', p1:', firstPt, ', p2:', secondPt);\r\n        return lineDistance <= tolleranza; }\r\n\r\n    public distanceFromLine(p1: IPoint, p2: IPoint): number {\r\n        const top: number =\r\n            + (p2.y - p1.y) * this.x\r\n            - (p2.x - p1.x) * this.y\r\n            + p2.x * p1.y\r\n            - p1.x * p2.y;\r\n        const bot =\r\n            (p2.y - p1.y) * (p2.y - p1.y) +\r\n            (p2.x - p1.x) * (p2.x - p1.x);\r\n        return Math.abs(top) / Math.sqrt(bot);  }\r\n\r\n    public equals(pt: IPoint, tolleranzaX: number = 0, tolleranzaY: number = 0): boolean {\r\n        if (pt === null) { return false; }\r\n        return Math.abs(this.x - pt.x) <= tolleranzaX && Math.abs(this.y - pt.y) <= tolleranzaY; }\r\n\r\n    public moveOnNearestBorder(startVertexSize: ISize, clone: boolean, graph: TODO/*IGraph*/, debug: boolean = true): IPoint {\r\n        const pt: IPoint = clone ? this.duplicate() : this;\r\n        const tl: IPoint = startVertexSize.tl();\r\n        const tr: IPoint = startVertexSize.tr();\r\n        const bl: IPoint = startVertexSize.bl();\r\n        const br: IPoint = startVertexSize.br();\r\n        const L: number = pt.distanceFromLine(tl, bl);\r\n        const R: number = pt.distanceFromLine(tr, br);\r\n        const T: number = pt.distanceFromLine(tl, tr);\r\n        const B: number = pt.distanceFromLine(bl, br);\r\n        const min: number = Math.min(L, R, T, B);\r\n        if (min === L) { pt.x = tl.x; }\r\n        if (min === R) { pt.x = tr.x; }\r\n        if (min === T) { pt.y = tr.y; }\r\n        if (min === B) { pt.y = br.y; }\r\n        if (debug && graph && pt instanceof GraphPoint) { graph.markg(pt, false, 'purple'); }\r\n        return pt; }\r\n\r\n    public getM(pt2: IPoint): number { return IPoint.getM?.(this, pt2) as unknown as number; }\r\n\r\n    public degreeWith(pt2: IPoint, toRadians: boolean): number {\r\n        const directionVector: IPoint = this.subtract(pt2, true);\r\n        const ret: number = Math.atan2(directionVector.y, directionVector.x);\r\n        return toRadians ? ret : windoww.U.RadToDegree(ret); }\r\n\r\n    public absolute(): number { return Math.sqrt(this.x * this.x + this.y * this.y); }\r\n    public set(x: number, y: number) { this.x = x; this.y = y; }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class GraphPoint extends IPoint{\r\n    private dontmixwithPoint: any;\r\n    public static fromEvent(e: JQuery.ClickEvent | JQuery.MouseMoveEvent | JQuery.MouseUpEvent | JQuery.MouseDownEvent | JQuery.MouseEnterEvent | JQuery.MouseLeaveEvent | JQuery.MouseEventBase)\r\n        : GraphPoint | null {\r\n        if (!e) { return null; }\r\n        const p: Point = new Point(e.pageX, e.pageY);\r\n        const g: any = null;\r\n        throw new Error(\"todo: const g: IGraph = Status.status.getActiveModel().graph;\");\r\n        return g.toGraphCoord(p); }\r\n\r\n    protected new(): this { return new GraphPoint() as this;}\r\n\r\n}\r\n\r\n\r\n@RuntimeAccessible\r\nexport class Point extends IPoint{\r\n    private dontmixwithGPoint: any;\r\n    /// https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y\r\n    public static fromEvent(e: JQuery.ClickEvent | JQuery.MouseMoveEvent | JQuery.MouseUpEvent | JQuery.MouseDownEvent | JQuery.MouseEnterEvent | JQuery.MouseLeaveEvent | JQuery.MouseEventBase)\r\n        : Point {\r\n        const p: Point = new Point(e.pageX, e.pageY);\r\n        return p; }\r\n\r\n    protected new(): this { return new Point() as this;}\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, IPoint);\r\nRuntimeAccessibleClass.set_extend(IPoint, GraphPoint);\r\nRuntimeAccessibleClass.set_extend(IPoint, Point);\r\n@RuntimeAccessible\r\nexport abstract class ISize<PT extends IPoint = IPoint> extends RuntimeAccessibleClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public x!: number;\r\n    public y!: number;\r\n    public w!: number;\r\n    public h!: number;\r\n    public constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n        super(); // super('dwc');\r\n        // do not override any fields from the DPointerTargetable, otherwise the ! in the override will reinizialize the attribute\r\n        // erasing the value set in super or in the functions called by the constructor as side effect (static_init called from constructor will be overridden too)\r\n        // if need to override types, build the \"new\" static function like in DModelElement\r\n        ISize.init_constructor(this, x, y, w, h);\r\n    }\r\n\r\n    static init_constructor(thiss: GObject, x: any = 0, y: any = 0, w: any = 0, h: any = 0, ...a: any): void {\r\n        thiss.id = \"SIZE_\" + (DPointerTargetable.maxID++) + \"_\" + new Date().getTime();\r\n        thiss.className = thiss.constructor.name;\r\n        if (x === null || x === undefined) thiss.x = undefined as Temporary;\r\n        else if (isNaN(+x)) { thiss.x = 0; }\r\n        else thiss.x = +x;\r\n        if (y === null || y === undefined) thiss.y = undefined as Temporary;\r\n        else if (isNaN(+y)) { thiss.y = 0; }\r\n        else thiss.y = +y;\r\n        if (w === null || w === undefined) thiss.w = undefined as Temporary;\r\n        else if (isNaN(+w)) { thiss.w = 0; }\r\n        else thiss.w = +w;\r\n        if (h === null || h === undefined) thiss.h = undefined as Temporary;\r\n        else if (isNaN(+h)) { thiss.h = 0; }\r\n        else thiss.h = +h;\r\n        thiss.className = this.name; }\r\n\r\n    public toString(letters: boolean=true, separator: string = \" \"): string {\r\n        if (letters) return JSON.stringify({x: this.x, y: this.y, w: this.w, h: this.h});\r\n        else return this.x + separator + this.y + separator + this.w + separator + this.h;\r\n    }\r\n\r\n    public set(x?: number, y?: number, w?: number, h?: number): void {\r\n        if (x !== undefined) (this.x = +x);\r\n        if (y !== undefined) (this.y = +y);\r\n        if (w !== undefined) (this.w = +w);\r\n        if (h !== undefined) (this.h = +h);\r\n    }\r\n\r\n    protected abstract makePoint(x: number, y: number): PT;\r\n    protected abstract new(...args:any): this;\r\n    public clone(json: this): this { this.x = json.x; this.y = json.y; this.w = json.w; this.h = json.h; return this; }\r\n    public duplicate(): this { return this.new().clone(this); }\r\n\r\n    public add(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x += pt2; thiss.y += pt2; thiss.w += pt2; thiss.h += pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x += pt2.x;\r\n        if (pt2.y !== undefined) thiss.y += pt2.y;\r\n        if (pt2.w !== undefined) thiss.w += pt2.w;\r\n        if (pt2.h !== undefined) thiss.h += pt2.h;\r\n        return thiss; }\r\n\r\n    public subtract(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x -= pt2; thiss.y -= pt2; thiss.w -= pt2; thiss.h -= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x -= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y -= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w -= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h -= pt2.h;\r\n        return thiss; }\r\n\r\n    public multiply(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x *= pt2; thiss.y *= pt2; thiss.w *= pt2; thiss.h *= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x *= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y *= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w *= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h *= pt2.h;\r\n        return thiss; }\r\n\r\n    public divide(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x /= pt2; thiss.y /= pt2; thiss.w /= pt2; thiss.h /= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x /= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y /= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w /= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h /= pt2.h;\r\n        return thiss; }\r\n\r\n\r\n    public tl(): PT {     return this.makePoint(   this.x,                 this.y             ); }\r\n    public tr(): PT {     return this.makePoint(this.x + this.w,        this.y             ); }\r\n    public bl(): PT {     return this.makePoint(   this.x,              this.y + this.h    ); }\r\n    public br(): PT {     return this.makePoint(this.x + this.w,     this.y + this.h    ); }\r\n    public center(): PT { return this.makePoint(this.x + this.w / 2, this.y + this.h / 2); }\r\n    public relativePoint(xPercent: number, yPercent: number): PT { return this.makePoint(this.x + this.w * xPercent, this.y + this.h * yPercent); }\r\n    public equals(size: this): boolean { return this.x === size.x && this.y === size.y && this.w === size.w && this.h === size.h; }\r\n\r\n    /// field-wise Math.min()\r\n    public min(minSize: this, clone: boolean): this {\r\n        const ret: this = clone ? this.new() : this;\r\n        if (!isNaN(minSize.x) && ret.x < minSize.x) { ret.x = minSize.x; }\r\n        if (!isNaN(minSize.y) && ret.y < minSize.y) { ret.y = minSize.y; }\r\n        if (!isNaN(minSize.w) && ret.w < minSize.w) { ret.w = minSize.w; }\r\n        if (!isNaN(minSize.h) && ret.h < minSize.h) { ret.h = minSize.h; }\r\n        return ret; }\r\n    public max(maxSize: this, clone: boolean): this {\r\n        const ret: this = clone ? this.new() : this;\r\n        if (!isNaN(maxSize.x) && ret.x > maxSize.x) { ret.x = maxSize.x; }\r\n        if (!isNaN(maxSize.y) && ret.y > maxSize.y) { ret.y = maxSize.y; }\r\n        if (!isNaN(maxSize.w) && ret.w > maxSize.w) { ret.w = maxSize.w; }\r\n        if (!isNaN(maxSize.h) && ret.h > maxSize.h) { ret.h = maxSize.h; }\r\n        return ret; }\r\n\r\n    public intersection(size: this): this | null {\r\n        if (!size) return null;\r\n        // anche \"isinside\"\r\n        let startx, starty, endx, endy;\r\n        startx = Math.max(this.x, size.x);\r\n        starty = Math.max(this.y, size.y);\r\n        endx = Math.min(this.x + this.w, size.x + size.w);\r\n        endy = Math.min(this.y + this.h, size.y + size.h);\r\n        const intersection: this = this.new();\r\n        // intersection.set(0, 0, 0, 0);\r\n        intersection.x = startx;\r\n        intersection.y = starty;\r\n        intersection.w = endx - startx;\r\n        intersection.h = endy - starty;\r\n        const doesintersect: boolean = intersection.w > 0 && intersection.h > 0;\r\n        return (doesintersect) ? intersection: null; }\r\n\r\n    public contains(pt: PT): boolean {\r\n        return  pt.x >= this.x && pt.x <= this.x + this.w && pt.y >= this.y && pt.y <= this.y + this.h; }\r\n\r\n    public isOverlapping(size2: this): boolean { return !!this.intersection(size2); }\r\n    public isOverlappingAnyOf(sizes: this[]): boolean {\r\n        if (!sizes) return false;\r\n        for (let size of sizes) { if (this.isOverlapping(size)) return true; }\r\n        return false;\r\n    }\r\n\r\n    public multiplyPoint(other: PT, newInstance: boolean): this {\r\n        const ret: this = newInstance ? this.new() : this;\r\n        ret.x *= other.x;\r\n        ret.w *= other.x;\r\n        ret.y *= other.y;\r\n        ret.h *= other.y;\r\n        return ret; }\r\n\r\n    public dividePoint(other: PT, newInstance: boolean): this {\r\n        const ret: this = newInstance ? this.new() : this;\r\n        ret.x /= other.x;\r\n        ret.w /= other.x;\r\n        ret.y /= other.y;\r\n        ret.h /= other.y;\r\n        return ret; }\r\n\r\n    public boundary(size2: this): void {\r\n        /*let minx, maxx, miny, maxy;\r\n        if (size2.y < this.y) { miny = size2.y; /*maxy = this.y;* / } else { miny = this.y; /*maxy = size2.y;* / }\r\n        if (size2.x < this.x) { minx = size2.y; /*maxx = this.x;* / } else { minx = this.x; /*maxy = size2.x;* / }\r\n        if (size2.y + size2.h < this.y + this.h) maxy = this.y + this.h; else maxy = size2.y + size2.h;\r\n        if (size2.x + size2.w < this.x + this.w) maxx = this.x + this.w; else maxx = size2.x + size2.w;\r\n        */\r\n        this.h = (size2.y + size2.h > this.y + this.h ? size2.y + size2.h : this.y + this.h); // -miny\r\n        this.w = (size2.x + size2.w > this.x + this.w ? size2.x + size2.w : this.x + this.w); // -minx\r\n        if (this.y < size2.y) this.y = size2.y;\r\n        if (this.x < size2.x) this.x = size2.x;\r\n        this.h -= this.y;\r\n        this.w -= this.x;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class Size extends ISize<Point> {\r\n    static subclasses: any[] = [];\r\n    private static sizeofvar: HTMLElement;\r\n    private static $sizeofvar: JQuery<HTMLElement>;\r\n    private dontMixWithGraphSize: any;\r\n\r\n    public static of(element0: Element, debug: boolean = false): Size {\r\n        let element: HTMLElement = element0 as HTMLElement;\r\n        Log.l(debug, 'sizeof()',  element);\r\n        Log.e(element as any === document, 'trying to measure document.');\r\n        if (element as any === document) { element = document.body as any; }\r\n        const $element = $(element);\r\n        Log.e(!element || element.tagName === 'foreignObject', 'sizeof()', 'SvgForeignElementObject have a bug with size, measure a child instead.', element);\r\n        let tmp;\r\n        let size: Size;\r\n        if (!Size.sizeofvar) {\r\n            Size.sizeofvar = document.createElement('div');\r\n            document.body.append(Size.sizeofvar); }\r\n\r\n        const isOrphan = element.parentNode === null;\r\n        // var visible = element.style.display !== 'none';\r\n        // var visible = $element.is(\":visible\"); crea bug quando un elemento è teoricamente visibile ma orfano\r\n        const ancestors =  windoww.U.ancestorArray(element);\r\n        const displayStyles: string[] = ancestors.map( (e: HTMLElement) => e?.style?.display);\r\n        if (isOrphan) { Size.sizeofvar.append(element); }\r\n        // show all and saveToDB visibility to restore it later\r\n        for (let i = 0; i < ancestors.length; i++) { // document has undefined style\r\n            displayStyles[i] = ancestors[i]?.style?.display;\r\n            if (displayStyles[i] === 'none' || (displayStyles[i] === '' && getComputedStyle(ancestors[i]).display === 'none')) { ancestors[i].style.display = 'block' }\r\n        }\r\n        tmp = $element.offset() as JQuery.Coordinates; // made sure cannot be undefined by removing display:none\r\n        size = new Size(tmp.left, tmp.top, 0, 0);\r\n        tmp = element.getBoundingClientRect();\r\n        size.w = tmp.width;\r\n        size.h = tmp.height;\r\n        // restore visibility\r\n        for (let i = 0; i < ancestors.length; i++) {\r\n            if (displayStyles[i] === ancestors[i].style?.display) continue;\r\n            if (displayStyles[i]) ancestors[i].style.display = displayStyles[i];\r\n            else ancestors[i].style.removeProperty('display');\r\n        }\r\n        if (isOrphan) {  windoww.U.clear(Size.sizeofvar); }\r\n        // Status.status.getActiveModel().graph.markS(size, false);\r\n        return size;\r\n    }\r\n\r\n    public static fromPoints(firstPt: IPoint, secondPt: IPoint): Size {\r\n        const minX = Math.min(firstPt.x, secondPt.x);\r\n        const maxX = Math.max(firstPt.x, secondPt.x);\r\n        const minY = Math.min(firstPt.y, secondPt.y);\r\n        const maxY = Math.max(firstPt.y, secondPt.y);\r\n        return new Size(minX, minY, maxX - minX, maxY - minY); }\r\n\r\n    protected makePoint(x: number, y: number): Point { return new Point(x, y); }\r\n    protected new(...args:any): this { return new Size(...args) as this; }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class GraphSize extends ISize<GraphPoint> {\r\n    private dontMixWithSize: any;\r\n\r\n    public static fromPoints(firstPt: GraphPoint, secondPt: GraphPoint): GraphSize {\r\n        const minX = Math.min(firstPt.x, secondPt.x);\r\n        const maxX = Math.max(firstPt.x, secondPt.x);\r\n        const minY = Math.min(firstPt.y, secondPt.y);\r\n        const maxY = Math.max(firstPt.y, secondPt.y);\r\n        return new GraphSize(minX, minY, maxX - minX, maxY - minY); }\r\n\r\n\r\n    public static closestIntersection(size: GraphSize, pt0: GraphPoint, targetPt: GraphPoint, gridAlign?: GraphPoint, m0?:number, q0?:number): GraphPoint | undefined {\r\n        let pt: GraphPoint = pt0.duplicate();\r\n        const m = m0 || GraphPoint.getM(targetPt, pt);\r\n        const q = q0 || GraphPoint.getQ(targetPt, pt);\r\n        // console.log(\"closestIntersection()\", {size, pt0, targetPt, m, q});\r\n        // if perfectly vertical line\r\n        if (m === Number.POSITIVE_INFINITY/* && q === Number.NEGATIVE_INFINITY*/) {\r\n            // top center\r\n            if (Math.abs(targetPt.y - size.y) <= Math.abs(targetPt.y - size.y - size.h)) return new GraphPoint(pt0.x, size.y);\r\n            // bottom center\r\n            else return new GraphPoint(pt0.x, size.y + size.h);\r\n        }\r\n        let tl = size.tl(), tr = size.tr(),\r\n            bl = size.bl(), br = size.br();\r\n        let allowT: boolean, allowB: boolean,\r\n            allowL: boolean, allowR: boolean;\r\n        /*let distanceT: number = Number.POSITIVE_INFINITY, distanceB: number = Number.POSITIVE_INFINITY,\r\n            distanceL: number = Number.POSITIVE_INFINITY, distanceR: number = Number.POSITIVE_INFINITY;*/\r\n        let intersectionT: GraphPoint | undefined, intersectionB: GraphPoint | undefined,\r\n            intersectionL: GraphPoint | undefined, intersectionR: GraphPoint | undefined;\r\n\r\n\r\n        allowT = Geom.isNumberBetween(tl.y, bl.y, targetPt.y);\r\n        allowB = Geom.isNumberBetween(bl.y, tl.y, targetPt.y);\r\n        allowL = Geom.isNumberBetween(tl.x, tr.x, targetPt.x);\r\n        allowR = Geom.isNumberBetween(tr.x, tl.x, targetPt.x);\r\n        // console.log(\"closestIntersection pt0\", {size, targetPt, pt0:pt0.raw(), gridAlign,\r\n        //     corners:{tl:tl.raw(), tr:tr.raw(), bl:bl.raw(), br:br.raw()}, allows:{allowT, allowB, allowL, allowR}});\r\n        if (!(allowT || allowB || allowL || allowR)) return undefined; // point is internal to size\r\n        if (allowT) intersectionT = Geom.lineToSegmentIntersection(tl, tr, q, m); else\r\n        if (allowB) intersectionB = Geom.lineToSegmentIntersection(bl, br, q, m); // NOT else, (T|B) AND (L|R) can happen, or just 1 or 0 of those.\r\n        if (allowL) intersectionL = Geom.lineToSegmentIntersection(tl, bl, q, m); else\r\n        if (allowR) intersectionR = Geom.lineToSegmentIntersection(tr, br, q, m);\r\n\r\n        // console.log(\"closestIntersection pt2\", {intersectionT, intersectionB, intersectionL, intersectionR});\r\n        // only 1 intersection can happen\r\n        return intersectionT || intersectionB || intersectionL || intersectionR;\r\n    }\r\n    public static closestIntersection_old(size: GraphSize, prevPt: GraphPoint, pt0: GraphPoint, gridAlign?: GraphPoint): GraphPoint | null {\r\n        let ret = GraphSize.closestIntersection0(size, prevPt, pt0, gridAlign) as any;\r\n        // Log.exDev(!Geom.isOnEdge(ret, size), 'ClosestIntersection failed. not on Vertex edge.', {ret, size, prevPt, pt0, gridAlign});\r\n        return ret;\r\n    }\r\n    private static closestIntersection0(vertexGSize: GraphSize, prevPt: GraphPoint, pt0: GraphPoint, gridAlign?: GraphPoint): GraphPoint | null {\r\n        let pt: GraphPoint | null = pt0.duplicate();\r\n        const m = GraphPoint.getM(prevPt, pt) as number;\r\n        const q = GraphPoint.getQ(prevPt, pt) as number;\r\n        // U.pe( Math.abs((pt.y - m * pt.x) - (prevPt.y - m * prevPt.x)) > .001, 'wrong math in Q:', (pt.y - m * pt.x), ' vs ', (prevPt.y - m * prevPt.x));\r\n        /*const isL = prevPt.x < pt.x;\r\n    const isT = prevPt.y < pt.y;\r\n    const isR = !isL;\r\n    const isB = !isT; */\r\n        if (m === Number.POSITIVE_INFINITY && q === Number.NEGATIVE_INFINITY) { // bottom middle\r\n            return new GraphPoint(vertexGSize.x + vertexGSize.w / 2, vertexGSize.y + vertexGSize.h); }\r\n        // console.log('pt:', pt, 'm:', m, 'q:', q);\r\n        let L: GraphPoint | null = new GraphPoint(0, 0);\r\n        let T: GraphPoint | null = new GraphPoint(0, 0);\r\n        let R: GraphPoint | null = new GraphPoint(0, 0);\r\n        let B: GraphPoint | null = new GraphPoint(0, 0);\r\n        L.x = vertexGSize.x;\r\n        L.y = m * L.x + q;\r\n        R.x = vertexGSize.x + vertexGSize.w;\r\n        R.y = m * R.x + q;\r\n        T.y = vertexGSize.y;\r\n        T.x = (T.y - q) / m;\r\n        B.y = vertexGSize.y + vertexGSize.h;\r\n        B.x = (B.y - q) / m;\r\n        // prendo solo il compreso pt ~ prevPt (escludo così il \"pierce\" sulla faccia opposta), prendo il più vicino al centro.\r\n        // console.log('4 possibili punti di intersezione (LTBR):', L, T, B, R);\r\n        /* this.owner.mark(this.owner.toHtmlCoord(T), true, 'blue');\r\n    this.owner.mark(this.owner.toHtmlCoord(B), false, 'violet');\r\n    this.owner.mark(this.owner.toHtmlCoord(L), false, 'red');\r\n    this.owner.mark(this.owner.toHtmlCoord(R), false, 'orange');*/\r\n        console.log(\"intersect pt1:\", {T, B, L, R});\r\n        if ( (B.x >= pt.x && B.x <= prevPt.x) || (B.x >= prevPt.x && B.x <= pt.x) ) { } else { B = null; }\r\n        if ( (T.x >= pt.x && T.x <= prevPt.x) || (T.x >= prevPt.x && T.x <= pt.x) ) { } else { T = null; }\r\n        if ( (L.y >= pt.y && L.y <= prevPt.y) || (L.y >= prevPt.y && L.y <= pt.y) ) { } else { L = null; }\r\n        if ( (R.y >= pt.y && R.y <= prevPt.y) || (R.y >= prevPt.y && R.y <= pt.y) ) { } else { R = null; }\r\n        console.log(\"intersect pt2:\", {T, B, L, R});\r\n        function closestmix(pt: GraphPoint, closest: GraphPoint, segStart: GraphPoint, segEnd: GraphPoint, mode: \"TB\" | \"LR\"): void {\r\n            // changes pt\r\n            pt.x = closest.x; pt.y = closest.y; return;\r\n            let main: \"x\" | \"y\", sub: \"x\" | \"y\";\r\n            if (mode === \"TB\") { main = \"y\"; sub = \"x\"; } else { main = \"x\"; sub = \"y\"; }\r\n            pt[main] = closest[main];\r\n            // if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\r\n            // pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\r\n            if (closest[sub] <= segEnd[sub] && closest[sub] >= segStart[sub]) pt[sub] = closest[sub];\r\n            else if (Math.abs(closest[sub]-segEnd[sub]) < Math.abs(closest[sub]-segStart[sub])) pt[sub] = segEnd[sub];\r\n            else pt[sub] = segStart[sub];\r\n        }\r\n        function closestmix2(pt: GraphPoint, closest: GraphPoint, segStart: GraphPoint, segEnd: GraphPoint, mode: \"TB\" | \"LR\"): void {\r\n            // changes closest\r\n            let main: \"x\" | \"y\", sub: \"x\" | \"y\";\r\n            if (mode === \"TB\") { main = \"y\"; sub = \"x\"; } else { main = \"x\"; sub = \"y\"; }\r\n            // closest[main] = pt[main];\r\n            // if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\r\n            // pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\r\n            if (closest[sub] <= segEnd[sub] && closest[sub] >= segStart[sub]) {/*no-op*/}\r\n            else if (Math.abs(closest[sub]-segEnd[sub]) < Math.abs(closest[sub]-segStart[sub])) closest[sub] = segEnd[sub];\r\n            else closest[sub] = segStart[sub];\r\n        }\r\n        console.log(\"intersect pt2.5:\");\r\n        try{\r\n            if(T) closestmix2(pt, T, vertexGSize.tl(), vertexGSize.tr(), \"TB\");\r\n            if(B) closestmix2(pt, B, vertexGSize.bl(), vertexGSize.br(), \"TB\");\r\n            if(R) closestmix2(pt, R, vertexGSize.tr(), vertexGSize.br(), \"LR\");\r\n            if(L) closestmix2(pt, L, vertexGSize.tl(), vertexGSize.bl(), \"LR\");\r\n        } catch(e){ console.error(\"intersect error\",e)}\r\n        // console.log('superstiti step1: (LTBR):', L, T, B, R);\r\n        console.log(\"intersect pt2.9:\");\r\n        const vicinanzaT = !T ? Number.POSITIVE_INFINITY : ((T.x - pt.x) * (T.x - pt.x)) + ((T.y - pt.y) * (T.y - pt.y));\r\n        const vicinanzaB = !B ? Number.POSITIVE_INFINITY : ((B.x - pt.x) * (B.x - pt.x)) + ((B.y - pt.y) * (B.y - pt.y));\r\n        const vicinanzaL = !L ? Number.POSITIVE_INFINITY : ((L.x - pt.x) * (L.x - pt.x)) + ((L.y - pt.y) * (L.y - pt.y));\r\n        const vicinanzaR = !R ? Number.POSITIVE_INFINITY : ((R.x - pt.x) * (R.x - pt.x)) + ((R.y - pt.y) * (R.y - pt.y));\r\n        const closest = Math.min(vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR);\r\n        console.log(\"intersect pt3:\", {vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR, closest});\r\n\r\n        // console.log( 'closest:', closest);\r\n        // succede quando pt e prevPt sono entrambi all'interno del rettangolo del vertice.\r\n        // L'edge non è visibile e il valore ritornato è irrilevante.\r\n\r\n        if (closest === Number.POSITIVE_INFINITY) {\r\n            /* top center */\r\n            pt = vertexGSize.tl();\r\n            pt.x += vertexGSize.w / 2; } else\r\n        if (closest === Number.POSITIVE_INFINITY) {\r\n            /* bottom center */\r\n            pt = vertexGSize.br();\r\n            pt.x -= vertexGSize.w / 2; } else\r\n        if (closest === vicinanzaT && T) {\r\n            closestmix(pt, T as any, vertexGSize.tl(), vertexGSize.tr(), \"TB\");\r\n            /*pt.y = T.y;\r\n            // if T.x is inside the top segment, take T.x, otherwise closest between size.tl.x and size.tr.x\r\n            if ((T.x <= tr.x && T.x >= tl.x)) pt.x = T.x;\r\n            else if (Math.abs(T.x-tr.x) < Math.abs(T.x-tl.x)) pt.x = tr.x;\r\n            else pt.x = tl.x;*/\r\n        }\r\n        if (closest === vicinanzaB) { closestmix(pt, B as any, vertexGSize.bl(), vertexGSize.br(), \"TB\"); } else\r\n        if (closest === vicinanzaR) { closestmix(pt, R as any, vertexGSize.tr(), vertexGSize.br(), \"LR\"); } else\r\n        if (closest === vicinanzaL) { closestmix(pt, L as any, vertexGSize.tl(), vertexGSize.bl(), \"LR\"); }\r\n\r\n        if (!gridAlign) { return pt; }\r\n        if (!pt) return null;\r\n        if (gridAlign.x && (pt === T || pt === B || isNaN(closest))) {\r\n            const floorX: number = Math.floor(pt.x / gridAlign.x) * gridAlign.x;\r\n            const ceilX: number = Math.ceil(pt.x / gridAlign.x) * gridAlign.x;\r\n            let closestX;\r\n            let farthestX;\r\n            if (Math.abs(floorX - pt.x) < Math.abs(ceilX - pt.x)) {\r\n                closestX = floorX; farthestX = ceilX;\r\n            } else { closestX = ceilX; farthestX = floorX; }\r\n\r\n            // todo: possibile causa del bug che non allinea punti fake a punti reali. nel calcolo realPT questo non viene fatto.\r\n            // if closest grid intersection is inside the vertex.\r\n            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) { pt.x = closestX; } else\r\n                // if 2° closer grid intersection is inside the vertex.\r\n            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) { pt.x = farthestX;\r\n                // if no intersection are inside the vertex (ignore grid)\r\n            } else { /* do nothing */ }\r\n        } else if (gridAlign.y && (pt === L || pt === R)) {\r\n            const floorY: number = Math.floor(pt.y / gridAlign.y) * gridAlign.y;\r\n            const ceilY: number = Math.ceil(pt.y / gridAlign.y) * gridAlign.y;\r\n            let closestY;\r\n            let farthestY;\r\n            if (Math.abs(floorY - pt.y) < Math.abs(ceilY - pt.y)) {\r\n                closestY = floorY; farthestY = ceilY;\r\n            } else { closestY = ceilY; farthestY = floorY; }\r\n\r\n            // if closest grid intersection is inside the vertex.\r\n            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) { pt.y = closestY; } else\r\n                // if 2° closer grid intersection is inside the vertex.\r\n            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) { pt.y = farthestY;\r\n                // if no intersection are inside the vertex (ignore grid)\r\n            } else { /* do nothing */ }\r\n        }\r\n        return pt; }\r\n\r\n\r\n    protected new(...args: any): this { return new GraphSize(...args) as this; }\r\n    protected makePoint(x: number, y: number): GraphPoint { return new GraphPoint(x, y) as GraphPoint; }\r\n\r\n    closestPoint(pt: GraphPoint): GraphPoint { return Geom.closestPoint(this, pt); }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, ISize);\r\nRuntimeAccessibleClass.set_extend(ISize, Size);\r\nRuntimeAccessibleClass.set_extend(ISize, GraphSize);\r\n@RuntimeAccessible\r\nexport class Geom extends RuntimeAccessibleClass {\r\n\r\n    static isPositiveZero(m: number): boolean {\r\n        if (!!Object.is) { return Object.is(m, +0); }\r\n        return (1 / m === Number.POSITIVE_INFINITY); }\r\n\r\n    static isNegativeZero(m: number): boolean {\r\n        if (!!Object.is) { return Object.is(m, -0); }\r\n        return (1 / m === Number.NEGATIVE_INFINITY); }\r\n\r\n    static TanToRadian(n: number): number { return Geom.DegreeToRad(Geom.TanToDegree(n)); }\r\n    static TanToDegree(n: number): number {\r\n        if (Geom.isPositiveZero(n)) { return 0; }\r\n        if (n === Number.POSITIVE_INFINITY) { return 90; }\r\n        if (Geom.isNegativeZero(n)) { return 180; }\r\n        if (n === Number.POSITIVE_INFINITY) { return 270; }\r\n        return Geom.RadToDegree((window as any).Math.atan(n)); }\r\n\r\n    static RadToDegree(radians: number): number { return radians * (180 / Math.PI); }\r\n    static DegreeToRad(degree: number): number { return degree * (Math.PI / 180); }\r\n\r\n\r\n\r\n    private static GeomTolerance = 0; // 0.001;\r\n    static isOnEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnHorizontalEdges(pt, shape, tolerance) || Geom.isOnVerticalEdges(pt, shape, tolerance); }\r\n\r\n    static isOnVerticalEdges(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnLeftEdge(pt, shape, tolerance) || Geom.isOnRightEdge(pt, shape, tolerance); }\r\n\r\n    static isOnHorizontalEdges(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnTopEdge(pt, shape, tolerance) || Geom.isOnBottomEdge(pt, shape, tolerance); }\r\n\r\n    static isOnRightEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.x - (shape.x + shape.w)) < tolerance\r\n            && ( pt.y - shape.y > tolerance && pt.y - (shape.y + shape.h) < tolerance);\r\n        return (pt.x === shape.x + shape.w) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);\r\n    }\r\n\r\n    static isOnLeftEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.x - shape.x) < tolerance\r\n            && (pt.y - shape.y > tolerance && pt.y - (shape.y + shape.h) < tolerance);\r\n        return (pt.x === shape.x) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);\r\n    }\r\n\r\n    static isOnTopEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.y - shape.y) < tolerance\r\n            && (pt.x - shape.x > tolerance && pt.x - (shape.x + shape.w) < tolerance);\r\n        return (pt.y === shape.y) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);\r\n    }\r\n\r\n    static isOnBottomEdge(pt: GraphPoint, shape: GraphSize, tolerance?: number): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.y - shape.y + shape.h) < tolerance\r\n            && (pt.x - shape.x > tolerance && pt.x - (shape.x + shape.w) < tolerance);\r\n        return (pt.y === shape.y + shape.h) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);\r\n    }\r\n\r\n    static closestPoint(size: GraphSize, pt: GraphPoint): GraphPoint {\r\n        let top_closest = Geom.closestPointToSegment(size.tl(), size.tr(), pt);\r\n        let bot_closest = Geom.closestPointToSegment(size.bl(), size.br(), pt);\r\n        let left_closest = Geom.closestPointToSegment(size.tl(), size.bl(), pt);\r\n        let right_closest = Geom.closestPointToSegment(size.tr(), size.br(), pt);\r\n\r\n        let top_distance = top_closest.distanceFromPoint(pt, false);\r\n        let bot_distance = bot_closest.distanceFromPoint(pt, false);\r\n        let left_distance = left_closest.distanceFromPoint(pt, false);\r\n        let right_distance = right_closest.distanceFromPoint(pt, false);\r\n\r\n        let min_distance = Math.min(top_distance, bot_distance, left_distance, right_distance);\r\n        if (min_distance === top_distance) return top_closest;\r\n        if (min_distance === bot_distance) return bot_closest;\r\n        if (min_distance === left_distance) return left_closest;\r\n        return right_closest;\r\n    }\r\n    static isMinusZero(number: number) {return 1/number == -Infinity;}\r\n    static closestPointToSegment(segStart: GraphPoint, segEnd:GraphPoint, pt: GraphPoint): GraphPoint{\r\n        // 1) find equation of line passing for start, end.\r\n        // 2) then find all perpendicular lines, then the perpendicular line that pass through pt\r\n        // 3) find intersection between Line(s,e) and line of point 2.\r\n        // 4A) IF intersection is part of segment(s,e) that is closest.\r\n        // 4B) ELSE, one of the 2 extremes of the segment is closest.\r\n\r\n        let x_intersect: number, y_intersect: number;\r\n        let s = segStart;\r\n        let e = segEnd;\r\n        let mse = (e.y - s.y) / (e.x - s.x);\r\n        if (mse === Number.POSITIVE_INFINITY || mse === Number.NEGATIVE_INFINITY) {\r\n            // s and e are both on the same y vertical line (same x)      // new GraphPoint(segStart.x, pt.y);\r\n            x_intersect = segStart.x;\r\n            y_intersect = pt.y;\r\n            // 1), 2), 3) all done shortcut\r\n        } else if (mse === 0 || Geom.isNegativeZero(mse)) {\r\n            // s and e are both on the same x horizontal line (same y)    // new GraphPoint(pt.x, segStart.y);\r\n            x_intersect = pt.x;\r\n            y_intersect = segStart.y\r\n            // 1), 2), 3) all done shortcut\r\n        }\r\n        else {\r\n            let q = s.y - mse*s.x; // y = mx + q           q = y-mx\r\n            // 1) done\r\n            let pmse = -1/mse; // perpendicular to mse\r\n            let pq = pt.y - pmse*pt.x;\r\n            // 2) done\r\n            //  m1 * x + q1 = y    -->   m1 * x + q1 = m2 * x + q2    -->    (m1-m2)x = q2-q1      -->     x=(q2-q1)/(m1-m2)\r\n            x_intersect = (pq-q)/(mse-pmse);\r\n            y_intersect = mse*(x_intersect) + q; //  y = mx +q\r\n            // 3) done\r\n        }\r\n\r\n        let maxX: number, minX: number;\r\n        let maxY: number, minY: number;\r\n        if (s.x > e.x) { maxX = s.x; minX = e.x; } else {  maxX = e.x; minX = s.x; }\r\n        if (s.y > e.y) { maxY = s.y; minY = e.y; } else {  maxY = e.y; minY = s.y; }\r\n        if (x_intersect >= minX && x_intersect <= maxX && y_intersect >= minY && y_intersect <= maxY) return new GraphPoint(x_intersect, y_intersect);\r\n        // 4A) IF done\r\n\r\n        let sdist = (s.x - x_intersect)**2 + (s.y - y_intersect)**2;  // actual distance is sqrt() of this, but i just need to find closest, not correct distance.\r\n        let edist = (e.x - x_intersect)**2 + (e.y - y_intersect)**2;\r\n        return (sdist < edist) ? new GraphPoint(s.x, s.y) : new GraphPoint(e.x, e.y);\r\n        // 4B) ELSE done\r\n    }\r\n\r\n    static lineToSegmentIntersection(segStart: GraphPoint, segEnd: GraphPoint, q: number, m: number): GraphPoint | undefined {\r\n        if (segStart.x === segEnd.x){\r\n            let y = m*segStart.x + q;\r\n            if (Geom.isNumberBetween(y, segStart.y, segEnd.y)) return new GraphPoint(segStart.x, y);\r\n            else return undefined;\r\n        }\r\n        else if (segStart.y === segEnd.y) {\r\n            let x = (segStart.y-q)/m;\r\n            if (Geom.isNumberBetween(x, segStart.x, segEnd.x)) return new GraphPoint(x, segStart.y);\r\n            else return undefined;\r\n            //\r\n        }\r\n\r\n        let m2 = segStart.getM(segEnd);\r\n        let q2 = IPoint.getQ(segStart, segEnd);\r\n        if (m === m2) {\r\n            if (q2 === q) return segStart; // line and segment coincident\r\n            return undefined; // parallel\r\n        }\r\n        let intersect = Geom.lineToLineIntersection(m, q, m2, q2);\r\n        if (intersect && Geom.isNumberBetween(intersect.x, segStart.x, segEnd.x) && Geom.isNumberBetween(intersect.y, segStart.y, segEnd.y)) return intersect;\r\n        else return undefined;\r\n    }\r\n\r\n    static isNumberBetween(target: number, s: number, e: number): boolean {\r\n        let max = Math.max(s, e);\r\n        let min = Math.min(s, e);\r\n        return target >= min && target <= max; }\r\n\r\n    private static lineToLineIntersection(m: number, q: number, m2: number, q2: number, retIfParallel: any = undefined, retIfCoincident: any = undefined): undefined | GraphPoint {\r\n        if (m === m2) {\r\n            if (q === q2) return retIfCoincident;\r\n            return retIfParallel;\r\n        }\r\n        if (m === Number.POSITIVE_INFINITY || m === Number.NEGATIVE_INFINITY || m2 === Number.POSITIVE_INFINITY || m2 === Number.NEGATIVE_INFINITY) {\r\n            // m or m2 are a vertical line, Q must be invalid too and i don't have a single point of the line.\r\n            // it's actually infinite possible vertical parallel lines.\r\n            return undefined;\r\n        }\r\n        /*\r\n            y = mx + q\r\n            y = nx + w\r\n            -->\r\n            mx + q = nx + w\r\n            -->\r\n            mx - nx = w - q\r\n            -->\r\n            x (m - n) = w - q\r\n            -->\r\n            x = (w - q)/(m - n)\r\n        */\r\n        let x = (q2-q)/(m-m2);\r\n        return new GraphPoint(x, m*x+q); }\r\n    // @param start, end: are for determining direction. every m is a line that can be seen in 2 direction\r\n    static mToRad(m: number, start: GraphPoint, end: GraphPoint): number {\r\n        let rad: number;\r\n        if (start.x === end.x) {\r\n            rad = (start.y < end.y) ? Math.PI * 3/2 :  Math.PI / 2;\r\n        } else {\r\n            // console.log(\"rad diagonal\", {base:  Math.atan(m), add: start.x > end.x, sx: start.x, ex: end.x});\r\n            rad = Math.atan(m) + (start.x > end.x ? 0 : Math.PI);\r\n        }\r\n        return rad; }\r\n\r\n    // intersect a rectangle with a line or segment (if end parameter is specified)\r\n    // @return: [0, 2] intersections\r\n    static lineToSizeIntersection_TODO(size: GraphSize, m: number, startLine: GraphPoint, endIfSegment?: GraphPoint): [] | [GraphPoint] | [GraphPoint, GraphPoint] {\r\n         // todo: use GraphSize.closestIntersection which is close. it is size-segment returning only the closest intersection\r\n        return [];\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, Geom);\r\n","export class TagNames{\r\n    static FOREIGNOBJECT: \"FOREIGNOBJECT\" = \"FOREIGNOBJECT\";\r\n}\r\nexport class CSSRuleSorted{\r\n    public all: CSSStyleRule[];\r\n\r\n    constructor(styleNode: HTMLStyleElement) {\r\n        const oldParent = styleNode.parentElement;\r\n        if (!oldParent) document.body.append(styleNode);\r\n        const cssRuleList: CSSRuleList = styleNode.sheet!.cssRules || styleNode.sheet!.rules;\r\n        this.all = [...cssRuleList as any];\r\n        if (!oldParent) document.body.removeChild(styleNode);\r\n        // if (se aveva parent rimane attaccato lì e non serve fare questo) oldParent.append(styleNode);\r\n    }\r\n\r\n    public getCSSMediaRule(): CSSMediaRule[]{\r\n        return this.all.filter( (e, i): boolean => { return e instanceof CSSMediaRule; }) as any[];\r\n    }\r\n    public getCSSStyleRule(): CSSStyleRule[]{\r\n        return this.all.filter( (e, i): boolean  => { return e instanceof CSSStyleRule; }) as any[];\r\n    }\r\n    public notIn(list:CSSStyleRule[]): CSSStyleRule[] {\r\n        return this.all.filter( (e, i): boolean  => { return list.indexOf(e) !== -1; });\r\n    }\r\n}\r\n\r\n\r\nexport class CSSParser {\r\n    static parse(styleNode: HTMLStyleElement): CSSRuleSorted { return new CSSRuleSorted(styleNode); }\r\n}\r\n","import ReactJson from 'react-json-view' // npm i react-json-view\r\nimport React, {ReactElement, ReactNode} from \"react\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport type { GraphElementOwnProps, GObject, Dictionary, DocString, Pointer } from \"../joiner\";\r\nimport type { InputOwnProps } from '../components/forEndUser/Input';\r\nimport type { SelectOwnProps } from '../components/forEndUser/Select';\r\nimport type { TextAreaOwnProps } from '../components/forEndUser/TextArea';\r\nimport {\r\n    LPointerTargetable, U, Log, GraphElementComponent,\r\n    windoww, RuntimeAccessible, EdgeComponent, RuntimeAccessibleClass, EdgeOwnProps, DGraphElement, DModelElement\r\n} from \"../joiner\";\r\n\r\n// U-functions that require jsx\r\n@RuntimeAccessible\r\nexport class UX{\r\n\r\n    static recursiveMap<T extends ReactNode | ReactNode[] | null | undefined>(children: T, fn: (rn: T, i: number, depthIndices: number[])=>T, depthIndices: number[] = []): T {\r\n        // NB: depthIndices is correct but if there is an expression children evaluated to false like {false && <jsx>},\r\n        // it counts as children iterated regardless. so html indices might be apparently off, but like this is even safer as indices won't change when conditions are changed.\r\n        const innermap = (child: ReactNode, i1: number, depthIndices: number[]): T => {\r\n            if (!React.isValidElement(child)) { return child as T; }\r\n            if (child.props.children) {\r\n                // let deeperDepthIndices = [...depthIndices, i1];  // depthIndices; //\r\n                // should probably change deeperDepthIndices in [...deeperDepthIndices, i] in next uncommented line.\r\n                // Giordano: add ignore for webpack\r\n                //@ts-ignore\r\n                child = React.cloneElement(child, { children: UX.recursiveMap(child.props.children,\r\n                        (e: T, i2: number, ii) => fn(e, i2, ii), depthIndices) });\r\n            }\r\n            return fn(child as T, i1, depthIndices);\r\n        };\r\n        if (!Array.isArray(children)) return innermap(children as ReactNode, 0, [...depthIndices, 0]) as T;\r\n        return React.Children.map(children, (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as T;\r\n    }\r\n    static injectProp(parentComponent: GraphElementComponent, e: ReactNode, gvidmap_useless: Dictionary<DocString<'VertexID'>, boolean>, parentnodeid: string, index: number, indices: number[]): ReactNode {\r\n        const re: ReactElement | null = UX.ReactNodeAsElement(e);\r\n        if (!re) return e;\r\n        // @ts-ignore this\r\n        // const parentComponent = this;\r\n        let type = (re.type as any).WrappedComponent?.name || re.type;\r\n        // const windoww = window as any;\r\n        // console.log('ux.injectingProp pre ', {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n        // add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\r\n        switch (type) {\r\n            default:\r\n                // console.count('ux.injectingProp case default: ' + type);\r\n                return re;\r\n            /*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: re.props.key || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/\r\n            // case windoww.Components.GraphElement.name:\r\n            case windoww.Components.Input.name+\"Component\":\r\n            case windoww.Components.Select.name+\"Component\":\r\n            case windoww.Components.TextArea.name+\"Component\":\r\n                // todo: can i do a injector that if the user provides a ModelElement list raw <div>{this.children}</div> it wraps them in DefaultNode?\r\n                const injectProps2: InputOwnProps | SelectOwnProps | TextAreaOwnProps = {} as any;\r\n                const parentnodeid = parentComponent.props.node?.id;\r\n                injectProps2.data = re.props.data || (typeof parentComponent.props.data === \"string\" ? parentComponent.props.data : parentComponent.props.data?.id);\r\n                // !IMPORTANT! this key does not remove the responsability of adding keys to <GraphElement>s. this is assigning the key to the first returned element by component A,\r\n                // but react needs to distinguish component A from other components, and he still doesn't have a key. in fact this is useless as this component can only have 1 child\r\n                injectProps2.key = re.props.key || (parentnodeid + \"^input_\"+index);\r\n                return React.cloneElement(re, injectProps2);\r\n            case windoww.Components.GraphElementComponent.name:\r\n            // case windoww.Components.DefaultNode.name:\r\n            case windoww.Components.DefaultNodeComponent.name:\r\n            // case windoww.Components.Graph.name:\r\n            // case windoww.Components.GraphComponent.name:\r\n            case \"Graph\": case \"GraphComponent\":\r\n            // case windoww.Components.Field.name:\r\n            // case windoww.Components.FieldComponent.name:\r\n            // case windoww.Components.Vertex.name:\r\n            case EdgeComponent.name:\r\n            case windoww.Components.VertexComponent.name:\r\n                const injectProps: GraphElementOwnProps = {} as any;\r\n                injectProps.parentViewId = parentComponent.props.view.id || (parentComponent.props.view as any); // re.props.view ||  thiss.props.view\r\n                injectProps.parentnodeid = parentComponent.props.node?.id;\r\n                injectProps.graphid = parentComponent.props.graphid;\r\n                // const vidmap = GraphElementRaw.graphVertexID_counter;\r\n                // if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\r\n                // const gvidmap = vidmap[injectProps.graphid];\r\n                // const validVertexIdCondition = (id: string): boolean => gvidmap_useless[id];\r\n                // todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando? React-portals?\r\n                const dataid = (typeof re.props.data === \"string\" ? re.props.data : re.props.data?.id) || \"shapeless\";\r\n                let idbasename: string;\r\n                if (re.props.initialSize?.id) { idbasename = re.props.initialSize?.id; } else\r\n                if (re.props.nodeid) { idbasename = (injectProps.parentnodeid) + \"^\" + re.props.nodeid; } else\r\n                switch (type) {\r\n                    default:\r\n                        idbasename = injectProps.parentnodeid + \"^\" + dataid + \"N\";\r\n                        break;\r\n                    case windoww.Components.EdgePoint.name:\r\n                        idbasename = injectProps.parentnodeid + \"^\" + (dataid || re.props.startingSize?.id || indices.join(\",\")) + \"EP\";\r\n                        break;\r\n                    case EdgeComponent.name: case \"DamEdge\":\r\n                        let edgeProps:EdgeOwnProps = re.props;\r\n                        let edgestart_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.start as any).id || edgeProps.start;\r\n                        let edgeend_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.end as any).id || edgeProps.end;\r\n                        idbasename = injectProps.parentnodeid + \"^\" + edgestart_id + \"~\" + edgeend_id;\r\n                }\r\n                // (injectProps.parentnodeid)+\"^\"+(dataid)+indices.join(\",\");//injectProps.graphid + '^' + dataid;\r\n                // console.log(\"setting nodeid\", {injectProps, props:re.props, re});\r\n                // Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                Log.exDev(!injectProps.graphid, 'vertex is missing mandatory props (graphid).', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                injectProps.nodeid = idbasename; // U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\r\n                injectProps.htmlindex = indices[indices.length - 1]; // re.props.node ? re.props.node.htmlindex : indices[indices.length - 1];\r\n                injectProps.key = re.props.key || injectProps.nodeid;\r\n                // console.log(\"cloning jsx:\", re, injectProps);\r\n                Log.ex((injectProps.nodeid === injectProps.graphid||injectProps.nodeid === injectProps.parentnodeid) && type != \"GraphComponent\", \"User manually assigned a invalid node id. please remove or change prop \\\"nodeid\\\"\", {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n                return React.cloneElement(re, injectProps);\r\n        }}\r\n\r\n    static ReactNodeAsElement(e: React.ReactNode): React.ReactElement | null { return e && (e as ReactElement).type ? e as ReactElement : null; }\r\n\r\n    public static async deleteWithAlarm(lItem: LPointerTargetable) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: \"Delete \" + lItem.toString() + \"?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            cancelButtonText: \"No\",\r\n            showLoaderOnConfirm: true\r\n        });\r\n        if (confirm.value === true) {\r\n            lItem.delete();\r\n        }\r\n    }\r\n    public static async info(text: string) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: text,\r\n            showCancelButton: false,\r\n            confirmButtonText: \"Got It\"\r\n        });\r\n    }\r\n}\r\n","import {DPointerTargetable, LPointerTargetable, RuntimeAccessible} from \"../../joiner\";\r\n\r\n@RuntimeAccessible\r\nexport class DLog extends DPointerTargetable {\r\n    static logic: typeof LPointerTargetable;\r\n    value: string;\r\n    constructor(value: string) {\r\n        super('todo' as any);\r\n        this.value = value;\r\n        this.className = this.constructor.name;\r\n    }\r\n}\r\n","import {LPointerTargetable, RuntimeAccessible} from \"../../joiner\";\r\n\r\n@RuntimeAccessible\r\nexport class LLog extends LPointerTargetable {\r\n    // static structure: typeof DLog;\r\n    // static singleton: LLog;\r\n    value!: string;\r\n//    protected constructor(value: string) {super(); }\r\n}\r\n","// import {Mixin} from \"ts-mixer\";\r\nimport {isDeepStrictEqual} from \"util\";\r\nimport {\r\n    BEGIN,\r\n    Constructors,\r\n    CoordinateMode,\r\n    Dictionary,\r\n    DMap,\r\n    DModelElement,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DState,\r\n    DUser,\r\n    DViewElement,\r\n    EdgeBendingMode,\r\n    END,\r\n    getWParams,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphPoint,\r\n    GraphSize,\r\n    Info, IPoint,\r\n    Leaf,\r\n    LMap,\r\n    LModelElement,\r\n    Log,\r\n    LogicContext,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    MixOnlyFuncs,\r\n    Node,\r\n    Pack1,\r\n    PackArr,\r\n    Point,\r\n    Pointer,\r\n    Pointers,\r\n    PrimitiveType,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    ShortAttribETypes,\r\n    Size,\r\n    store,\r\n    TargetableProxyHandler,\r\n    U, Uarr,\r\n    windoww\r\n} from \"../../joiner\";\r\nimport type {RefObject} from \"react\";\r\nimport {EdgeGapMode, InitialVertexSize, InitialVertexSizeObj} from \"../../joiner/types\";\r\nimport {labelfunc} from \"../../joiner/classes\";\r\nimport {Geom} from \"../../common/Geom\";\r\n\r\n\r\nconsole.warn('ts loading graphDataElement');\r\n\r\nlet lgraph: LGraphElement = null /* this.node */ as any;\r\n\r\n\r\n@Node\r\n@RuntimeAccessible\r\nexport class DGraphElement extends DPointerTargetable {\r\n    // static _super = DPointerTargetable;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    id!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>; // todo: cerca graphID e rimpiazza / adatta\r\n    model?: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    state: DMap = {} as any;\r\n    father!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    zIndex:number = 100;\r\n    w: number=300;\r\n    h: number=500;\r\n    // width: number = 300;\r\n    // height: number = 400;\r\n    view!: Pointer<DViewElement, 1, 1, LViewElement>;\r\n    favoriteNode!: boolean;\r\n\r\n\r\n    public static new(htmlindex: number, model: DGraphElement[\"model\"]|null|undefined, parentNodeID: DGraphElement[\"father\"],\r\n                      graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"]|undefined, a?: any, b?:any, ...c:any): DGraphElement {\r\n        return new Constructors(new DGraphElement('dwc')).DPointerTargetable(false, nodeID).DGraphElement(model, parentNodeID, graphID, htmlindex).end();\r\n    }\r\n\r\n}\r\n@RuntimeAccessible\r\nexport class LGraphElement<Context extends LogicContext<DGraphElement> = any, C extends Context = Context> extends LPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static getNodeId<L extends LGraphElement, D extends DGraphElement>(o:L | D | Pointer<D> | LModelElement | DModelElement | Pointer<DModelElement>): Pointer<D> {\r\n        // Log.ex(!o, \"cannot get node from undefined\", {o});\r\n        let node: any = o;\r\n        // from L to D\r\n        // let cname = (node.__raw || node).className;\r\n        // from DModelE to LGraphE\r\n        if (RuntimeAccessibleClass.extends((o as any).className, \"DModelElement\")) node = LPointerTargetable.from(o as DModelElement).node as LGraphElement;\r\n        return (typeof node === \"string\") ? node : node?.id;\r\n    }\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    __raw!: DGraphElement;\r\n    id!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    father!: LGraphElement;\r\n    graph!: LGraph; // todo: can be removed and accessed by navigating .father\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[]; // shallow, direct subelements\r\n    state!: LMap;\r\n    allSubNodes!: LGraphElement[]; // deep, nested subelements\r\n    x!: number;\r\n    y!: number;\r\n    width!: number;\r\n    height!: number\r\n\r\n    z!:number;\r\n    zIndex!: number;\r\n    __info_of_z__: Info = {type:ShortAttribETypes.EInt, txt: \"alias for zIndex\"};\r\n    __info_of_zIndex__: Info = {type:ShortAttribETypes.EInt,\r\n        txt: \"Determine the z-axis priority of the element.<br/>Higher value tende to overlap other elements.<br/>Lower value tends to be on background.\"};\r\n    zoom!: GraphPoint;\r\n    html?: Element;\r\n\r\n    // fittizi\r\n    w!:number;\r\n    h!:number;\r\n    size!: GraphSize;\r\n    position!: GraphPoint;\r\n    htmlSize!: Size; // size and position in global document coordinates.\r\n    htmlPosition!: Point;\r\n    view!: LViewElement;\r\n    component!: GraphElementComponent;\r\n    favoriteNode!: boolean;\r\n    vertex?: LVoidVertex;\r\n    __info__of__vertex: Info = {type: \"LVoidVertex\", txt: \"the foremost vertex containing this graphElement, or undefiened.\"}\r\n    __info__of__favoriteNode: Info = {type: ShortAttribETypes.EBoolean,\r\n        txt: \"<span>Indicates this is the primarly used (by default) node to refer to a modelling element that might have multiple representations.\" +\r\n            \"<br> Can be used as favorite target for edges or other.\"}\r\n\r\n    startPoint!: GraphPoint;\r\n    endPoint!: GraphPoint;\r\n    __info_of__startPoint: Info = {type: \"GraphPoint\", txt:<span>Where the outgoing edges should start their paths.\r\n            <br/>Obtained by combining anchoring point offset specified in view, before snapping to a Vertex border.\r\n            <br/>Defaults in outer coordinates.</span>};\r\n    __info_of__endPoint: Info = {type: \"GraphPoint\", txt:<span>Where the incoming edges should end their paths.\r\n            <br/>Obtained by combining anchoring point offset specified in view, before snapping to a Vertex border.\r\n            <br/>Defaults in outer coordinates.</span>};\r\n\r\n    __info_of__graph: Info = {type:\"\", txt:\"\"};\r\n    innerGraph!: LGraph;\r\n    __info_of__innnerGraph: Info = {type:\"\", txt:\"\"};\r\n    outerGraph!: LGraph;\r\n    __info_of__outerGraphGraph: Info = {type:\"\", txt:\"\"};\r\n    get_graph(context: Context): LGraph { return this.get_innerGraph(context); }\r\n\r\n    __info_of__graphAncestors: Info = {type:\"LGraph[]\",\r\n        txt:\"<span>collection of the stack of Graphs containing the current element where [0] is the most nested graph, and last is root graph.</span>\"};\r\n    graphAncestors!: LGraph[];\r\n\r\n    protected _defaultCollectionGetter(c: Context, k: keyof Context[\"data\"]): LPointerTargetable[] { return LPointerTargetable.fromPointer((c.data as any)[k]); }\r\n    protected _defaultGetter(c: Context, k: keyof Context[\"data\"]): any {\r\n        //console.log(\"default Getter\");\r\n        if (k in c.data) {\r\n            let v = (c.data as any)[k];\r\n            if (Array.isArray(v)) {\r\n                if (v.length === 0) return [];\r\n                else if (Pointers.isPointer(v[0] as any)) return this._defaultCollectionGetter(c, k);\r\n                return v;\r\n            } else return v;\r\n        }\r\n        let ret: any;\r\n        let view = this.get_view(c);\r\n        try { ret = (view as any)[k] } catch (e) { Log.ee(\"Could not find get_ property \\\"\" + k + \"\\\" in node or view.\", {c, view, k}); return undefined; }\r\n        return ret;\r\n    }\r\n\r\n    protected _defaultSetter(v: any, c: Context, k: keyof Context[\"data\"]): any {\r\n        console.log(\"default Setter\");\r\n        if (k in c.data) {\r\n            let isPointer: boolean;\r\n            if (Array.isArray(v)) {\r\n                if (v.length === 0) isPointer = true; // assumed, should not cause harm if it is not.\r\n                // it will delete remove an entry in pointedBy from all oldValue entries in the array that should not be present anyway.\r\n                // like oldVal.map( id => U.arrayRemove(LData.wrap(id).pointedBy, c.data.this_id)\r\n                else isPointer = Pointers.isPointer(v[0] as any);\r\n            } else isPointer = false;\r\n            return SetFieldAction.new(c.data.id, k as any, v, '', isPointer);\r\n        }\r\n        let view = this.get_view(c);\r\n        try { (view as any)[k] = v; } catch (e) { Log.ee(\"Could not find set_ property \\\"\" + k + \"\\\" in node or view.\", {c, v, k, view}); return false; }\r\n        return true;\r\n    }\r\n\r\n    get_graphAncestors(c: Context): LGraph[] {\r\n        let current = c.proxyObject;\r\n        let next = current.father;\r\n        let ret: LGraph[] = [];\r\n        while(next) {\r\n            if (RuntimeAccessibleClass.extends(next.className, DGraph.name)) ret.push(next as LGraph);\r\n            if (current.id === next.id) break;\r\n            current = next;\r\n            next = next.father;\r\n        }\r\n        return ret;\r\n    }\r\n    get_outerGraph(context: Context): LGraph {\r\n        // todo: this relies on the fact that GraphVertex are not passing their own id to their childrens, but the parent graph id\r\n        return TargetableProxyHandler.wrap(context.data.graph);\r\n    }\r\n    get_vertex(context: Context): this[\"vertex\"] {\r\n        let lcurrent: LGraphElement = LPointerTargetable.fromPointer(context.data.id);\r\n        let dcurrent = lcurrent.__raw;\r\n        // iterate parents.\r\n        while(dcurrent){\r\n            switch(dcurrent.className){\r\n                case DVertex.name:\r\n                case DVoidVertex.name:\r\n                case DGraphVertex.name: return (lcurrent || LPointerTargetable.fromD(dcurrent)) as LVoidVertex;\r\n                default:\r\n                    if (!dcurrent.father || dcurrent.id === dcurrent.father) return undefined;\r\n                    Log.exDev(!dcurrent.father || dcurrent.id === dcurrent.father, \"node failed to get containing vertex\", context.data, dcurrent, lcurrent);\r\n                    lcurrent = LPointerTargetable.fromPointer(dcurrent.father);\r\n                    dcurrent = lcurrent.__raw;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get_innerGraph(context: Context): LGraph {\r\n        let lcurrent: LGraphElement = LPointerTargetable.fromPointer(context.data.father);\r\n        let dcurrent = lcurrent.__raw;\r\n\r\n        // if no parent, but it's a graph, return itself.\r\n        if (!dcurrent) {\r\n            dcurrent = context.data;\r\n            switch(dcurrent.className){\r\n                case DGraph.name:\r\n                case DGraphVertex.name: return (lcurrent || LPointerTargetable.fromD(dcurrent)) as LGraph;\r\n                default: return Log.exDevv(\"node failed to get containing graph\", context.data, dcurrent, lcurrent);\r\n            }\r\n        }\r\n\r\n        // if it have a parent, iterate parents.\r\n        while(true){\r\n            switch(dcurrent?.className){\r\n                case DGraph.name:\r\n                case DGraphVertex.name: return (lcurrent || LPointerTargetable.fromD(dcurrent)) as LGraph;\r\n                default:\r\n                    if (!dcurrent.father || dcurrent.id === dcurrent.father) {\r\n                        /*switch(dcurrent.className){\r\n                            case DGraph.name:\r\n                            case DGraphVertex.name: return (lcurrent || LPointerTargetable.fromD(dcurrent)) as LGraph;\r\n                            default: */return Log.exDevv(\"node failed to get containing graph\", context.data, dcurrent, lcurrent);\r\n                        //}\r\n                    }\r\n                    lcurrent = LPointerTargetable.fromPointer(dcurrent.father);\r\n                    dcurrent = lcurrent.__raw;\r\n            }\r\n        }\r\n    }\r\n\r\n    // set_x(val: this[\"x\"], context: Context): boolean { SetFieldAction.new(context.data.id, \"x\", val, undefined, false); return true; }\r\n    // get_x(context: Context): this[\"x\"] { return context.data.x; }\r\n    get_x(context: Context): this[\"x\"] { return this.get_size(context).x; }\r\n    set_x(val: this[\"x\"], context: Context): boolean { return this.set_size({x:val}, context); }\r\n    get_y(context: Context): this[\"y\"] { return this.get_size(context).y; }\r\n    set_y(val: this[\"y\"], context: Context): boolean { return this.set_size({y:val}, context); }\r\n\r\n    get_w(context: Context): this[\"w\"] { return this.get_size(context).w; }\r\n    set_w(val: this[\"w\"], context: Context): boolean { return this.set_size({w:val}, context); }\r\n    get_h(context: Context): this[\"h\"] { return this.get_size(context).h; }\r\n    set_h(val: this[\"h\"], context: Context): boolean { return this.set_size({h:val}, context); }\r\n\r\n    get_width(context: Context): this[\"w\"] { return this.get_w(context); }\r\n    set_width(val: this[\"w\"], context: Context): boolean { return this.set_w(val, context); }\r\n    get_height(context: Context): this[\"h\"] { return this.get_h(context); }\r\n    set_height(val: this[\"h\"], context: Context): boolean { return this.set_h(val, context); }\r\n\r\n    get_position(context: Context): this[\"position\"] { return new GraphPoint(context.data.x, context.data.y); }\r\n    set_position(val: this[\"position\"], context: Context): boolean {\r\n        BEGIN()\r\n        SetFieldAction.new(context.data.id, \"x\", val.x, undefined, false);\r\n        SetFieldAction.new(context.data.id, \"y\", val.y, undefined, false);\r\n        END()\r\n        return true; }\r\n\r\n    get_sizeold(context: Context): this[\"size\"] { return new GraphSize(context.data.x, context.data.y, context.data.w, context.data.h); }\r\n    get_component(context: Context): this[\"component\"] {\r\n        // switch(context.data.className) { case DEdgePoint.name: return GraphElementComponent.map[context.data.father]; }\r\n        return GraphElementComponent.map[context.data.id]; }\r\n    // get_view(context: Context): this[\"view\"] { return this.get_component(context).props.view; }\r\n    get_view(context: Context): this[\"view\"] {\r\n        let c = this.get_component(context);\r\n        if (c) return c.props.view;\r\n        return LPointerTargetable.fromPointer(context.data.view); }\r\n    set_view(val: Pack1<this[\"view\"]>, context: Context){\r\n        let ptr: DGraphElement[\"view\"] = Pointers.from(val as this[\"view\"]);\r\n        return SetFieldAction.new(context.data.id, \"view\", ptr, '', true);\r\n    }\r\n\r\n    outerSize!: LGraphElement[\"size\"];\r\n    __info_of__outerSize: Info = {type:\"GraphSize\", txt:\"the size of the current element relative to the first (root) graph level.\"};\r\n    innerSize!: LGraphElement[\"size\"];\r\n    __info_of__innerSize: Info = {type:\"GraphSize\", txt:\"the size of the current element relative to the last (most nested) graph level.\"};\r\n    __info_of__size: Info = {type:\"GraphSize\", txt: \"same as innerSize.\"};\r\n\r\n    get_outerSize(context: Context, canTriggerSet: boolean = true): Readonly<GraphSize> {\r\n        return this.get_innerSize(context, canTriggerSet, true);\r\n    }\r\n    get_size(context: Context, canTriggerSet: boolean = true): Readonly<GraphSize> { return this.get_innerSize(context, canTriggerSet, false); }\r\n    get_innerSize(context: Context, canTriggerSet: boolean = true, outerSize: boolean = false): Readonly<GraphSize> {\r\n        let r = this.get_innerSize_impl(context, canTriggerSet, outerSize);\r\n        return new GraphSize(r.x, r.y, r.w, r.h);\r\n    }\r\n    protected get_innerSize_impl(context: Context, canTriggerSet: boolean = true, outerSize: boolean = false): Readonly<GraphSize> {\r\n        switch(context.data.className){\r\n            default: return Log.exDevv(\"unexpected classname in get_size switch: \" + context.data.className);\r\n            case DVoidEdge.name:\r\n            case DGraph.name: return nosize as any;\r\n            // case DField.name:\r\n            case DGraphElement.name:\r\n                let graph = outerSize ? this.get_outerGraph(context) : this.get_innerGraph(context);\r\n                return graph.coord(this.get_htmlSize(context));\r\n            case DVoidVertex.name:\r\n            case DVertex.name:\r\n            case DEdgePoint.name:\r\n            case DGraphVertex.name: break;\r\n        }\r\n        // low prio todo: memoization in proxy, as long state does not change keep a collection Dictionary[object][key] = returnval. it gets emptied when state is updated.\r\n        /*console.log(\"get_size(\"+(this.props?.data as any).name+\")\", {\r\n            view:this.props.view.getSize(this.props.dataid || this.props.nodeid as string),\r\n            node:this.props.node?.size,\r\n            default: this.props.view.defaultVSize});*/\r\n        let component = this.get_component(context);\r\n        // windoww.debugg = context;\r\n        // console.log(\"edgee getsize\", {component, view:component?.props?.view, data:{...context.data}});\r\n        let view = component?.props?.view || this.get_view(context);\r\n        // (window as any).retry = ()=>view.getSize(context.data.id);\r\n        let ret: GraphSize = view.getSize(context.data.id) as any; // (this.props.dataid || this.props.nodeid as string)\r\n        // console.log(\"getSize() from view\", {ret: ret ? {...ret} : ret});\r\n        if (!ret) {\r\n            ret = new GraphSize();\r\n            ret.x = context.data.x;\r\n            ret.y = context.data.y;\r\n            ret.w = context.data.w;\r\n            ret.h = context.data.h;\r\n            let def: GraphSize | undefined;\r\n            if (undefined===(ret.x)) { if (!def) def = view.defaultVSize; ret.x = def.x;}\r\n            if (undefined===(ret.y)) { if (!def) def = view.defaultVSize; ret.y = def.y;}\r\n            if (undefined===(ret.w)) { if (!def) def = view.defaultVSize; ret.w = def.w;}\r\n            if (undefined===(ret.h)) { if (!def) def = view.defaultVSize; ret.h = def.h;}\r\n            // console.log(\"getSize() from node merged with defaultVSize\", {ret: ret ? {...ret} : ret});\r\n        }\r\n        if (context.data.className === DEdgePoint.name) { ret = (this as any as LEdgePoint).decodePosCoords(context, ret, view); }\r\n\r\n        if ((context.data as DVoidVertex).isResized) return ret;\r\n        let html: RefObject<HTMLElement | undefined> | undefined = component?.html;\r\n        let actualSize: Partial<Size> & {w:number, h:number} = html?.current ? Size.of(html.current) : {w:0, h:0};\r\n        let updateSize: boolean = false;\r\n        if (view.adaptWidth && ret.w !== actualSize.w) {\r\n            ret.w = actualSize.w;\r\n            if (canTriggerSet) updateSize = true;\r\n            // if (canTriggerSet) this.set_size({w:actualSize.w}, context);\r\n        }\r\n        if (view.adaptHeight && ret.h !== actualSize.h) {\r\n            ret.h = actualSize.h;\r\n            if (canTriggerSet && !updateSize) updateSize = true;\r\n        }\r\n        // console.log(\"getSize() from node merged with actualSize\", {ret: {...ret}});\r\n\r\n        if (updateSize) this.set_size(ret, context);\r\n        if (outerSize) ret = this.get_outerGraph(context).translateSize(ret, this.get_innerGraph(context));\r\n        return ret;\r\n    }\r\n    // set_size(size: Partial<this[\"size\"]>, context: Context): boolean {\r\n    set_size(size: Partial<GraphSize>, c: Context): boolean {\r\n        // console.log(\"setSize(\"+(this.props?.data as any).name+\") thisss\", this);\r\n        if (!size) return false;\r\n        let view = this.get_view(c);\r\n        if (c.data.className === DEdgePoint.name) size = (this as any as LEdgePoint).encodePosCoords(c as any, size, view);\r\n        if (view.updateSize(c.data.id, size)) return true;\r\n        BEGIN()\r\n        if (size.x !== c.data.x && size.x !== undefined) SetFieldAction.new(c.data.id, \"x\", size.x, undefined, false);\r\n        if (size.y !== c.data.y && size.y !== undefined) SetFieldAction.new(c.data.id, \"y\", size.y, undefined, false);\r\n        if (size.w !== c.data.w && size.w !== undefined) SetFieldAction.new(c.data.id, \"w\", size.w, undefined, false);\r\n        if (size.h !== c.data.h && size.h !== undefined) SetFieldAction.new(c.data.id, \"h\", size.h, undefined, false);\r\n        END()\r\n        return true; }\r\n\r\n    get_html(context: Context): this[\"html\"] { return this.get_component(context).html.current || undefined; }\r\n    // get_html(context: Context): this[\"html\"] { return $(\"[node-id='\" + context.data.id + \"']\")[0]; }\r\n    set_html(val: this[\"htmlSize\"], context: Context): boolean { return this.cannotSet(\"set_html(). html is generated through jsx. edit the view instead.\"); }\r\n\r\n    get_htmlSize(context: Context): this[\"htmlSize\"] {\r\n        let html = this.get_html(context);\r\n        return html ? Size.of(html) : new Size(0, 0, 0, 0);\r\n        /*\r\n        let graph = this.get_graph(context);\r\n        if (!html) return nosize as any;\r\n        let size = Size.of(html);\r\n        let zoom = graph.zoom;\r\n        size.x /= zoom.x;\r\n        size.y /= zoom.y;\r\n        return size;*/}\r\n    set_htmlSize(val: this[\"htmlSize\"], context: Context): boolean {\r\n        // might be useful for fixed display size/location elements that stay in place even if you move tab or change zoom. debatable if needed\r\n        this.cannotSet(\"set_htmlSize(): todo extra low priority. set GraphSize through set_size instead.\");\r\n        return true; }\r\n    get_htmlPosition(context: Context): this[\"htmlPosition\"] { return this.get_htmlSize(context).tl(); }\r\n    set_htmlPosition(val: this[\"htmlPosition\"], context: Context): boolean {\r\n        // might be useful for fixed display size/location elements that stay in place even if you move tab or change zoom. debatable if needed\r\n        this.cannotSet(\"set_htmlPosition(): todo extra low priority. set graph position through set_position instead.\");\r\n        return true; }\r\n\r\n\r\n    /* how z-index work, it's really messy.\r\n    * cannot move html position. node id depends on it, and a node moving position would need to change id.\r\n    * so i use css order.\r\n    * first order is assigned through node constructor called by parent component injectProps, according to his last index in html.\r\n    * now z-index is set in node and updated properly.\r\n    * z-index is passed to a prop, rendered as html attribute.\r\n    * css takes the attribute value and uses it in \"order\" css rule.\r\n    * problem: updating node.z doesn't trigger the parent injectprops, so he inject html index and\r\n    * the outernmost html root cannot update his attribute without refreshing the parent and recalling injectprops\r\n    * fixed: by updating it directly in GraphElement.render()\r\n    * */\r\n    get_zIndex(context: Context): this[\"zIndex\"] { return context.data.zIndex; }\r\n    set_zIndex(val: this[\"zIndex\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data.id, \"zIndex\", val, undefined, false);\r\n        return true; }\r\n    get_z(context: Context): this[\"zIndex\"] { return context.data.zIndex; }\r\n    set_z(val: this[\"zIndex\"], context: Context): boolean { return this.set_zIndex(val, context); }\r\n    /*\r\n        get_containedIn(context: Context): this[\"containedIn\"] {\r\n            return context.data.containedIn ? LPointerTargetable.fromPointer(context.data.containedIn) : undefined; }\r\n        set_containedIn(val: Pack1<this[\"containedIn\"]>, context: LogicContext<DGraphElement>): boolean {\r\n            let ptr: DGraphElement[\"containedIn\"] = Pointers.from(val) as any;\r\n            SetFieldAction.new(context.data, 'containedIn', ptr, undefined, true);\r\n            if (ptr) SetFieldAction.new(ptr as any, 'subElements+=', context.data.id);\r\n            return true; }*/\r\n\r\n    get_subElements(context: Context): this[\"subElements\"] { return LPointerTargetable.fromArr(context.data.subElements); }\r\n    set_subElements(val: PackArr<this[\"subElements\"]>, context: LogicContext<DGraphElement>): boolean {\r\n        console.log(\"isDeepStrictEqual\", {isDeepStrictEqual});\r\n        // if (isDeepStrictEqual(context.data.subElements, val)) return true;\r\n        let pointers: Pointer<DGraphElement, 0, 'N', LGraphElement> = Pointers.from(val) || [];\r\n        if (Uarr.equals(pointers, context.data.subElements, false)) return true;\r\n        SetFieldAction.new(context.data, 'subElements', pointers, '', true);\r\n        const idlookup = store.getState().idlookup;\r\n        let arrdiff = U.arrayDifference(context.data.subElements, pointers);\r\n        // old subelements\r\n        for (let oldsubelementid of arrdiff.removed) {\r\n            let subelement: DGraphElement = (oldsubelementid && idlookup[oldsubelementid]) as DGraphElement;\r\n            if (subelement.father !== context.data.id) continue;\r\n            LPointerTargetable.from(subelement).father = null as any; // todo: can this happen? è transitorio o causa vertici senza parent permanenti?\r\n        }\r\n        // new subelements\r\n        for (let newsubelementid of arrdiff.added) {\r\n            let subelement: DGraphElement = (newsubelementid && idlookup[newsubelementid]) as DGraphElement;\r\n            if (subelement.father === context.data.id) continue;\r\n            LPointerTargetable.from(subelement).father = context.data.id as any; // trigger side-action\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_isResized(context: LogicContext<DVoidVertex>): DVoidVertex[\"isResized\"] { return context.data.isResized; }\r\n    set_isResized(val: DVoidVertex[\"isResized\"], context: LogicContext<DVoidVertex>): DVoidVertex[\"isResized\"] {\r\n        return SetFieldAction.new(context.data.id, \"isResized\", val);\r\n    }\r\n\r\n    get_model(context: Context): this[\"model\"] {\r\n        const modelElementId = $('[id=\"' + context.data.id + '\"]')[0].dataset.dataid;\r\n        const lModelElement: LModelElement = LPointerTargetable.from(modelElementId as string);\r\n        return lModelElement;\r\n    }\r\n\r\n    private get_allSubNodes(context: Context, state?: DState): this[\"allSubNodes\"] {\r\n        // return context.data.packages.map(p => LPointerTargetable.from(p));\r\n        state = state || store.getState();\r\n        let tocheck: Pointer<DGraphElement>[] = context.data.subElements || [];\r\n        let checked: Dictionary<Pointer, true> = {};\r\n        checked[context.data.id] = true;\r\n        while (tocheck.length) {\r\n            let newtocheck: Pointer<DGraphElement>[] = [];\r\n            for (let ptr of tocheck) {\r\n                if (checked[ptr]) throw new Error(\"loop in GraphElements containing themselves\");\r\n                checked[ptr] = true;\r\n                let subnode: DGraphElement = DPointerTargetable.from(ptr, state);\r\n                U.arrayMergeInPlace(newtocheck, subnode?.subElements);\r\n            }\r\n            tocheck = newtocheck;\r\n        }\r\n        delete checked[context.data.id];\r\n        return LPointerTargetable.from(Object.keys(checked), state);\r\n    }\r\n\r\n\r\n    get_father(context: Context): this[\"father\"] { return LPointerTargetable.fromPointer(context.data.father); }\r\n    set_father(val: Pack1<this[\"father\"]>, context: Context): boolean {\r\n        let ptr: DGraphElement[\"father\"] = Pointers.from(val) as any;\r\n        SetFieldAction.new(context.data, 'father', ptr, undefined, true);\r\n        if (ptr) SetFieldAction.new(ptr as any, 'subElements+=', context.data.id);\r\n        return true; }\r\n\r\n    get_isSelected(context: LogicContext<DGraphElement>): this[\"isSelected\"] { return context.data.isSelected; }\r\n    set_isSelected(val: this[\"isSelected\"], context: LogicContext<DGraphElement>): boolean {\r\n        return this.cannotSet(\"graphElement.isSelected(): todo\"); }\r\n\r\n    get_state(context: LogicContext<DGraphElement>): this[\"state\"] {\r\n        let state: GObject = context.data.state;\r\n        for (let key in state) {\r\n            switch(key) {\r\n                case \"id\": break;\r\n                default: state[key] = LPointerTargetable.wrap(state[key]); break;\r\n            }\r\n        }\r\n        return state as any;\r\n    }\r\n    set_state(val: this[\"state\"], context: LogicContext<DGraphElement>): boolean {\r\n        return this.cannotSet(\"graphElement.isSelected(): todo\"); }\r\n\r\n\r\n\r\n    // for edges\r\n    public get_startPoint(c: Context|undefined, size?: GraphSize, view?: LViewElement): GraphPoint { return this.get_startEndPoint(c, size, view, true); }\r\n    public get_endPoint(c: Context|undefined, size?: GraphSize, view?: LViewElement): GraphPoint { return this.get_startEndPoint(c, size, view, false); }\r\n    private get_startEndPoint(c: Context|undefined, size?: GraphSize, view?: LViewElement, isStart:boolean=true): GraphPoint {\r\n        if (!size) {\r\n            if (c) size = this.get_size(c) as any; else size = Log.exDevv(\"invalid arguments in get_startEndPoint\", {arguments});\r\n        }\r\n        if (!view) {\r\n            // if (c) view = this.get_view(c); else view = Log.exDevv(\"invalid arguments in get_startPoint\", {arguments});\r\n            view = c && this.get_view(c) || Log.exDevv(\"invalid arguments in get_startEndPoint\", {arguments});\r\n        }\r\n        let offset: GraphPoint = (view as LViewElement)[isStart ? \"edgeStartOffset\" : \"edgeEndOffset\"];\r\n        let isPercentage: boolean = (view as LViewElement)[isStart ? \"edgeStartOffset_isPercentage\" : \"edgeEndOffset_isPercentage\"];\r\n        if (!size) size = new GraphSize(0, 0, 0, 0);\r\n        if (isPercentage) offset = new GraphPoint(offset.x/100*(size.w), offset.y/100*(size.h));\r\n        return size.tl().add(offset, false);\r\n    }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DGraphElement);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LGraphElement)\r\n\r\n\r\n@RuntimeAccessible\r\nexport class DGraph extends DGraphElement {\r\n    // static _super = DGraphElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraph;\r\n    // static logic: typeof LGraph;\r\n    // static structure: typeof DGraph;\r\n\r\n    // inherit redefine\r\n    father!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    id!: Pointer<DGraph, 1, 1, LGraph>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    state: DMap = {} as any;\r\n    // personal attributes\r\n    zoom!: GraphPoint;\r\n    graphSize!: GraphSize; // internal size of the graph. can be huge even if the sub-graph is in a small window (scroll)\r\n    sizes!: Dictionary<Pointer<DModelElement>, GraphSize>;\r\n\r\n    public static new(htmlindex: number, model: DGraph[\"model\"],\r\n                      parentNodeID?: DGraphElement[\"father\"], // immediate parent\r\n                      parentgraphID?: DGraphElement[\"graph\"], // graph containing this subgraph (redudant? could get it from father chain)\r\n                      nodeID?: DGraphElement[\"id\"] // this id\r\n    ): DGraph {\r\n        return new Constructors(new DGraph('dwc'), parentNodeID, true, DGraphElement)\r\n            .DPointerTargetable(false, nodeID || Constructors.DGraph_makeID(model))\r\n            .DGraphElement(model, parentNodeID, parentgraphID, htmlindex).DGraph().end();\r\n    }\r\n\r\n\r\n    static getNodes(dmp: import(\"../logicWrapper/LModelElement\").DModelElement[], out: {$matched: JQuery<HTMLElement>; $notMatched: JQuery<HTMLElement>; }): JQuery<HTMLElement> {\r\n        let $allnodes = $('[data-dataid]');\r\n        let matchedids: Pointer[] = (dmp || []).map(d => d.id);\r\n        let matchedidmap:Dictionary<string, boolean> = U.objectFromArrayValues(matchedids);\r\n        if (!out) out = {} as any;\r\n\r\n        let allnodesarr = [...$allnodes];\r\n        let filternode = (d: HTMLElement) => {\r\n            if (!d?.dataset?.dataid) return false;\r\n            let id: string = ''+d?.dataset?.dataid;\r\n            return matchedidmap[id]; };\r\n        out.$matched = $(allnodesarr.filter(filternode));\r\n        out.$notMatched = $(allnodesarr.filter((n) => !filternode(n)));\r\n        console.error(\"getnodes\", {dmp, out, matchedidmap, matchedids, allnodesarr});\r\n        return out.$matched;\r\n        // throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\nvar nosize = {x:0, y:0, w:0, h:0, nosize:true};\r\n@RuntimeAccessible\r\nexport class LGraph<Context extends LogicContext<DGraph> = any, D extends DGraph = any> extends LGraphElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraph;\r\n    // static logic: typeof LGraph;\r\n    // static structure: typeof DGraph;\r\n\r\n    // inherit redefine\r\n    __raw!: DGraph;\r\n    id!: Pointer<DGraph, 1, 1, LGraph>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    state!: LMap;\r\n    // personal attributes\r\n    zoom!: GraphPoint;\r\n    graphSize!: GraphSize; // size internal to the graph, while \"size\" is instead external size of the vertex holding the graph in GraphVertexes\r\n    // protected sizes!: Dictionary<Pointer<DModelElement>, GraphSize>;\r\n\r\n\r\n    // get_sizes(context: Context): D[\"sizes\"] { return context.data.sizes; }\r\n    //set_sizes(val: D[\"sizes\"], context: Context): boolean { return SetFieldAction.new(context.data.id, \"sizes\", val); }\r\n\r\n    get_graphSize(context: LogicContext<DGraph>):  Readonly<GraphSize> { return context.data.graphSize; }\r\n    get_zoom(context: Context): GraphPoint {\r\n        const zoom: GraphPoint = context.data.zoom;\r\n        // (zoom as any).debug = {rawgraph: context.data.__raw, zoomx: context.data.zoom.x, zoomy: context.data.zoom.y}\r\n        return context.data.zoom; }\r\n\r\n    toGraphSize(...a:Parameters<this[\"coord\"]>): ReturnType<this[\"coord\"]>{ return this.wrongAccessMessage(\"toGraphSize\"); }\r\n    coord(htmlSize: Size): GraphSize { return this.wrongAccessMessage(\"toGraphSize\"); }\r\n    get_coord(context: Context): (htmlSize: Size) => GraphSize {\r\n        return (htmlSize: Size)=> {\r\n            let size: Size = this.get_htmlSize(context);\r\n            let zoom: GraphPoint = this.get_zoom(context);\r\n            return new GraphSize((htmlSize.x - size.x) / zoom.x, (htmlSize.y - size.y) / zoom.y, htmlSize.w/zoom.x, htmlSize.h/zoom.y);\r\n        }\r\n    }\r\n    // get_htmlSize(context: Context): Size { }\r\n    __info_of__translateSize: Info = {type:\"function(GraphSize, Graph) --> GraphSize\",\r\n        txt:\"Translate the position of an element from his coordinates to the coordinate system of another graph.\\n\" +\r\n            \"The other graph must be an ancestor containing the current Graph calling this function.\"}\r\n    translateSize<T extends GraphSize|GraphPoint>(ret: T, innerGraph: LGraph): T { return this.wrongAccessMessage(\"translateSize()\"); }\r\n    get_translateSize<T extends GraphSize|GraphPoint>(c: Context): ((size: T, innerGraph: LGraph) => T) {\r\n        return (size: T, innerGraph: LGraph): T => {\r\n            innerGraph = LPointerTargetable.wrap(innerGraph) as LGraph;\r\n            let ret: T = (size.hasOwnProperty(\"w\") ? new GraphSize(size.x, size.y, (size as GraphSize).w, (size as GraphSize).h) : new GraphPoint(size.x, size.y)) as T;\r\n            Log.ex(!innerGraph, \"translateSize() graph parameter is invalid: \"+innerGraph, innerGraph, c);\r\n            let ancestors: LGraph[] = [innerGraph, ...innerGraph.graphAncestors]\r\n            Log.ex(ancestors.indexOf(c.proxyObject) !== -1, \"translateSize() graph parameter is invalid: it must be a graph containing the current one.\", innerGraph, c);\r\n            for (let g of ancestors) ret.add(g.size.tl(), false);\r\n            // console.log(\"translateSize\", {c, thiss:c.proxyObject, ancestors, ancestorSizes: ancestors.map(a=> a.size.tl()), size, ret});\r\n            return ret; }\r\n    }\r\n    contains(elem: LGraphElement): boolean{ return this.wrongAccessMessage(\"contains()\"); }\r\n    get_contains(c: Context): ((elem: LGraphElement)=> boolean) {\r\n        return (elem: LGraphElement): boolean => {\r\n            let current = elem;\r\n            let next = elem.father;\r\n            let targetid = c.proxyObject.id;\r\n            if (current.id !== targetid) return true;\r\n            while(next && current.id !== next.id) {\r\n                current = next;\r\n                next = next.father;\r\n                if (current.id !== targetid) return true;\r\n            }\r\n            return false;\r\n        }}\r\n}\r\nRuntimeAccessibleClass.set_extend(DGraphElement, DGraph);\r\nRuntimeAccessibleClass.set_extend(LGraphElement, LGraph);\r\n// export const defaultVSize: GraphSize = new GraphSize(0, 0, 300, 160); // useless, now it's in view.DefaultVSize\r\n// export const defaultEPSize: GraphSize = new GraphSize(0, 0, 15, 15); // useless, now it's in view.DefaultVSize\r\n\r\n@RuntimeAccessible\r\nexport class DVoidVertex extends DGraphElement {\r\n    // static _super = DGraphElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVoidVertex;\r\n    // static logic: typeof LVoidVertex;\r\n    // static structure: typeof DVoidVertex;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DVoidVertex, 1, 1, LVoidVertex>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    state: DMap = {} as any;\r\n    zoom!: GraphPoint;\r\n    // personal attributes\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    isResized!: boolean;\r\n    // size?: GraphSize; // virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n\r\n    public static new(htmlindex: number, model: DGraphElement[\"model\"], parentNodeID: DGraphElement[\"father\"], graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"],\r\n                      size?: InitialVertexSize): DVoidVertex {\r\n        return new Constructors(new DVoidVertex('dwc'))\r\n            .DPointerTargetable(false, nodeID)\r\n            .DGraphElement(model, parentNodeID, graphID, htmlindex).DVoidVertex(size).end();\r\n    }\r\n\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LVoidVertex<Context extends LogicContext<DVoidVertex> = any, C extends Context = Context> extends LGraphElement {// <D extends DVoidVertex = any>\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVoidVertex;\r\n    // static logic: typeof LVoidVertex;\r\n    // static structure: typeof DVoidVertex;\r\n\r\n    // inherit redefine\r\n    __raw!: DVoidVertex;\r\n    id!: Pointer<DVoidVertex, 1, 1, LVoidVertex>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    state!: LMap;\r\n    zoom!: GraphPoint;\r\n    isResized!: boolean;\r\n\r\n    // personal attributes\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    size!: GraphSize; // virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n    __info_of__size = {type: \"?GraphSize\", txt: \"Size of the vertex, if null it means is utilizing the defaultSize from view. recommended to read component.getSize() instead of this.\"};\r\n\r\n    get_isResized(context: LogicContext<DVoidVertex>): DVoidVertex[\"isResized\"] { return context.data.isResized; }\r\n    set_isResized(val: DVoidVertex[\"isResized\"], context: LogicContext<DVoidVertex>): DVoidVertex[\"isResized\"] {\r\n        return SetFieldAction.new(context.data.id, \"isResized\", val);\r\n    }\r\n    /*\r\n        // todo: devo settare che il primo parametro delle funzioni che iniziano con set_ non può essere un logicContext\r\n        set_size(val: GraphSize, context: LogicContext<DVoidVertex>): boolean {\r\n            // todo: graphvertex should use this, but  calls graphelement.set_size instead\r\n            // SetFieldAction.new(context.data, 'size', val, Action.SubType.vertexSize);\r\n            if (!val) { return true; } //  val = defaultVSize; }\r\n            //console.trace('setsize:', {context, val});\r\n            if (context.data.x !== val.x) SetFieldAction.new(context.data, 'x', val.x);\r\n            if (context.data.y !== val.y) SetFieldAction.new(context.data, 'y', val.y);\r\n            if (context.data.w !== val.w) SetFieldAction.new(context.data, 'w', val.w);\r\n            if (context.data.h !== val.h) SetFieldAction.new(context.data, 'h', val.h);\r\n            val = new GraphSize(val.x, val.y, val.w, val.h);\r\n            // (context.proxy as unknown as LGraphElement).graph.graphSize\r\n            // update graph boundary too\r\n            const graph: LGraph = this.get_graph(context); // (context.proxyObject as this).get_graph(context);\r\n            const gsize = graph.graphSize;\r\n            //console.log('setsize2, graph:', {context, val, gsize, graph});\r\n            val.boundary(gsize);\r\n            if (val.equals(gsize)) return true;\r\n            graph.graphSize = val;\r\n            return true;\r\n        }*/\r\n\r\n    get_isSelected(context: LogicContext<DVoidVertex>): GObject {\r\n        return DPointerTargetable.mapWrap(context.data.isSelected, context.data, 'idlookup.' + context.data.id + '.isSelected', []);\r\n    }\r\n\r\n\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DGraphElement, DVoidVertex);\r\nRuntimeAccessibleClass.set_extend(LGraphElement, LVoidVertex);\r\n@RuntimeAccessible\r\nexport class DEdgePoint extends DVoidVertex { // DVoidVertex\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LEdgePoint;\r\n    // static logic: typeof LEdgePoint;\r\n    // static structure: typeof DEdgePoint;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DEdgePoint, 1, 1, LEdgePoint>;\r\n    father!: Pointer<DVoidEdge, 1, 1, LVoidEdge>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>; // todo: if null gets model from this.father (edge)?\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    zoom!: GraphPoint;\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    size?: GraphSize; //／／ virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n    // personal attributes\r\n    __isDEdgePoint!: true;\r\n\r\n    public static new(htmlindex: number, model: DEdgePoint[\"model\"] | undefined, parentNodeID: DEdgePoint[\"father\"], graphID?: DEdgePoint[\"graph\"], nodeID?: DGraphElement[\"id\"],\r\n                      size?: InitialVertexSize): DEdgePoint {\r\n        return new Constructors(new DEdgePoint('dwc'), parentNodeID, true)\r\n            .DPointerTargetable(false, nodeID)\r\n            .DGraphElement(undefined, parentNodeID, graphID, htmlindex)\r\n            .DVoidVertex(size).DEdgePoint().end();\r\n    }\r\n\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LEdgePoint<Context extends LogicContext<DEdgePoint> = any, C extends Context = Context> extends LVoidVertex {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LEdgePoint;\r\n    // static logic: typeof LEdgePoint;\r\n    // static structure: typeof DEdgePoint;\r\n\r\n    // inherit redefine\r\n    father!: LVoidEdge;\r\n    // __raw!: DEdgePoint;\r\n    id!: Pointer<DEdgePoint, 1, 1, LEdgePoint>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    zoom!: GraphPoint;\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    size!: GraphSize; // virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n    // personal attributes\r\n    __isLEdgePoint!: true;\r\n    edge!: LVoidEdge; // returns container edge\r\n    __info_of__edge: Info = {type:\"?LEdge\", txt:\"returns the containing edge if called on an EdgePoint, \\\"this\\\" if called on an edge, undefined otherwise.\"}\r\n\r\n    public get_edge(c: Context): LVoidEdge { return c.proxyObject.father; }\r\n    public set_edge(v: Pack1<LVoidEdge>, c: Context): boolean { return this.set_father(v as any, c); }\r\n\r\n    // from x,y as coords, to x%,y% as % of ((1-val)%*startpt) + ((val)%*endpt)\r\n    public decodePosCoords<T extends Partial<GraphSize> | Partial<GraphPoint>>(c: Context, size: T&any, view: LViewElement, sp0?: GraphPoint, ep0?: GraphPoint): T {\r\n        if (!view) view = this.get_view(c);\r\n        let edgePointCoordMode = view.edgePointCoordMode;\r\n        if (edgePointCoordMode === CoordinateMode.absolute) return size;\r\n        let le: LVoidEdge = c&&c.proxyObject.father;\r\n        // console.log(\"decodepos:\", {le, sp0, lesp:le?.startPoint});\r\n        let sp: GraphPoint = sp0||le.startPoint;\r\n        let ep: GraphPoint = ep0||le.endPoint;\r\n        let ret: any = ((\"w\" in size || \"h\" in size) ? new GraphSize() : new GraphPoint()); // GObject<Partial<GraphSize>>;\r\n        switch (edgePointCoordMode) {\r\n            default: return Log.exDevv(\"translatePosCoords() invalid coordinate mode\", {mode:edgePointCoordMode, view});\r\n            // case CoordinateMode.absolute: return size;\r\n            case CoordinateMode.relativePercent:\r\n                //maybe do: dampening factor on relative % offset? is it possible?\r\n\r\n                // let s = this.getBasicSize(c);\r\n                // MATH:\r\n                // size.x = sp.x*x% + ep.x*(1-x%)\r\n                // size.x = sp.x*x% + ep.x - ep.x*x%\r\n                // size.x - ep.x= (sp.x - ep.x)*x%\r\n                // (size.x - ep.x) / (sp.x - ep.x) = x% // actually i inverted <sp, ep> in first equation, so reverse them in result too.\r\n                if (size.x !== undefined) ret.x = (1 - size.x) * sp.x + (size.x) * ep.x;\r\n                if (size.y !== undefined) ret.y = (1 - size.y) * sp.y + (size.y) * ep.y;\r\n                break;\r\n            case CoordinateMode.relativeOffset:\r\n            case CoordinateMode.relativeOffsetStart:\r\n            case CoordinateMode.relativeOffsetEnd:\r\n                let useStart: boolean;\r\n                let useEnd: boolean;\r\n                switch (edgePointCoordMode) {\r\n                    default:\r\n                    case CoordinateMode.relativeOffset: useStart = true; useEnd = true; break;\r\n                    case CoordinateMode.relativeOffsetStart: useStart = true; useEnd = false; break;\r\n                    case CoordinateMode.relativeOffsetEnd: useStart = false; useEnd = true; break;\r\n                }\r\n                // offset = sp - size\r\n                // size = offset - sp\r\n                // in reverse: actualsize = offset, size=offset\r\n                Log.exDev(size.x&&!Array.isArray(size.x) || size.y&&!Array.isArray(size.y),\r\n                    \"decoding relative offset require an array size coordinate system. x=[x1, x2] --> x\", {size});\r\n                let offsetsp = useStart ? new GraphPoint(size.x[0] + sp.x, size.y[0] + sp.y) : new GraphPoint();\r\n                let offsetep = useEnd ? new GraphPoint(size.x[1] + ep.x, size.y[1] + ep.y) : new GraphPoint();\r\n                // if the start and endpoint of the edge didn't move, offsetsp = offsetep.\r\n                // if they moved, those 2 are discordant --> i pick middle\r\n                offsetsp.add(offsetep, false);\r\n                if (useStart && useEnd) offsetsp.divide(2, false);\r\n                if (size.x !== undefined) ret.x = offsetsp.x;\r\n                if (size.y !== undefined) ret.y = offsetsp.y;\r\n                break;\r\n        }\r\n        if (size.x === undefined) delete ret.x;\r\n        if (size.y === undefined) delete ret.y;\r\n        if ((size as any).w === undefined) delete ret.w; else ret.w = size.w;\r\n        if ((size as any).h === undefined) delete ret.h; else ret.h = size.h;\r\n        // console.log(\"decode coords\", {size, sp, ep, ret});\r\n\r\n        return ret;\r\n    }\r\n\r\n    public encodePosCoords<T extends Partial<GraphSize> | Partial<GraphPoint>>(c: Context, size: T, view: LViewElement, sp0?: GraphPoint, ep0?: GraphPoint): T {\r\n        if (!view) view = this.get_view(c);\r\n        let edgePointCoordMode = view.edgePointCoordMode;\r\n        if (edgePointCoordMode === CoordinateMode.absolute) return size;\r\n        let le: LVoidEdge = c&&c.proxyObject.father;\r\n        let sp: GraphPoint = sp0 || le.startPoint;//todo: delete sp0, ep0 parameters after testing\r\n        let ep: GraphPoint = ep0 || le.endPoint;\r\n        let ret: any = ((\"w\" in size || \"h\" in size) ? new GraphSize() : new GraphPoint()); // GObject<Partial<GraphSize>>;\r\n        switch (edgePointCoordMode) {\r\n            default: return Log.exDevv(\"translatePosCoords() invalid coordinate mode\", {mode:edgePointCoordMode, view});\r\n            // case CoordinateMode.absolute: return size;\r\n            case CoordinateMode.relativePercent:\r\n                // let s = this.getBasicSize(c);\r\n                // MATH:\r\n                // size.x = sp.x*x% + ep.x*(1-x%)\r\n                // size.x = sp.x*x% + ep.x - ep.x*x%\r\n                // size.x - ep.x= (sp.x - ep.x)*x%\r\n                // (size.x - ep.x) / (sp.x - ep.x) = x% // actually i inverted <sp, ep> in first equation, so reverse them in result too.\r\n                if (size.x !== undefined) ret.x = (size.x - sp.x) / (ep.x - sp.x);\r\n                if (size.y !== undefined) ret.y = (size.y - sp.y) / (ep.y - sp.y);\r\n                break;\r\n            case CoordinateMode.relativeOffset:\r\n            case CoordinateMode.relativeOffsetStart:\r\n            case CoordinateMode.relativeOffsetEnd:\r\n                let useStart: boolean;\r\n                let useEnd: boolean;\r\n                switch (edgePointCoordMode) {\r\n                    default:\r\n                    case CoordinateMode.relativeOffset: useStart = true; useEnd = true; break;\r\n                    case CoordinateMode.relativeOffsetStart: useStart = true; useEnd = false; break;\r\n                    case CoordinateMode.relativeOffsetEnd: useStart = false; useEnd = true; break;\r\n                }\r\n                if (size.x) ret.x = [useStart ? size.x - sp.x : -1, useEnd ? size.x - ep.x : -1];\r\n                if (size.y) ret.y = [useStart ? size.y - sp.y : -1, useEnd ? size.y - ep.y : -1];\r\n                /*\r\n                if (size.x) ret.x = [sp.x - size.x, ep.x - size.x];\r\n                if (size.y) ret.y = [sp.y - size.y, ep.y - size.y];*/\r\n                break;\r\n        }\r\n        if (size.x === undefined) delete ret.x;\r\n        if (size.y === undefined) delete ret.y;\r\n        if ((size as any).w === undefined) delete ret.w; else ret.w = (size as any).w;\r\n        if ((size as any).h === undefined) delete ret.h; else ret.h = (size as any).h;\r\n        // console.log(\"encode coorde\", {size, sp, ep, ret});\r\n        return ret;\r\n    }\r\n\r\n\r\n    public get_delete(context: Context): () => void {\r\n        // careful: pointedBy might be broken due to comment x984 (search it)\r\n        return super.get_delete(context);\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DVoidVertex, DEdgePoint);\r\nRuntimeAccessibleClass.set_extend(LVoidVertex, LEdgePoint);\r\n@RuntimeAccessible\r\nexport class DVertex extends DGraphElement { // DVoidVertex\r\n    // static _super = DVoidVertex;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVertex;\r\n    // static logic: typeof LVertex;\r\n    // static structure: typeof DVertex;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DVertex, 1, 1, LVertex>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    zoom!: GraphPoint;\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    isResized!: boolean;\r\n    // size!: GraphSize; // virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n    // personal attributes\r\n    __isDVertex!: true;\r\n\r\n    public static new(htmlindex: number, model: DGraphElement[\"model\"], parentNodeID: DGraphElement[\"father\"],\r\n                      graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"], size?: GraphSize): DVertex {\r\n        return new Constructors(new DVertex('dwc')).DPointerTargetable(false, nodeID)\r\n            .DGraphElement(model, parentNodeID, graphID, htmlindex)\r\n            .DVoidVertex(size).DVertex().end();\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LVertex<Context extends LogicContext<any> = any, D = DVertex> extends LVoidVertex {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVertex;\r\n    // static logic: typeof LVertex;\r\n    // static structure: typeof DVertex;\r\n\r\n    // inherit redefine\r\n    __raw!: DVertex;\r\n    id!: Pointer<DVertex, 1, 1, LVertex>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    zoom!: GraphPoint;\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    size!: GraphSize; // virtual, gets extracted from this. x and y are stored directly here as it extends GraphSize\r\n    isResized!: boolean;\r\n    // personal attributes\r\n    __isLVertex!: true;\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DGraphElement, DVertex);\r\nRuntimeAccessibleClass.set_extend(LGraphElement, LVertex);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DGraphVertex extends DGraphElement { // MixOnlyFuncs(DGraph, DVertex)\r\n    // static _super1 = DGraph;\r\n    // static _super2 = DVertex;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphVertex;\r\n    // static logic: typeof LGraphVertex;\r\n    // static structure: typeof DGraphVertex;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DGraphVertex, 1, 1>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    // from graph\r\n    zoom!: GraphPoint;\r\n    graphSize!: GraphSize; // internal size of the graph. can be huge even if the sub-graph is in a small window (scroll)\r\n\r\n    // from VoidVertex\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    isResized!: boolean;\r\n    // size!: GraphSize; // virtual\r\n    // from graph\r\n    sizes!: Dictionary<Pointer<DModelElement>, GraphSize>;\r\n\r\n    // personal attributes\r\n    __isDVertex!: true;\r\n    __isDGraph!: true;\r\n    __isDGraphVertex!: true;\r\n\r\n    public static new(htmlindex: number, model: DGraph[\"model\"], parentNodeID: DGraphElement[\"father\"],\r\n                      graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"], size?: GraphSize): DGraphVertex {\r\n        return new Constructors(new DGraphVertex('dwc')).DPointerTargetable(false, nodeID).DGraphElement(model, parentNodeID, graphID, htmlindex)\r\n            .DVoidVertex(size).DVertex().DGraph().end();\r\n    }\r\n\r\n\r\n    /*\r\n        static init_constructor(thiss: DGraphVertex, isUser: boolean = false, nodeID: string | undefined, graphID: string | undefined, model: Pointer<DModel>): void {\r\n            DGraph.init_constructor(thiss, isUser, nodeID, graphID, model);\r\n    //isUser: boolean = false, nodeID: string | undefined, graphID: string, model?: Pointer<DModel>\r\n            DVertex.init_constructor(thiss, isUser, nodeID, graphID as string, model);\r\n            thiss.className = this.name;\r\n        }*/\r\n}\r\nclass LG extends LGraph{}\r\nclass LV extends LVertex{}\r\n@RuntimeAccessible\r\nexport class LGraphVertex<Context extends LogicContext<any> = any, D extends DGraphVertex = any> extends MixOnlyFuncs(LG, LV) { // MixOnlyFuncs(LGraph, LVertex)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphVertex;\r\n    // static logic: typeof LGraphVertex;\r\n    // static structure: typeof DGraphVertex;\r\n\r\n    // inherit redefine\r\n    __raw!: DGraphVertex;\r\n    id!: Pointer<DGraphVertex, 1, 1>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn?: LGraphElement;\r\n    ///////////////////////////////////////// subElements!: LGraphElement[];\r\n    // from graph\r\n    zoom!: GraphPoint;\r\n    graphSize!: GraphSize; // internal size of the graph. can be huge even if the sub-graph is in a small window (scroll)\r\n\r\n    // from VoidVertex\r\n    x!: number;\r\n    y!: number;\r\n    w!: number;\r\n    h!: number;\r\n    isResized!: boolean;\r\n    size!: GraphSize; // virtual\r\n    protected sizes!: Dictionary<Pointer<DModelElement>, GraphSize>;\r\n\r\n\r\n    // personal attributes\r\n    __isLVertex!: true;\r\n    __isLGraph!: true;\r\n    __isLGraphVertex!: true;\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DGraph, DGraphVertex);\r\nRuntimeAccessibleClass.set_extend(DVertex, DGraphVertex);\r\nRuntimeAccessibleClass.set_extend(LGraph, LGraphVertex);\r\nRuntimeAccessibleClass.set_extend(LVertex, LGraphVertex);\r\n@RuntimeAccessible\r\nexport class DVoidEdge extends DGraphElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVoidEdge;\r\n    // static logic: typeof LVoidEdge;\r\n    // static structure: typeof DVoidEdge;\r\n    id!: Pointer<DVoidEdge, 1, 1, LVoidEdge>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n\r\n    // personal attributes\r\n    start!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    end!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    __isDVoidEdge!: true;\r\n\r\n    midPoints!: InitialVertexSize[]; // the logic part which instructs to generate the midnodes\r\n    midnodes!: Pointer<DEdgePoint, 1, 1, LEdgePoint>[]; // using subelements instead most of times\r\n\r\n    longestLabel!: PrimitiveType | labelfunc;\r\n    labels!: PrimitiveType[] | labelfunc[];\r\n\r\n    public static new(htmlindex: number, model: DGraph[\"model\"]|null|undefined, parentNodeID: DGraphElement[\"father\"], graphID: DGraphElement[\"graph\"],\r\n                      nodeID: DGraphElement[\"id\"]|undefined, start: DGraphElement[\"id\"], end: DGraphElement[\"id\"],\r\n                      longestLabel: DEdge[\"longestLabel\"], labels: DEdge[\"labels\"]): DEdge {\r\n        return new Constructors(new DEdge('dwc')).DPointerTargetable(false, nodeID)\r\n            .DGraphElement(model, parentNodeID, graphID, htmlindex)\r\n            .DVoidEdge(start, end, longestLabel, labels).end();\r\n    }\r\n}\r\n/*\r\n@RuntimeAccessible\r\nexport class MidPoint{\r\n    readonly id: string; // not really a pointer, it's not on store.\r\n    x?: number; y?: number;\r\n    readonly w?: number; // if it's modified it's not ever here (initial size) but on DEdgePoint that is a Node.\r\n    readonly h?: number;/*\r\n    constructor2(x: number=5, y: number=5, w: number=5, h: number=5) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }* /\r\nconstructor(id: string, w: number=5, h: number=5) {\r\n    this.id = id;\r\n    this.w = w;\r\n    this.h = h;\r\n}\r\n}*/\r\n@RuntimeAccessible\r\nexport class EdgeSegment{\r\n    index: number;\r\n    prev: EdgeSegment | undefined;\r\n    start: segmentmaker;\r\n    bezier: segmentmaker[];\r\n    end: segmentmaker;\r\n    length!: number;\r\n    d!: string;\r\n    dpart!: string; //  a segment of the whole path\r\n    m!: number; // m coefficient of the line between start and end.\r\n    rad!: number; // for head and tails: radian angle of the segment.\r\n    radLabels!: number; // for labels: it flips the angle when it's < PI/2 so the text is never upside down\r\n\r\n    isLongest!: boolean;\r\n    label!: PrimitiveType | JSX.Element | undefined;\r\n    svgLetter: EdgeBendingMode;\r\n    /*constructor(label: PrimitiveType|undefined, length: number, startp: GraphPoint, endp: GraphPoint, start: LGraphElement, end: LGraphElement,\r\n                bezierpts: GraphPoint[], mid: LGraphElement[],\r\n                svgLetter: EdgeBendingMode, index: number, fillMode: MidNodeHandling) {\r\n        this.label = label;\r\n        this.length = length;\r\n        this.length = length;\r\n        this.startp = startp;\r\n        this.bezierp = bezierpts;\r\n        this.endp = endp;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.mid = mid;\r\n    }*/\r\n    constructor(start: segmentmaker, mid: segmentmaker[], end: segmentmaker,\r\n                svgLetter: EdgeBendingMode, gapMode: EdgeGapMode,\r\n                index: number, prevSegment: EdgeSegment | undefined){\r\n        // console.log(\"segmentmaker:\", arguments, ((start.ge?.model as any)?.name)+\" ---> \" + ((end.ge?.model as any)?.name));\r\n        this.start = start;\r\n        this.bezier = mid;\r\n        this.end = end;\r\n        this.index = index;\r\n        this.prev = prevSegment;\r\n        //this.segments = segments;\r\n        // the idea: forbid all T and S or transform them in C, Q by calculating and manually adding their mirrored bezier pts\r\n        if (svgLetter[1]) svgLetter = (svgLetter[0]) as any;\r\n        if (svgLetter === EdgeBendingMode.Bezier_quadratic_mirrored) {\r\n            this.addBezierPoint();\r\n            this.svgLetter = EdgeBendingMode.Bezier_quadratic;\r\n        } else\r\n        if (svgLetter === EdgeBendingMode.Bezier_cubic_mirrored) {\r\n            this.addBezierPoint();\r\n            this.svgLetter = EdgeBendingMode.Bezier_cubic;\r\n        }\r\n        else this.svgLetter = svgLetter;\r\n\r\n        // fix if amount of bezier pts is invalid for current letter\r\n        switch (this.svgLetter) {\r\n            case EdgeBendingMode.Line:\r\n            case EdgeBendingMode.Bezier_quadratic:\r\n                if (this.bezier.length >= 1) break;\r\n                else this.svgLetter = EdgeBendingMode.Line;\r\n                break;\r\n            case EdgeBendingMode.Bezier_cubic:\r\n                if (this.bezier.length >= 2) break;\r\n                else if (this.bezier.length >= 1) this.svgLetter = EdgeBendingMode.Bezier_quadratic;\r\n                else this.svgLetter = EdgeBendingMode.Line;\r\n                break;\r\n            case EdgeBendingMode.Elliptical_arc:\r\n                if (this.bezier.length >= 3) break;\r\n                else this.svgLetter = EdgeBendingMode.Line; // straight to end ignoring midpoints that are NOT coordinates when using elliptical arc.\r\n                break;\r\n            default:\r\n            case EdgeBendingMode.Bezier_quadratic_mirrored as string:\r\n            case EdgeBendingMode.Bezier_cubic_mirrored as string: // translated to Q or C by adding mirrored bezier points explicitly\r\n            case EdgeBendingMode.Bezier_QT:\r\n            case EdgeBendingMode.Bezier_CS: // translated to Q or C by sending the right letter to each segment\r\n                Log.exDevv(\"this svg letter should not appear here\", this.svgLetter);\r\n                break;\r\n        }\r\n    }\r\n    addBezierPoint(): void {\r\n        let prev: EdgeSegment | undefined = this.prev;\r\n        if (!prev) return;\r\n        let prevedgemakerbezier: segmentmaker = (prev.bezier[prev.bezier.length-1] || prev.start);\r\n        let mirroredBezier: segmentmaker = {...prevedgemakerbezier, pt: EdgeSegment.invertLastBezierPt(prevedgemakerbezier.pt, prev.end.pt)};\r\n        this.bezier = [mirroredBezier, ...this.bezier];\r\n        // always only 1 assumed pt both in cubic and quadratic.\r\n        // let next: this | undefined = this.segments[this.index+1];\r\n        // EdgeSegment.invertLastBezierPt((next.mid[1] || next.end).pt, next.start.pt);\r\n    }\r\n\r\n    makeD(index: number, gapMode: EdgeGapMode): string {\r\n        this.m = GraphPoint.getM(this.start.pt, this.end.pt);\r\n        this.rad = Geom.mToRad(this.m, this.start.pt, this.end.pt);\r\n        this.radLabels = Math.atan(this.m);\r\n\r\n        let svgLetter = this.svgLetter; // caller makes sure to pass right letter and resolve \"CS\" mixed letters. // this.bendingModeToLetter(bendingMode, index);\r\n        // caller sends inverted pts as normal coords\r\n        // let invertedBezPt = lastSegment && EdgeSegment.invertLastBezierPt(lastSegment.midp[lastSegment.mid.length-1] || lastSegment.startp, lastSegment.endp);\r\n        switch (this.svgLetter.length) {\r\n            case 2:\r\n                return Log.exDevv(\"mixed letters are not allowed and should have been resolved to single svg letters before here, found:\" + svgLetter);\r\n            /*return Log.exDevv(\"dev problem to fix:\\n\" +\r\n            \"the mirrored mode requires the first one to have explicit non-mirrored mode?? like M, C a1 a2 a3, S a1, S a1, S a1\\n\" +\r\n            \"So all segments with mixed modes needs to extract the last bezier point (penultimate coordinate) from previous segments, mirror it and insert in midp[0]\");*/\r\n            case 1:\r\n                let bezierpts = [...this.bezier.map( b => b.pt), this.end.pt];\r\n                let finalpart = svgLetter + \" \" + bezierpts.map((p)=> p.x + \" \" + p.y).join(\", \");\r\n                this.dpart = \"M \" + this.start.pt.x + \" \" + this.start.pt.y + \", \" + finalpart;\r\n                //midp = [this.startp, ...this.midp];\r\n                // d = M sp X mp2 ep // X = custom letter\r\n                // dpart = T sp X mp2 ep // S = S if X = C,\r\n                // sp is the startingpoint from the prev node, which might be != from endpoint of last node if last node have w>0 && h>0\r\n                // so i'm \"filling\" the gap with a T, or L arc wich can use only 1 parameter (they are the only 1-parameter arcs)\r\n                let startletter: string;\r\n                if (this.prev && this.prev.end.pt.equals(this.start.pt)) gapMode = EdgeGapMode.average; // if the 2 points coincide, i use any 1 of the gapmodes that are continuous\r\n                switch (gapMode){\r\n                    case EdgeGapMode.center:\r\n                    case EdgeGapMode.average:\r\n                        // continuous gap modes. they only differ in how the \"joining\" point is found, but not in how they behave after that.\r\n                        /*\r\n                        if (index === 0) {\r\n                             startletter = \"M \";\r\n                         }\r\n                         else {\r\n                             switch (svgLetter) {\r\n                                 case SvgLetter.A: case SvgLetter.C: case SvgLetter.S: case SvgLetter.Q: case SvgLetter.T: default:\r\n                                     startletter = SvgLetter.T + \" \"; break;\r\n                                 case SvgLetter.L: case SvgLetter.M:\r\n                                     startletter = SvgLetter.L + \" \"; break;\r\n                             }\r\n                         }*/\r\n                        if (index) {\r\n                            this.d = finalpart;\r\n                        }\r\n                        else { this.d = this.dpart; }\r\n                        break;\r\n                    case EdgeGapMode.gap:\r\n                    case EdgeGapMode.autoFill:\r\n                    case EdgeGapMode.lineFill:\r\n                    case EdgeGapMode.arcFill:\r\n                        // the filling itself is done by another segment (solving svg letter and simulating i=0), so i treat it as a gap.\r\n                        this.d = this.dpart;\r\n                        break;\r\n                    default:\r\n                        Log.exDevv(\"unexpected EdgeGapMode:\" + gapMode, {gapMode});\r\n                }\r\n                break;\r\n            default: return Log.exDevv(\"unexpected bending mode length:\" + this.svgLetter + \" or fillMode: \" + gapMode, {bendingMode: this.svgLetter, index, gapMode});\r\n        }\r\n\r\n        //using\r\n        /*\r\n        88\r\n\r\n        // d should not have M set (except for segments[0]\r\n        // dpart have M abd beed to add explicit points for \"mirroring\" and transforming bezier quadratic mirrored in bezier quadratic normal etc.\r\n        //88 problem: the mirrored mode requires the first one to have explicit nonmirrored mode?? like M, C a1 a2 a3, S a1, S a1, S a1 .... ?\r\n        in any case the % letter part is wrong because it needs to subtract first element used for M*/\r\n        return this.d;\r\n    }\r\n\r\n    static invertLastBezierPt(bezier: GraphPoint, end: GraphPoint): GraphPoint{\r\n        // vector = bezier - end\r\n        // end + vector = bezier\r\n        // end - vector = inverted bezier? = 2*end-bezier\r\n        let vector = bezier.subtract(end, true);\r\n        return end.subtract(vector, true);\r\n    }\r\n\r\n    calcLength(): void {\r\n        this.length = this.start.pt.distanceFromPoint(this.end.pt);\r\n    }\r\n}\r\nexport enum SvgLetter{ \"L\"=\"L\" , \"M\"=\"M\", \"S\"=\"S\", \"C\"=\"C\", \"Q\"=\"Q\", \"A\"=\"A\", \"T\"=\"T\"}\r\nexport class EdgeFillSegment extends EdgeSegment{\r\n    makeD(index: number, gapMode: EdgeGapMode): string {\r\n        if (gapMode === EdgeGapMode.autoFill) { gapMode = this.svgLetter === EdgeBendingMode.Line ? EdgeGapMode.lineFill : EdgeGapMode.arcFill; }\r\n        switch (gapMode) {\r\n            case EdgeGapMode.center:\r\n            case EdgeGapMode.average:\r\n            case EdgeGapMode.gap:\r\n                return \"\"; // should not have filler arcs\r\n            default:\r\n            case EdgeGapMode.autoFill as any:\r\n            case EdgeGapMode.lineFill:\r\n                this.bezier = [];\r\n                this.svgLetter = EdgeBendingMode.Line;\r\n                return super.makeD(index, gapMode);\r\n            case EdgeGapMode.arcFill:\r\n                this.svgLetter = this.svgLetter[0] as EdgeBendingMode;\r\n                if (this.svgLetter === \"Q\") this.bezier = this.bezier.length ? [this.bezier[0]] : [];\r\n                return super.makeD(index, gapMode);\r\n        }\r\n    }\r\n}\r\n\r\n\r\ntype segmentmaker = {size: GraphSize, view: LViewElement, ge: LGraphElement, pt: GraphPoint};\r\n@RuntimeAccessible\r\nexport class LVoidEdge<Context extends LogicContext<DVoidEdge> = any, D extends DEdge = DEdge> extends LGraphElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LVoidEdge;\r\n    // static logic: typeof LVoidEdge;\r\n    // static structure: typeof DVoidEdge;\r\n    __raw!: DVoidEdge;\r\n    id!: Pointer<DVoidEdge, 1, 1, LVoidEdge>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn?: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    __isLVoidEdge!: true;\r\n    midPoints!: InitialVertexSize[]; // the logic part which instructs to generate the midnodes\r\n    midnodes!: LEdgePoint[];\r\n    edge!: LVoidEdge; // returns self. useful to get edge from edgePoints without triggering error if you are already on edge.\r\n    __info_of__edge: Info = {type:\"?LEdge\", txt:\"returns this if called on an edge, the containing edge if called on an EdgePoint, undefined otherwise.\"}\r\n\r\n/*\r\nreplaced by startPoint\r\n    edgeStart!: GraphPoint;\r\n    edgeStart_inner!: GraphPoint;\r\n    edgeStart_outer!: GraphPoint;\r\n    __info_of__edgeStart: Info = {type: \"GraphPoint\", txt: \"Same as edgeStart_outer.\"}\r\n    __info_of__edgeStart_outer: Info = {type: \"GraphPoint\",\r\n     txt: \"Where the edge should start his path, in coordinates relative at the root Graph.\r\n     <br>Computed by combining the anchor offset option in View and the size of the starting node.\"}\r\n    __info_of__edgeStart_inner: Info = {type: \"GraphPoint\",\r\n     txt: \"Where the edge should start his path, in coordinates relative at the most nested Graph.\r\n     <br>Computed by combining the anchor offset option in View and the size of the starting node.\"}\r\n    edgeEnd!: GraphPoint;\r\n    edgeEnd_inner!: GraphPoint;\r\n    edgeEnd_outer!: GraphPoint;\r\n    __info_of__edgeEnd: Info = {type: \"GraphPoint\", txt: \"Same as edgeEnd_outer.\"}\r\n    __info_of__edgeEnd_outer: Info = {type: \"GraphPoint\",\r\n     txt: \"Where the edge should end his path, in coordinates relative at the root Graph.\r\n     <br>Computed by combining the anchor offset option in View and the size of the starting node.\"}\r\n    __info_of__edgeEnd_inner: Info = {type: \"GraphPoint\",\r\n     txt: \"Where the edge should end his path, in coordinates relative at the most nested Graph.\r\n     <br>Computed by combining the anchor offset option in View and the size of the starting node.\"}\r\n*/\r\n\r\n\r\n//    label!: PrimitiveType; should never be read change their documentation in write only. their values is \"read\" in this.segments\r\n//    longestLabel!: PrimitiveType;\r\n//    labels!: PrimitiveType[];\r\n    allNodes!: [LGraphElement, ...Array<LEdgePoint>, LGraphElement]\r\n\r\n\r\n    /*    ___info_of__longestLabel: Info = {readType: \"PrimitiveType\", writeType:\"PrimitiveType | \" +\r\n                \"(e:this, curr: LGraphElement, next: LGraphElement, curr_index: number, allNodes: LGraphElement[]) => PrimitiveType)\", txt: <span>Label assigned to the longest path segment.</span>}\r\n        ___info_of__label: Info = {type: \"\", txt: <span>Alias for longestLabel</span>};\r\n        ___info_of__labels: Info = {type: \"type of label or Array<type of label>\", txt: <span>Instructions to label to multiple or all path segments in an edge</span>};\r\n    */\r\n    ___info_of__allNodes: Info = {type: \"[LGraphElement, ...Array<LEdgePoint>, LGraphElement]\", txt: <span>first element is this.start. then all this.midnodes. this.end as last element</span>};\r\n\r\n\r\n    // get_label(c: Context): this[\"label\"] { return this.get_longestLabel(c); }\r\n    // get_longestLabel(c: Context): this[\"label\"] { return this.get_label_impl(c.data, c.proxyObject); }\r\n    public headPos_impl(c: Context, isHead: boolean, headSize0?: GraphPoint, segment0?: EdgeSegment, zoom0?: GraphPoint): GraphSize & {rad: number} {\r\n        let segment: EdgeSegment = segment0 || this.get_segments(c).segments[0];\r\n        // let v: LViewElement = this.get_view(c);\r\n        let tmp: any = headSize0 || (isHead ? this.get_view(c).edgeHeadSize : this.get_view(c).edgeTailSize);\r\n        if (!tmp || tmp.x === 0 || tmp.y === 0) {\r\n            // head or tail missing\r\n            tmp = new GraphSize(0, 0, 0, 0);\r\n            tmp.rad = 0;\r\n            return tmp;\r\n        }\r\n        let zoom: GraphPoint = zoom0 || this.get_graph(c).zoom;\r\n        let headPos: GraphSize & {rad: number} = (new GraphSize(0, 0, tmp.x, tmp.y) as any); //.multiply({w:zoom.x, h:zoom.y});\r\n        let useBezierPoints = true;\r\n        let start: GraphPoint, end: GraphPoint;\r\n        let m: number;\r\n        if (useBezierPoints) {\r\n            if (isHead) {\r\n                start = segment.end.pt;\r\n                end = (segment.bezier[segment.bezier.length - 1] || segment.start).pt;\r\n            } else {\r\n                start = segment.start.pt;\r\n                end = (segment.bezier[0] || segment.end).pt;\r\n            }\r\n            m = GraphPoint.getM(start, end);\r\n        } else {\r\n            if (isHead) { start = segment.end.pt; end = segment.start.pt; }\r\n            else { start = segment.start.pt; end = segment.end.pt; }\r\n            m = segment.m;\r\n        }\r\n        // first find the center of where it should be positioned\r\n        // let center: GraphPoint;\r\n        // let distance: number = Math.sqrt(headPos.w*headPos.w + headPos.h*headPos.h);\r\n        // let isVertical = m >=1 ;\r\n        let x4headsize = new GraphSize(start.x - headPos.w, start.y - headPos.h, headPos.w*2, headPos.h*2);\r\n        // first intersection is segment origin. second is found with the box containing all possible edgeHead positions that touch the startPoint\r\n        // (doing x4 his shape and placing 4 \"rectangles\" all around startPoint) to cover all possible segment directions.\r\n        // or finding first direction (vertical if m >1, horizontal if m<0) and vector direction and intersecting with only the \"correct\" placed edgeHead rectangle.\r\n        // then the intersection will likely not fall on the extreme angle of EdgeHead and i can re-center edgeHead\r\n        // so that first and second intersections are equal spaced with the center segment\r\n        let secondIntersection: GraphPoint | undefined;\r\n        let segmentDistance = start.distanceFromPoint(end);\r\n        if (segmentDistance <= Math.sqrt(headPos.w**2 + headPos.h**2)){\r\n            let safeDistance = Math.max(headPos.w, headPos.h)*5;\r\n            end = new GraphPoint( end.y + safeDistance, end.y + m * safeDistance); // move the point away so it doesn't intersect anymore. i just need direction\r\n            // too small to fit edgeHead, i simply put it centered on the whole segment\r\n            // secondIntersection = end;\r\n        }\r\n        secondIntersection = GraphSize.closestIntersection(x4headsize, start, end, undefined);\r\n        if (!secondIntersection) return Log.exx(\"failed to intersect edge head\", {x4headsize, segment, headPos, c, start, end, useBezierPoints});\r\n        tmp = secondIntersection.add(start, false).divide(2); // center of edgehead\r\n        headPos.x = tmp.x - headPos.w / 2; // tl corner\r\n        headPos.y = tmp.y - headPos.h / 2; // tl corner\r\n        headPos.rad = Geom.mToRad(m, start, end);\r\n        /*\r\n        devo trovare la distanza tra il centro dell'egeHead e il punto di inizio in termini assoluti, così tramite M trovo distanza in x e y. o trovarla in altro modo\r\n        if (segment.m === Number.POSITIVE_INFINITY || segment.m === Number.NEGATIVE_INFINITY) {\r\n            center = segment.start.pt.add({x:0, y: distance}, true); }\r\n        else { center = segment.start.pt.add({x:segment.m*headPos.w/2, y:segment.m*headPos.h/2\r\n         this is wrong, cannot be the same for x and y, i should invert the line equation for x?}, true); }\r\n        headPos.x = center.x - headPos.w / 2;\r\n        headPos.y = center.y - headPos.h / 2;*/\r\n        // console.log(\"head intersected\", {headPos, secondIntersection, x4headsize, segment, c, start, end, useBezierPoints});\r\n\r\n        return headPos;\r\n    }\r\n\r\n    public headPos(headSize0?: GraphPoint, segment0?: EdgeSegment, zoom0?: GraphPoint): GraphSize & {rad: number} {\r\n        return this.wrongAccessMessage(\"This is not headPos() implementation. it is just for typings. use the getter\"); }\r\n    public tailPos(headSize0?: GraphPoint, segment0?: EdgeSegment, zoom0?: GraphPoint): GraphSize & {rad: number} {\r\n        return this.wrongAccessMessage(\"This is not tailPos() implementation. it is just for typings. use the getter\"); }\r\n    protected get_headPos(c: Context): this[\"headPos\"] {\r\n        return (headSize?: GraphPoint, segment?: EdgeSegment, zoom?: GraphPoint) => this.headPos_impl(c, true, headSize, segment, zoom); }\r\n    protected get_tailPos(c: Context): this[\"tailPos\"] {\r\n        return (headSize?: GraphPoint, segment?: EdgeSegment, zoom?: GraphPoint) => this.headPos_impl(c, false, headSize, segment, zoom); }\r\n    protected get_allNodes(c: Context): this[\"allNodes\"] { return [this.get_start(c), ...this.get_midnodes(c), this.get_end(c)]; }\r\n\r\n    protected get_edge(c: Context): this{ return c.proxyObject as this; }\r\n    protected set_edge(v: any, c: Context): false { return this.cannotSet(\"edge field, on an edge element\"); }\r\n    protected get_midPoints(c: Context):this[\"midPoints\"] { return c.data.midPoints; }\r\n    public addMidPoint(v: this[\"midPoints\"][0]): boolean { return this.wrongAccessMessage(\"addMidPoint\"); }\r\n    protected get_addMidPoint(c: Context): (v: this[\"midPoints\"][0]) => boolean { return (v:this[\"midPoints\"][0]) => this.impl_addMidPoints(v, c); }\r\n    protected set_midPoints(val: this[\"midPoints\"], c: Context): boolean {\r\n        return SetFieldAction.new(c.data.id, \"midPoints\", val, undefined, false);\r\n    }\r\n    protected impl_addMidPoints(val: this[\"midPoints\"][0], c: Context): boolean {\r\n        return SetFieldAction.new(c.data.id, \"midPoints\", val, '+=', false);\r\n    }\r\n    protected get_label_impl(c: Context, segment: EdgeSegment, nodes: this[\"allNodes\"], segments: EdgeSegment[]): PrimitiveType | undefined {\r\n        let key: \"longestLabel\" | \"labels\" = segment.isLongest ? \"longestLabel\" : \"labels\"; // : keyof this\r\n        // if (isLongestSegment) return this.get_longestLabel_impl(d, l, nodes, index):\r\n        const d = c.data;\r\n        const l = c.proxyObject;\r\n        let labelmaker: any = d[key]; // orArr<PrimitiveType | JSX | function>\r\n        let labelmakerfunc: labelfunc = labelmaker as any;\r\n        // let lastSeg = segments[i-1];\r\n        switch (typeof labelmaker) {//nb{}[]<>\r\n            case \"number\":\r\n            case \"undefined\":\r\n            case \"boolean\":\r\n            case \"string\": return labelmaker;\r\n            // case \"function\": return nodes.map( (o, i) => d.labels(l, nodes, i)).slice(0, nodes.length-1);\r\n            case \"function\": return labelmakerfunc(l, segment, nodes, segments);\r\n            default: break;\r\n            case \"object\":\r\n                if (labelmaker === null) return null;\r\n                if (!Array.isArray(labelmaker)) break;\r\n                if (typeof labelmaker[0] === \"function\") return (labelmaker[segment.index % labelmaker.length] as labelfunc)(l, segment, nodes, segments);\r\n                return (labelmaker as PrimitiveType[])[segment.index % labelmaker.length];\r\n        }\r\n        Log.exx(\"edge labels invalid type, must be a primitive value, a function or an array of such.\", {labelmaker, key, d});\r\n        return undefined;\r\n    }/*\r\n    private get_label_impl_old(d: DVoidEdge, l: LVoidEdge, nodes:this[\"allNodes\"], index: number, longestlabelindex?: number): PrimitiveType {\r\n        if (d.longestLabel !== undefined && index === longestlabelindex) return this.get_longestLabel_impl(d, l, nodes, index);\r\n        switch (typeof d.labels) {//nb{}[]<>\r\n            case \"number\":\r\n            case \"undefined\":\r\n            case \"boolean\":\r\n            case \"string\": return d.labels;\r\n            // case \"function\": return nodes.map( (o, i) => d.labels(l, nodes, i)).slice(0, nodes.length-1);\r\n            case \"function\": return d.labels(l, nodes[index], nodes[index+1], index, nodes);\r\n            default: break;\r\n            case \"object\": if (!Array.isArray(d.labels)) break;\r\n            if (typeof d.labels[0] === \"function\") return (d.labels as any)[index % d.labels.length](l, nodes[index], nodes[index+1], index, nodes);\r\n            return (d.labels as PrimitiveType[])[index % d.labels.length];\r\n        }\r\n        Log.exx(\"edge labels invalid type, must be a primitive value, a function or an array of such.\", d.labels);\r\n    }*/\r\n\r\n    __info_of__startPoint: Info = {type: \"GraphPoint\", txt:<span>startPoint of this.start (element originating the edge). Defaults in outer coordinates.</span>};\r\n    __info_of__endPoint: Info = {type: \"GraphPoint\", txt:<span>endPoint of this.end (element originating the edge). Defaults in outer coordinates.</span>};\r\n    public get_startPoint(context: Context): GraphPoint{ return this.get_startPoint_Outer(context); }\r\n    public get_endPoint(context: Context): GraphPoint{ return this.get_endPoint_Outer(context); }\r\n    public get_startPoint_Outer(c: Context): GraphPoint{\r\n        // console.log(\"get_edgeStart_Outer\", {out:this.get_outerGraph(c), pos:this.get_startPoint_inner(c), inner:this.get_start(c).innerGraph});\r\n        return this.get_outerGraph(c).translateSize(this.get_startPoint_inner(c), this.get_start(c).innerGraph);\r\n    }\r\n    public get_endPoint_Outer(c: Context): GraphPoint{\r\n        // console.log(\"get_edgeEnd_Outer\", {out:this.get_outerGraph(c), pos:this.get_endPoint_inner(c), inner:this.get_end(c).innerGraph});\r\n        return this.get_outerGraph(c).translateSize(this.get_endPoint_inner(c), this.get_end(c).innerGraph);\r\n    }\r\n\r\n    public get_startPoint_inner(c: Context): GraphPoint{ return this.get_edgeStartEnd_inner(c, true); }\r\n    public get_endPoint_inner(c: Context): GraphPoint{ return this.get_edgeStartEnd_inner(c, false); }\r\n    private get_edgeStartEnd_inner(c: Context, isStart: boolean): GraphPoint{ return isStart ? this.get_start(c).startPoint : this.get_end(c).endPoint; }\r\n    segments!: {all: EdgeSegment[], segments: EdgeSegment[], fillers: EdgeSegment[], head: GraphSize&{rad:number}, tail: GraphSize&{rad:number}};\r\n    segments_inner!: {all: EdgeSegment[], segments: EdgeSegment[], fillers: EdgeSegment[], head: GraphSize&{rad:number}, tail: GraphSize&{rad:number}};\r\n    segments_outer!: {all: EdgeSegment[], segments: EdgeSegment[], fillers: EdgeSegment[], head: GraphSize&{rad:number}, tail: GraphSize&{rad:number}};\r\n    __info_of__segments: Info = {type: \"{all:T, segments:T, fillers:T, head: GraphSize&{rad:number}, tail: as head} where T is EdgeSegment\",\r\n        txt:<span>Collection of segments connecting in order vertex and EdgePoint without intersecting their area, aimed to be rendered in svg path.\r\n            <br/>fillers are arcs generated by view.edgeGapMode being autofill, arcfill or linefill.\r\n            <br/>length of this.segments array is Math.ceil(allNodes.length / svg_letter_size) specified on view.\r\n            <br/>\"head\" and \"tail\" are the position and angle of eventual edge decorators. Refer to this.headPos documentation.</span>}\r\n\r\n    private svgLetterSize(s: string, addM: boolean = true, doublingMidPoints: boolean = true): {first:number, others: number} {\r\n        let ret: {first:number, others: number};\r\n        switch (s) {\r\n            default: ret = Log.exDevv(\"unexpected svg path letter: \\\"\" + s + \"\\\"\", s); break;\r\n            case EdgeBendingMode.Line:\r\n            case EdgeBendingMode.Bezier_quadratic_mirrored: ret = {first:1, others:1}; break;\r\n            case EdgeBendingMode.Bezier_quadratic:\r\n            case EdgeBendingMode.Bezier_cubic_mirrored: ret = {first:2, others:2}; break;\r\n            case EdgeBendingMode.Bezier_cubic: ret = {first:3, others:3}; break;\r\n            case EdgeBendingMode.Elliptical_arc: ret = {first:4, others:4}; break;\r\n\r\n            case EdgeBendingMode.Bezier_QT: ret = {first:2, others:1}; break;\r\n            case EdgeBendingMode.Bezier_CS: ret = {first:3, others:2}; break;\r\n        }\r\n\r\n        // account for the fact that every midpoint is listed twice: at anchor start and anchor end.\r\n        if (doublingMidPoints) {\r\n            // removing last point (first is already excluded because addM didn't trigger yet)\r\n            // , the remaining are midpoints to double. then i add it back\r\n            ret.first = (ret.first - 1) * 2 + 1;\r\n            ret.others = (ret.others - 1) * 2 + 1;\r\n        }\r\n\r\n        // account for the first M letter\r\n        //    (if the segment is not mode.gap or first, M coord still exist in segment but are ignored)\r\n        if (addM) {\r\n            ret.first += 1;\r\n            ret.others += 1;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private get_points_impl(allNodes: LGraphElement[], outer: boolean): segmentmaker[] {\r\n        function getAnchorOffset(size: GraphSize, offset: GraphPoint, isPercentage: boolean) {\r\n            if (!size) size = new GraphSize(0, 0, 0, 0);\r\n            if (isPercentage) offset = new GraphPoint(offset.x/100*(size.w), offset.y/100*(size.h));\r\n            return size.tl().add(offset, false);\r\n        }\r\n        const all: segmentmaker[] = allNodes.flatMap((ge, i) => {\r\n            let base: segmentmaker = {view: ge.view, size: outer ? ge.outerSize : ge.innerSize, ge, pt: null as any};\r\n            let rets: segmentmaker | undefined;// = base as any;\r\n            let rete: segmentmaker | undefined;// = {...base} as any;\r\n            if (i !== 0){\r\n                rete = {...base};\r\n                rete.pt = (LEdgePoint.singleton as LEdgePoint).get_endPoint(undefined as any, rete.size, rete.view);\r\n                rete.pt = getAnchorOffset(rete.size, rete.view.edgeStartOffset, rete.view.edgeStartOffset_isPercentage);\r\n            }\r\n            if (i !== allNodes.length - 1){\r\n                rets = {...base};\r\n                rets.pt = (LEdgePoint.singleton as LEdgePoint).get_startPoint(undefined as any, rets.size, rets.view);\r\n                rets.pt = getAnchorOffset(rets.size, rets.view.edgeStartOffset, rets.view.edgeStartOffset_isPercentage);\r\n            }\r\n            // ret.pt = ge.startPoint\r\n            return rets && rete ? [rete, rets] : (rets ? [rets] : [rete as segmentmaker]); }\r\n        );\r\n        return all;\r\n    }\r\n    private get_points(allNodes: LGraphElement[], outer: boolean = false): segmentmaker[]{ return this.get_points_impl(allNodes, outer); }\r\n    private get_points_outer(allNodes: LGraphElement[]): segmentmaker[]{ return this.get_points_impl(allNodes, true); }\r\n    private get_points_inner(allNodes: LGraphElement[]): segmentmaker[]{ return this.get_points_impl(allNodes, false); }\r\n    public d!: string;\r\n    public __info_of__d: Info = {type: ShortAttribETypes.EString, txt:\"the full suggested path of SVG path \\\"d\\\" attribute, merging all segments.\"}\r\n    public get_d(c: Context) {\r\n        return this.get_segments(c).all.map(s => s.d).join(\" \");\r\n    }/*\r\n    private get_fillingSegments(c: Context): Partial<this[\"segments\"]> {\r\n        return this.get_segments(c).fillers;\r\n    }*/\r\n\r\n\r\n    public get_segments(c:Context): this[\"segments\"] { return this.get_segments_outer(c); }\r\n    public get_segments_outer(c:Context): this[\"segments\"] { return this.get_segments_impl(c, true); }\r\n    public get_segments_inner(c: Context): this[\"segments\"] { return this.get_segments_impl(c, false); }\r\n    private get_segments_impl(c: Context, outer: boolean): this[\"segments\"] {\r\n        let l = c.proxyObject;\r\n        let v = this.get_view(c);\r\n        let allNodes = l.allNodes;\r\n        windoww.edge = l;\r\n        let all: segmentmaker[] = this.get_points(allNodes, outer);\r\n        //const all: {size: GraphSize, view: LViewElement, ge: LGraphElement}[] = allNodes.map((ge) => { return { view: ge.view, size: ge.size, ge}});\r\n        let ret: EdgeSegment[] = [];\r\n        let bm: EdgeBendingMode = v.bendingMode;\r\n        let gapMode: EdgeGapMode = v.edgeGapMode;\r\n        console.log(\"vbm\", {bm, v, vraw:v.__raw});\r\n        let segmentSize = this.svgLetterSize(bm, false, true);\r\n        let increase: number = segmentSize.first;\r\n        let segment: EdgeSegment | undefined;\r\n        /// grouping points according to SvgLetter\r\n        for (let i = 0; i < all.length - 1; ) {\r\n            // let start = all[i], end = all[i+increase];\r\n            let start: segmentmaker = all[i];\r\n            let endindex = (i+increase < all.length - 1) ? i+increase : all.length - 1;\r\n            let mid: segmentmaker[] = all.slice(i+1, endindex).filter( (e, i)=> i % 2 === 0);\r\n            let end: segmentmaker = all[endindex];\r\n            // makes sure the edge actually reaches his target even if there is an invalid amount of midnodes fot the current EdgeBendingMode\r\n            if (i === endindex && segment) start = segment.end;\r\n            // segment = this.get_segmentv3(start, mid, end, getSvgLetter(i), i, segment, all);\r\n            segment = new EdgeSegment(start, mid, end, bm, gapMode, i, segment);\r\n            // segment = this.get_segment(start.ge, start.size, start.view, end.ge, end.size, end.view, cut, v.bendingMode, mid, ret[ret.length -1], fillMode, segment);\r\n            ret.push(segment);\r\n            i+= increase+1; // because increase index is already inserted at the end of prev segment\r\n            if (increase !== segmentSize.others) increase = segmentSize.others;\r\n            // if (longestLabel !== undefined && longest < s.length) { longest = s.length; longestindex = i; } todo: move to after snapping to borders\r\n        }\r\n        let fillSegments: EdgeSegment[] = [];\r\n        this.snapSegmentsToNodeBorders(c, v, ret, fillSegments);\r\n        let longestLabel = c.data.longestLabel;\r\n        this.setLabels(c, ret, allNodes, longestLabel);\r\n        // console.log(\"getSegments() labeled:\", {main:ret, fillSegments});\r\n        let rett: this[\"segments\"] = {all: [...ret, ...fillSegments], segments: ret, fillers: fillSegments} as any;\r\n        for (let i = 0; i < rett.all.length; i++) {\r\n            let s = rett.all[i];\r\n            s.makeD(i, gapMode);\r\n        }\r\n        let zoom = new GraphPoint(1, 1);\r\n        rett.head = this.headPos_impl(c, true, v.edgeHeadSize, rett.segments[rett.segments.length - 1], zoom);\r\n        rett.tail = this.headPos_impl(c, false, v.edgeTailSize, rett.segments[0], zoom);\r\n        return rett;\r\n    }\r\n    private setLabels(c: Context, segments: EdgeSegment[], allNodes: this[\"allNodes\"], longestLabel: D[\"longestLabel\"]): void {\r\n        // find longest segment\r\n        let longestindex = -1;\r\n        let longest = 0;\r\n        for (let i = 0; i < segments.length; i++) {\r\n            let s = segments[i];\r\n            s.calcLength();\r\n            if (longestLabel !== undefined && longest < s.length) { longest = s.length; longestindex = i; }\r\n        }\r\n        if (longestindex>=0) segments[longestindex].isLongest = true;\r\n        // apply labels\r\n        for (let s of segments) s.label = this.get_label_impl(c, s, allNodes, segments);\r\n    }\r\n\r\n    private snapSegmentsToNodeBorders(c: Context, v: LViewElement, ret: EdgeSegment[], fillSegments: EdgeSegment[]){\r\n        // snap segment start and end to a node border\r\n        let canCutStart: boolean = v.edgeStartStopAtBoundaries,\r\n            canCutEnd: boolean = v.edgeEndStopAtBoundaries;\r\n        let grid: GraphPoint | undefined = undefined;\r\n        // let fillSegments: EdgeSegment[] = [];\r\n        let gapMode: EdgeGapMode = v.edgeGapMode;\r\n        let bm: EdgeBendingMode = v.bendingMode;\r\n\r\n\r\n        let ci: GraphPoint | undefined;\r\n        // cut i === 0 is cut regardless of gapmode.\r\n        if (canCutStart) {\r\n            ci = GraphSize.closestIntersection(ret[0].start.size, ret[0].start.pt, (ret[0].bezier[0] || ret[0].end).pt, grid);\r\n            if (ci)  ret[0].start.pt = ci;\r\n            /*\r\n            ret[0].start.pt =\r\n                GraphSize.closestIntersection(ret[0].start.size, ret[0].start.pt, (ret[0].bezier[0] || ret[0].end).pt, grid) as any\r\n                || Geom.closestPoint(ret[0].start.size, ret[0].start.pt);*/\r\n        }\r\n\r\n        // cut middle segments maybe\r\n        let prev: EdgeSegment;\r\n        let curr: EdgeSegment = ret[0];\r\n        if (canCutStart || canCutEnd) // do the for below\r\n            for (let i = 1; i < ret.length; i++){\r\n                prev = ret[i-1];\r\n                curr = ret[i];\r\n                let doStartCut: boolean, doEndCut: boolean;\r\n                switch(gapMode){\r\n                    case EdgeGapMode.arcFill:\r\n                    case EdgeGapMode.lineFill:\r\n                    case EdgeGapMode.autoFill:\r\n                        // same as gap, but will insert 1 more segment to fill the hole\r\n                        doStartCut = true;\r\n                        doEndCut = true;\r\n                        if (prev.end.pt.equals(curr.start.pt)) break;\r\n                        fillSegments.push(new EdgeFillSegment(\r\n                            prev.end,\r\n                            [\r\n                                {...prev.end, pt: EdgeSegment.invertLastBezierPt(prev.end.pt, (prev.bezier[prev.bezier.length-1] || prev.start).pt)},\r\n                                {...curr.start, pt: EdgeSegment.invertLastBezierPt(curr.start.pt, (curr.bezier[0] || curr.end).pt)}\r\n                            ],\r\n                            curr.start,\r\n                            bm, gapMode, 0, undefined));\r\n                            /*\r\n                            fillSegments.push(new FillEdgeSegment( // M <start_gap> C <bez1> <bez2> <end_gap>\r\n                               // <start_gap> = end of last seg (start of gap) <end_gap> = first of curr seg (end of gap)\r\n                            prev.end.pt,\r\n                            EdgeSegment.invertLastBezierPt(prev.end.pt, prev.bezier[prev.bezier.length-1].pt || prev.start.pt),\r\n                            EdgeSegment.invertLastBezierPt(curr.start.pt, curr.bezier[0].pt || curr.end.pt),\r\n                            curr.start.pt)\r\n                            */\r\n                        break;\r\n                    case EdgeGapMode.gap:\r\n                        // just snap to vertex edge         prevSegment.endp and ret.startp\r\n                        doStartCut = true;\r\n                        doEndCut = true;\r\n                        break;\r\n                    // average: todo: maybe rename in join (merges start-end at closest pt to both (avg), then snap on edge)\r\n                    case EdgeGapMode.average:\r\n                        // first move to average of the 2 points in the gap, then snap to edge\r\n                        doEndCut = true; doStartCut = true;\r\n                        // indipendent from cutStart, cutEnd.\r\n                        // they merge if just 1 of cutting sides are true. (and if they are both false we don't even enter the for loop)\r\n                        curr.start.pt.add(prev.end.pt, false).divide(2, false);\r\n                        prev.end.pt = curr.start.pt.duplicate() // intentionally not the same pt because during snap to edge they can temporarly diverge.again,\r\n                        break;\r\n                    // center: first move it to center of edgePoint/node, then snap to edge.\r\n                    // this mode might be as well deleted, it can be specified with anchor points\r\n                    case EdgeGapMode.center:\r\n                        doEndCut = true; doStartCut = true;\r\n                        curr.start.pt = curr.start.size.tl().add(curr.start.size.br(), false).divide(2, false);\r\n                        prev.end.pt = curr.start.pt.duplicate(); // intentionally not the same pt because during snap to edge they can diverge.again,\r\n                        break;\r\n                    default:\r\n                        return Log.exDevv(\"unexpected EdgeGapMode:\" + gapMode);\r\n                }\r\n                if (canCutStart && doStartCut){\r\n                    let extpt: GraphPoint = (curr.bezier[0] || curr.end).pt;\r\n                    ci = GraphSize.closestIntersection(curr.start.size, curr.start.pt, extpt, grid);\r\n                    if (ci) curr.start.pt = ci;// || Geom.closestPoint(curr.start.size, curr.start.pt);\r\n                    //if (gapMode === EdgeGapMode.average && prev) { prev.end.pt = curr.start.pt.add(prev.end.pt, false).divide(2, false); }\r\n                }\r\n                if (canCutEnd && doEndCut && prev){\r\n                    let prevpt: GraphPoint = (prev.bezier[prev.bezier.length-1] || prev.start).pt;\r\n                    ci = GraphSize.closestIntersection(prev.end.size, prev.end.pt, prevpt, grid);\r\n                    if (ci) prev.end.pt = ci;// || Geom.closestPoint(prev.end.size, prev.end.pt);\r\n                    // if average: first do average between start anchor points non-snapped. then i snap both,\r\n                    // then i do average again, and since it might snap out, i get closestPoint to EdgePoint size\r\n                    if (gapMode === EdgeGapMode.average) prev.end.pt = curr.start.pt =\r\n                        Geom.closestPoint(curr.start.size, curr.start.pt.add(prev.end.pt, false).divide(2, false));\r\n                }\r\n            }\r\n        // cut end of last segment regardless of gapMode\r\n        if (canCutEnd) {\r\n            let prevendpt = curr.end.pt;\r\n            ci = GraphSize.closestIntersection(curr.end.size, curr.end.pt, (curr.bezier[curr.bezier.length-1] || curr.start).pt, grid);\r\n            if (ci) curr.end.pt = ci; //|| Geom.closestPoint(prev.end.size, prev.end.pt);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    get_edgeEnd(context: Context){ return this.get_edgeEnd_outer(context); }\r\n    get_edgeEnd_outer(c: Context){\r\n        // return this.get_outerGraph(c).translateSize(this.get_edgeEnd_inner(c), this.get_innerGraph(c));\r\n        return this.get_outerGraph(c).translateSize(this.get_edgeEnd_inner(c), this.get_end(c).innerGraph);\r\n    }\r\n    get_edgeEnd_inner(c: Context){\r\n        return this.get_edgeStartEnd_inner(c, false);\r\n        // return context.proxyObject.end?.size || new GraphPoint(0, 0);\r\n    }\r\n\r\n\r\n    protected get_midnodes(context: Context): this[\"midnodes\"] {\r\n        // return LPointerTargetable.wrapAll(context.data.midnodes);\r\n        return LPointerTargetable.wrapAll(context.data.subElements);\r\n    }\r\n    protected set_midnodes(val: D[\"midnodes\"], context: Context): boolean {\r\n        return SetFieldAction.new(context.data.id, \"midnodes\", val, '', true);\r\n    }\r\n    protected get_start(context: Context): this[\"start\"] { return LPointerTargetable.from(context.data.start); }\r\n    protected get_end(context: Context): this[\"end\"] { return LPointerTargetable.from(context.data.end); }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DGraphElement, DVoidEdge);\r\nRuntimeAccessibleClass.set_extend(LGraphElement, LVoidEdge);\r\n@RuntimeAccessible\r\nexport class DEdge extends DVoidEdge { // DVoidEdge\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    id!: Pointer<DEdge, 1, 1, LEdge>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    state: DMap = {} as any;\r\n    start!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    end!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    __isDEdge!: true;\r\n    __isDVoidEdge!: true;\r\n    midnodes!: Pointer<DEdgePoint, 1, 1, LEdgePoint>[];\r\n\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LEdge<Context extends LogicContext<DEdge> = any, D extends DEdge = DEdge> extends LVoidEdge {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    __raw!: DEdge;\r\n    id!: Pointer<DEdge, 1, 1, LEdge>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn!: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    state!: LMap;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    midnodes!: LEdgePoint[];\r\n    __isLEdge!: true;\r\n    __isLVoidEdge!: true;\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DVoidEdge, DEdge);\r\nRuntimeAccessibleClass.set_extend(LVoidEdge, LEdge);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DExtEdge extends DEdge { // etends DEdge\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    id!: Pointer<DExtEdge, 1, 1, LExtEdge>;\r\n    graph!: Pointer<DGraph, 1, 1, LGraph>;\r\n    model!: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // containedIn!: Pointer<DGraphElement, 0, 1, LGraphElement>;\r\n    subElements!: Pointer<DGraphElement, 0, 'N', LGraphElement>;\r\n    state: DMap = {} as any;\r\n    start!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    end!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    __isDExtEdge!: true;\r\n    __isDEdge!: true;\r\n    __isDVoidEdge!: true;\r\n    /*\r\n        public static new(model: DGraph[\"model\"], parentNodeID: DGraphElement[\"father\"], graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"], size?: GraphSize): DExtEdge {\r\n            return new Constructors(new DExtEdge('dwc')).DPointerTargetable().DGraphElement(model, parentNodeID, graphID, nodeID)\r\n                .DVoidEdge().DEdge().DExtEdge().end();\r\n        }*/\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LExtEdge extends LEdge{\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LGraphElement;\r\n    // static logic: typeof LGraphElement;\r\n    // static structure: typeof DGraphElement;\r\n    __raw!: DExtEdge;\r\n    id!: Pointer<DExtEdge, 1, 1, LExtEdge>;\r\n    graph!: LGraph;\r\n    model?: LModelElement;\r\n    isSelected!: Dictionary<DocString<Pointer<DUser>>, boolean>;\r\n    // containedIn!: LGraphElement;\r\n    subElements!: LGraphElement[];\r\n    state!: LMap;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    __isLExtEdge!: true;\r\n    __isLEdge!: true;\r\n    __isLVoidEdge!: true;\r\n}\r\nRuntimeAccessibleClass.set_extend(DEdge, DExtEdge);\r\nRuntimeAccessibleClass.set_extend(LEdge, LExtEdge);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DRefEdge extends DEdge { // extends DEdge\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    start!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    end!: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    __isDRefEdge!: true;\r\n    /*\r\n        public static new(model: DGraph[\"model\"], parentNodeID: DGraphElement[\"father\"], graphID: DGraphElement[\"graph\"], nodeID?: DGraphElement[\"id\"]): DRefEdge {\r\n            return new Constructors(new DRefEdge('dwc')).DPointerTargetable().DGraphElement(model, parentNodeID, graphID, nodeID)\r\n                .DVoidEdge().DEdge().DRefEdge().end();\r\n        }*/\r\n\r\n}\r\n@RuntimeAccessible\r\nexport class LRefEdge extends LEdge {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // __raw!: DRefEdge;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    __isLRefEdge!: true;\r\n}\r\nRuntimeAccessibleClass.set_extend(DEdge, DRefEdge);\r\nRuntimeAccessibleClass.set_extend(LEdge, LRefEdge);\r\n// for edges without a modelling element\r\n\r\n\r\n/*\r\n\r\nlet a = `DExtEdge, DRefEdge, DVoidEdge, LGraphVertex, LRefEdge, LEdgePoint, DVoidVertex, DGraphVertex, DEdgePoint,\r\n DVertex, DEdge, LVertex, LGraph, DGraph, LVoidVertex, LVoidEdge, LEdge, LGraphElement, LExtEdge, DGraphElement`;\r\n  // // ... get from export in index.ts\r\na = a.replaceAll(',,', \",\")\r\nlet aa = a.split(\",\").map(a => a.trim().substring(1));\r\n\r\nfunction onlyUnique(value, index, self) { return self.indexOf(value) === index; }\r\n\r\naa = aa.filter(onlyUnique).filter( a=> !!a)\r\nlet r = aa.filter(onlyUnique).filter( a=> !!a).map( a=> `export type W${a} = getWParams<L${a}, D${a}>;`).join('\\n')\r\ndocument.body.innerText = r;\r\n*/\r\nexport type WExtEdge = getWParams<LExtEdge, DExtEdge>;\r\nexport type WRefEdge = getWParams<LRefEdge, DRefEdge>;\r\nexport type WVoidEdge = getWParams<LVoidEdge, DVoidEdge>;\r\nexport type WGraphVertex = any; // getWParams<LGraphVertex, DGraphVertex>;\r\nexport type WEdgePoint = getWParams<LEdgePoint, DEdgePoint>;\r\nexport type WVoidVertex = getWParams<LVoidVertex, DVoidVertex>;\r\nexport type WVertex = getWParams<LVertex, DVertex>;\r\nexport type WEdge = getWParams<LEdge, DEdge>;\r\nexport type WGraph = getWParams<LGraph, DGraph>;\r\nexport type WGraphElement = getWParams<LGraphElement, DGraphElement>;\r\n\r\nconsole.warn('ts loading graphDataElement');\r\n","import {\r\n    Constructor,\r\n    Constructors,\r\n    DPointerTargetable, DViewElement, GraphSize,\r\n    LPointerTargetable, LViewElement,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass\r\n} from \"../../joiner\";\r\n\r\n\r\n@RuntimeAccessible\r\nexport class DViewPoint extends DViewElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n\r\n    id!: Pointer<DViewPoint, 1, 1, LViewPoint>;\r\n    name!: string;\r\n\r\n\r\n    public static new(name: string, jsxString: string, defaultVSize?: GraphSize, usageDeclarations: string = '', constants: string = '',\r\n                      preRenderFunc: string = '', appliableToClasses: string[] = [], oclApplyCondition: string = '', priority: number = 1 , persist: boolean = false): DViewElement {\r\n        return new Constructors(new DViewPoint('dwc'), undefined, persist, undefined).DPointerTargetable()\r\n            .DViewElement(name, jsxString, defaultVSize, usageDeclarations, constants,\r\n                preRenderFunc, appliableToClasses, oclApplyCondition, priority).DViewPoint().end();\r\n    }\r\n    public static new2(name: string, jsxString: string, callback?: (d:DViewElement)=>void, persist: boolean = true): DViewElement {\r\n        return new Constructors(new DViewElement('dwc'), undefined, persist, undefined)\r\n            .DPointerTargetable().DViewElement(name, jsxString).DViewPoint().end(callback);\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LViewPoint extends LViewElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    //public __raw!: DViewPoint;\r\n    id!: Pointer<DViewPoint, 1, 1, LViewPoint>;\r\n    name!: string;\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DViewPoint);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LViewPoint);\r\n","import {\r\n    Constructors,\r\n    CoordinateMode,\r\n    CreateElementAction,\r\n    DAttribute,\r\n    DClass,\r\n    DClassifier,\r\n    DEdgePoint,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DExtEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    Dictionary,\r\n    DLog,\r\n    DModel,\r\n    DModelElement,\r\n    DObject,\r\n    DOperation,\r\n    DPackage,\r\n    DParameter,\r\n    DPointerTargetable,\r\n    DRefEdge,\r\n    DReference,\r\n    DUser,\r\n    DValue,\r\n    DVertex,\r\n    DViewElement,\r\n    DViewPoint,\r\n    DVoidEdge,\r\n    EdgeBendingMode,\r\n    EdgeHead,\r\n    GObject,\r\n    GraphPoint,\r\n    GraphSize,\r\n    LAttribute,\r\n    LClass,\r\n    LClassifier,\r\n    LEdgePoint,\r\n    LEnumerator,\r\n    LEnumLiteral,\r\n    LExtEdge,\r\n    LGraph,\r\n    LGraphElement,\r\n    LGraphVertex,\r\n    LLog,\r\n    LModel,\r\n    LModelElement,\r\n    LObject,\r\n    LogicContext,\r\n    LOperation,\r\n    LPackage,\r\n    LParameter,\r\n    LPointerTargetable,\r\n    LRefEdge,\r\n    LReference,\r\n    LUser,\r\n    LValue,\r\n    LVertex,\r\n    LViewElement,\r\n    LViewPoint,\r\n    Pointer,\r\n    Pointers,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetRootFieldAction,\r\n    ShortAttribETypes,\r\n    store,\r\n} from '../joiner';\r\n\r\nimport React from \"react\";\r\nimport {DV} from \"../common/DV\";\r\nimport LeaderLine from \"leader-line-new\";\r\n\r\nconsole.warn('ts loading store');\r\n\r\n// @RuntimeAccessible\r\n// NB: le voci che iniziano con '_' sono personali e non condivise\r\n\r\n\r\nexport interface EdgeOptions{\r\n    id: number,\r\n    options: LeaderLine.Options,\r\n    source: string,\r\n    target: string\r\n}\r\n\r\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\r\nexport const statehistory: {\r\n        [userpointer:Pointer<DUser>]: {undoable:GObject<\"delta\">[], redoable: GObject<\"delta\">[]}\r\n} & {\r\n    globalcanundostate: boolean // set to true at first user click }\r\n} = { globalcanundostate: false} as any;\r\nstatehistory[DUser.current] = {undoable:[], redoable:[]}; // todo: make it able to combine last 2 changes with a keystroke. reapeat N times to combine N actions. let it \"redo\" multiple times, it's like recording a macro.\r\n\r\n(window as any).statehistory = statehistory;\r\n@RuntimeAccessible\r\nexport class DState extends DPointerTargetable{\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static new(): DState {\r\n        return new Constructors(new DState('dwc'), undefined, false, undefined).DPointerTargetable().DState().end();\r\n    }\r\n\r\n    debug: boolean = false;\r\n    logs: Pointer<DLog, 0, 'N', LLog> = [];\r\n    models: Pointer<DModel, 0, 'N'> = []; // Pointer<DModel, 0, 'N'>[] = [];\r\n    currentUser!: DUser;\r\n\r\n    viewelements: Pointer<DViewElement, 0, 'N', LViewElement> = [];\r\n    stackViews: Pointer<DViewElement, 0, 'N', LViewElement> = [];\r\n\r\n    // users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\r\n    // collaborators: UserState[];\r\n    idlookup: Record<Pointer<DPointerTargetable, 1, 1>, DPointerTargetable> = {};\r\n\r\n    //// DClass section to fill\r\n    graphs: Pointer<DGraph, 0, 'N', LGraph> = [];\r\n    voidvertexs: Pointer<DGraphVertex, 0, 'N', LGraphVertex> = [];\r\n    vertexs: Pointer<DVertex, 0, 'N', LVertex> = [];\r\n    graphvertexs: Pointer<DGraphVertex, 0, 'N', LGraphVertex> = [];\r\n\r\n    edgepoints: Pointer<DEdgePoint, 0, 'N', LEdgePoint> = [];\r\n    //my addon\r\n    extEdges: Pointer<DExtEdge, 0, \"N\", LExtEdge> = [];\r\n    refEdges: Pointer<DRefEdge, 0, \"N\", LRefEdge> = [];\r\n\r\n    classifiers: Pointer<DClassifier, 0, 'N', LClassifier> = [];\r\n    enumerators: Pointer<DEnumerator, 0, 'N', LEnumerator> = [];\r\n    packages: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    primitiveTypes: Pointer<DClass, 0, \"N\", LClass> = [];\r\n    attributes: Pointer<DAttribute, 0, \"N\", LAttribute> = [];\r\n    enumliterals: Pointer<DEnumLiteral, 0, \"N\", LEnumLiteral> = [];\r\n    references: Pointer<DReference, 0, \"N\", LReference> = [];\r\n    classs: Pointer<DClass, 0, \"N\", LClass> = [];\r\n    operations: Pointer<DOperation, 0, \"N\", LOperation> = [];\r\n    parameters: Pointer<DParameter, 0, \"N\", LParameter> = [];\r\n    returnTypes: Pointer<DClass, 0, \"N\", LClass> = [];\r\n    /// DClass section end\r\n\r\n    isEdgePending: { user: Pointer<DUser, 1, 1, LUser>, source: Pointer<DClass, 1, 1, LClass> } = {\r\n        user: '',\r\n        source: ''\r\n    };\r\n\r\n    contextMenu: { display: boolean, x: number, y: number } = {display: false, x: 0, y: 0};\r\n\r\n    //dragging: {random: number, id: string} = { random: 0, id: \"\" }; fix\r\n    edges: EdgeOptions[] = [];  // delete\r\n\r\n    deleted: string[] = [];\r\n\r\n    objects: Pointer<DObject, 0, 'N', LObject> = [];\r\n    values: Pointer<DValue, 0, 'N', LValue> = [];\r\n\r\n    // private, non-shared fields\r\n    _lastSelected?: {\r\n        node: Pointer<DGraphElement, 1, 1>,\r\n        view: Pointer<DViewElement, 1, 1>,\r\n        modelElement: Pointer<DModelElement, 0, 1> // if a node is clicked: a node and a view are present, a modelElement might be. a node can exist without a modelElement counterpart.\r\n    };\r\n    users!: Pointer<DUser, 1, 'N', LUser>;\r\n\r\n    viewpoint: Pointer<DViewPoint, 1, 1, LViewPoint> = '';\r\n    viewpoints: Pointer<DViewPoint, 0, 'N', LViewPoint> = [];\r\n\r\n    m2models: Pointer<DModel, 0, 'N', LModel> = [];\r\n    m1models: Pointer<DModel, 0, 'N', LModel> = [];\r\n\r\n    room: string = '';\r\n    isCleaning: boolean = false;    // check if a room is being cleaned\r\n\r\n    selected: Dictionary<Pointer<DUser>, Pointer<DModelElement, 0, 1, LModelElement>> = {};\r\n    iot: null|boolean = null;\r\n    topics: string[] = [];\r\n\r\n    memorec: GObject[]|null = null;\r\n\r\n\r\n    static fakeinit(store?: DState): void {\r\n        // const graphDefaultViews: DViewElement[] = makeDefaultGraphViews();\r\n        // for (let graphDefaultView of graphDefaultViews) { CreateElementAction.new(graphDefaultView); }\r\n\r\n        const viewpoint = DViewPoint.new('Default', '');\r\n        viewpoint.id = 'Pointer_DefaultViewPoint';\r\n        CreateElementAction.new(viewpoint);\r\n        SetRootFieldAction.new('viewpoint', viewpoint.id, '', true);\r\n\r\n        const views: DViewElement[] = makeDefaultGraphViews();\r\n        for (let view of views) {\r\n            view.id = 'Pointer_View' + view.name;\r\n            view.viewpoint = 'Pointer_DefaultViewPoint';\r\n            CreateElementAction.new(view);\r\n        }\r\n\r\n        for (let primitiveType of Object.values(ShortAttribETypes)) {\r\n            let dPrimitiveType;\r\n            if (primitiveType === ShortAttribETypes.void) continue; // or make void too without primitiveType = true, but with returnType = true?\r\n            else {\r\n                dPrimitiveType = DClass.new(primitiveType, false, false, true, false, '', undefined, false);\r\n                dPrimitiveType.id = 'Pointer_' + dPrimitiveType.name.toUpperCase();\r\n                CreateElementAction.new(dPrimitiveType);\r\n            }\r\n            SetRootFieldAction.new('primitiveTypes', dPrimitiveType.id, '+=', true);\r\n        }\r\n\r\n        /*\r\n        const returnTypes = [\"void\", \"undefined\", \"null\"]; // rimosso undefined dovrebbe essere come void (in ShortAttribEtypes, null è ritornato solo dalle funzioni che normalmente ritornano qualche DObject, quindi tipizzato con quel DObject\r\n        for (let returnType of returnTypes) {\r\n            const dReturnType = DClass.new(returnType);\r\n            CreateElementAction.new(dReturnType);\r\n            SetRootFieldAction.new(\"returnTypes\", dReturnType.id, '+=', true);\r\n        }\r\n        */\r\n\r\n    }\r\n}\r\n\r\nfunction makeDefaultGraphViews(): DViewElement[] {\r\n\r\n    let modelView: DViewElement = DViewElement.new('Model', DV.modelView(), undefined, '', '', '', [DModel.name]);\r\n    // modelView.draggable = false; modelView.resizable = false; already guaranteed by <Graph />\r\n\r\n    let packageView: DViewElement = DViewElement.new('Package', DV.packageView(), undefined, '', '', '', [DPackage.name]);\r\n    packageView.defaultVSize = new GraphSize(0, 0, 400, 500);\r\n    packageView.preRenderFunc = \"() => { return {pname: this.data.name+\\\"pre\\\"}; }\"\r\n\r\n    let classView: DViewElement = DViewElement.new('Class', DV.classView(), undefined, '', '', '', [DClass.name]);\r\n    classView.adaptWidth = true;\r\n    classView.adaptHeight = true;\r\n\r\n    let enumView: DViewElement = DViewElement.new('Enum', DV.enumeratorView(), undefined, '', '', '', [DEnumerator.name]);\r\n    enumView.adaptWidth = true;\r\n    enumView.adaptHeight = true;\r\n\r\n    let attributeView: DViewElement = DViewElement.new('Attribute', DV.attributeView(), undefined, '', '', '', [DAttribute.name]);\r\n    // attributeView.zIndex = 0;\r\n    let referenceView: DViewElement = DViewElement.new('Reference', DV.referenceView(), undefined, '', '', '', [DReference.name]);\r\n    // referenceView.zIndex = 10;\r\n\r\n    let operationView: DViewElement = DViewElement.new('Operation', DV.operationView(), undefined, '', '', '', [DOperation.name]);\r\n\r\n    let literalView: DViewElement = DViewElement.new('Literal', DV.literalView(), undefined, '', '', '', [DEnumLiteral.name]);\r\n\r\n    let objectView: DViewElement = DViewElement.new('Object', DV.objectView(), undefined, '', '', '', [DObject.name]);\r\n    objectView.adaptWidth = true;\r\n    objectView.adaptHeight = true;\r\n    let voidView: DViewElement = DViewElement.new('Void', DV.voidView(), undefined, '', '', '', [DObject.name]);\r\n    voidView.appliableToClasses=[\"VoidVertex\"];\r\n    voidView.explicitApplicationPriority=2;\r\n    voidView.adaptWidth = true;\r\n    voidView.adaptHeight = true;\r\n\r\n    let edgePointView: DViewElement = DViewElement.new('EdgePoint', DV.edgePointView(), new GraphSize(0, 0, 30, 30), '', '', '', []);\r\n    let edgePointViewSVG: DViewElement = DViewElement.new('EdgePointSVG', DV.edgePointViewSVG(), new GraphSize(0, 0, 10, 10), '', '', '', []);\r\n    edgePointView.edgePointCoordMode = CoordinateMode.relativePercent;\r\n\r\n    let edgeViews: DViewElement[] = [];\r\n    let size0: GraphPoint = new GraphPoint(0, 0), size1: GraphPoint = new GraphPoint(20, 20), size2: GraphPoint = new GraphPoint(20, 20); // todo: riportalo in 40,20\r\n    let edgePreRenderFunc: string = `()=>({\r\n            segments: this.edge.segments,\r\n            strokeColor: \"gray\",\r\n            strokeWidth: \"2px\",\r\n            strokeColorHover: \"black\",\r\n            strokeColorLong: \"red\",\r\n            strokeLengthLimit: 300,\r\n            strokeWidthHover: \"4px\",\r\n        })`;\r\n    function makeEdgeView(name: string, type: EdgeHead, headSize: GraphPoint | undefined, tailSize: GraphPoint | undefined, dashing: boolean): DViewElement{\r\n        let ev = DViewElement.new2(\"Edge\"+name, DV.edgeView(type,\r\n                headSize ? DV.svgHeadTail(\"Head\", type) : \"\", tailSize ? DV.svgHeadTail(\"Tail\", type) : \"\", dashing ? \"10.5,9,0,0\" : undefined),\r\n            (v: DViewElement) => {\r\n                v.explicitApplicationPriority = 2;\r\n                v.bendingMode = EdgeBendingMode.Line;\r\n                v.appliableToClasses = [DVoidEdge.name];\r\n                v.edgeHeadSize = headSize || size0;\r\n                v.edgeTailSize = tailSize || size0;\r\n                v.preRenderFunc = edgePreRenderFunc;\r\n        }, false);\r\n        edgeViews.push(ev);\r\n        return ev;\r\n    }\r\n\r\n    makeEdgeView(\"Association\", EdgeHead.reference,             size1,   undefined,  false);\r\n    makeEdgeView(\"Dependency\",  EdgeHead.reference,             size1,   undefined,  true);\r\n    makeEdgeView(\"Inheritance\", EdgeHead.extend,                size1,   undefined,  false);\r\n    makeEdgeView(\"Dependency\",  EdgeHead.extend,                size1,   undefined,  true);\r\n    makeEdgeView(\"Aggregation\", EdgeHead.aggregation,   undefined,      size2,      false);\r\n    makeEdgeView(\"Composition\", EdgeHead.composition,   undefined,      size2,      false);\r\n\r\n    // edgeView.forceNodeType=\"Edge\"\r\n\r\n    /*\r\n    for (let ev of edgeViews){\r\n        ev.explicitApplicationPriority = 2;\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/\r\n    // nb: Error is not a view, just jsx. transform it in a view so users can edit it\r\n\r\n    let valueView: DViewElement = DViewElement.new('Value', DV.valueView(), undefined, '', '', '', [DValue.name]);\r\n\r\n    const defaultPackage: DViewElement = DViewElement.new('DefaultPackage', DV.defaultPackage());\r\n    defaultPackage.query = `context DPackage inv: self.name = 'todo default pkg'`;\r\n\r\n    return [modelView, packageView, classView, enumView, attributeView, referenceView, operationView, literalView, objectView, valueView, defaultPackage, voidView, ...edgeViews, edgePointView, edgePointViewSVG];\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class ViewPointState extends DPointerTargetable{\r\n    name: string = '';\r\n}\r\n\r\n// todo: ogni entità ha: dati (store), logica con operazioni, dati di presentazione, ...?\r\n\r\n@RuntimeAccessible\r\nexport class ModelStore {\r\n    private _meta!: ModelStore | string; // todo: credo sia un Pointer? roba vecchia. oldcomment: // string memorizzata nello store, logicamente si comporta come una reference perchè usi la stringa per recuperare un modelstore (il tipo modelstore è di documentazione)\r\n    instances!: (ModelStore | string)[];\r\n\r\n    // todo: figata! getter e setter senza proxy??\r\n    get meta(): ModelStore | string {\r\n        return this._meta;\r\n    }\r\n\r\n    set meta(value: ModelStore | string) {\r\n        this._meta = value;\r\n    }\r\n}\r\n\r\n\r\n\r\n@RuntimeAccessible\r\nexport class LState<Context extends LogicContext<DState> = any, C extends Context = Context, D extends DState = DState> extends LPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DPointerTargetable & DState;\r\n    public static structure: typeof DPointerTargetable;\r\n    public static singleton: LPointerTargetable;\r\n    // return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\r\n    static get<T2 extends typeof RuntimeAccessibleClass & { logic?: typeof LPointerTargetable | undefined; }>(): T2 & LState { return LState.wrap(store.getState() as any) as any; }\r\n    contextMenu!: {display: boolean, x: number, y: number};\r\n    currentUser!: LUser;\r\n    debug!: boolean;\r\n    room!: string;\r\n    _lastSelected?: {modelElement?: LModelElement, node?: LGraphElement, view?: LViewElement};\r\n    idlookup!:Dictionary<Pointer, DPointerTargetable>;\r\n\r\n    get_contextMenu(c: Context): this[\"contextMenu\"] { return c.data.contextMenu; }\r\n    get_currentUser(c: Context): this[\"currentUser\"] { return LState.wrap(c.data.currentUser) as LUser; }\r\n    get_debug(c: Context): this[\"debug\"] { return c.data.debug; }\r\n    get_room(c: Context): this[\"room\"] { return c.data.room; }\r\n    get_idlookup(c: Context): this[\"idlookup\"] { return c.data.idlookup; }\r\n    get__lastSelected(c: Context): this[\"_lastSelected\"] {\r\n        let ls = c.data._lastSelected;\r\n        return ls && {modelElement: LState.wrap(ls.modelElement), node: LState.wrap(ls.node), view: LState.wrap(ls.view)}; }\r\n\r\n    _defaultCollectionGetter(c: Context, k: keyof DState): LPointerTargetable[] { return LPointerTargetable.fromPointer(c.data[k] as any); }\r\n    _defaultGetter(c: Context, k: keyof DState) {\r\n        //console.log(\"default Getter\");\r\n        let v = c.data[k];\r\n        if (Array.isArray(v)) {\r\n            if (v.length === 0) return [];\r\n            else if (Pointers.isPointer(v[0] as any)) return this._defaultCollectionGetter(c, k);\r\n            return v;\r\n        }\r\n        return v;\r\n    }\r\n}\r\n\r\n// console.error(\"dpt\" +DPointerTargetable, DPointerTargetable);\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DState);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LState);\r\n\r\n","import type {U as UType} from '../../joiner';\r\nimport {\r\n    Action,\r\n    CompositeAction,\r\n    CreateElementAction,\r\n    DeleteElementAction,\r\n    Dictionary,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DState,\r\n    Log,\r\n    MyError,\r\n    ParsedAction,\r\n    Pointer,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    LPointerTargetable,\r\n    store,\r\n    getPath,\r\n    Selectors,\r\n    PointedBy,\r\n    PendingPointedByPaths,\r\n    statehistory, DUser, GObject\r\n} from \"../../joiner\";\r\nimport React from \"react\";\r\nimport {CombineHistoryAction, LoadAction, RedoAction, UndoAction} from \"../action/action\";\r\nimport {Firebase} from \"../../firebase\";\r\nimport TreeModel from 'tree-model';\r\n\r\nlet windoww = window as any;\r\nlet U: typeof UType = windoww.U;\r\n\r\nfunction deepCopyButOnlyFollowingPath(oldStateDoNotModify: DState, action: ParsedAction, prevAction: ParsedAction, newVal: any): DState {\r\n    let newRoot: DState = {...oldStateDoNotModify} as DState;\r\n    let current: any = newRoot;\r\n    if (!action.path?.length) throw new MyError(\"path length must be at least 1\", {action});\r\n    let gotChanged: boolean = false; // dovrebbe cambiare sempre, se non cambia non lancio neanche l'azione e non faccio la shallow copy, ma non si sa mai, così posso evitare un render se succede l' \"insuccedibile\"\r\n    let alreadyPastDivergencePoint = false; // true dal momento in cui il path dell'azione attuale e della azione precedente divergono, false fino al sotto-segmento in cui combaciano\r\n    // console.log('deepCopyButOnlyFollowingPath', arguments);\r\n    for (let i = 0; i < action.pathArray.length; i++) {\r\n        let key = action.pathArray[i].trim();\r\n        let prevActionPathKey = prevAction?.pathArray[i];\r\n        // middle execution: not on final loop\r\n        // console.log('deepCopyButOnlyFollowingPath', {current, i, imax:action.pathArray.length, key, gotChanged, alreadyPastDivergencePoint});\r\n        if (i !== action.pathArray.length - 1) {\r\n            if (alreadyPastDivergencePoint || key !== prevActionPathKey) {\r\n                // se l'oggetto è stato già duplicato in una azione composita, non lo duplico 2 volte.\r\n                alreadyPastDivergencePoint = true;\r\n                current[key] = Array.isArray(current[key]) ? [...current[key]] : {...current[key]};\r\n                current[key].clonedCounter = 1 + (current[key].clonedCounter || 0);\r\n            }\r\n            current = current[key];\r\n            continue; }\r\n\r\n        // perform final assignment\r\n        if (i >= action.pathArray.length - 1) {\r\n            let isArrayAppend = false;\r\n            let isArrayRemove = false;\r\n            // console.log('isarrayappend?', {endswith: U.endsWith(key, ['+=', '[]', '-1']), key, action, i});\r\n            // console.log('isarraydelete?', {endswith: U.endsWith(key, ['-='])});\r\n            if (U.endsWith(key, ['+=', '[]'])) {\r\n                key = key.substr(0, key.length - 2).trim();\r\n                isArrayAppend = true; }\r\n            if (U.endsWith(key, ['-='])) {\r\n                key = key.substr(0, key.length - 2).trim();\r\n                isArrayRemove = true; }\r\n\r\n            let oldValue: any;\r\n            let unpointedElement: DPointerTargetable | undefined;\r\n            // perform final assignment\r\n            if (isArrayAppend) {\r\n                gotChanged = true;\r\n                if (!Array.isArray(current[key])) { current[key] = []; }\r\n                oldValue = [...current[key]];\r\n                current[key] = [...current[key]];\r\n                current[key].push(newVal);\r\n                unpointedElement = undefined;\r\n                if (action.isPointer) { newRoot = PointedBy.add(newVal as Pointer, action, newRoot, \"+=\"); }\r\n            } else\r\n            if (isArrayRemove){\r\n                if (!Array.isArray(current[key])) { current[key] = []; }\r\n                oldValue = [...current[key]];\r\n                let index = U.isNumber(newVal) ? +newVal : -1;\r\n                if (index === -1) index = current[key].length - 1;\r\n                gotChanged = index >=0 && index < current[key].length;\r\n                if (gotChanged){\r\n                    current[key] = [...current[key]];\r\n                    let removedval = current[key].splice(index, 1); // in-place edit\r\n                    if (action.isPointer) { newRoot = PointedBy.remove(removedval as Pointer, action, newRoot, '-='); }\r\n\r\n                    /// a.pointsto = [x, y, z]; a.pointsto = [x, z]       --->    remove a from y.pointedby\r\n                    /*\r\n                    const elementsThatChangedIndex: DPointerTargetable[] = current[key].slice(index);\r\n                    todo: problema: se ho [dobj1, dobj2]... e li swappo, cambia un indice nel percorso \"pointedby\" e non me ne accorgo mai e un oggetto risulta \"pointedby\" da oggetti che non lo puntano o non esistono più a quell'indice\r\n                    for (let j = 0; j < elementsThatChangedIndex.length; j++) {\r\n                        let newindex = index + j - 1;\r\n                        let oldFullpathTrimmed = action.pathArray.join('.');\r\n                        se realizzi \"pointedby\" qui è to do: remove old paths and re-add them with updated index\r\n                    }*/\r\n                    //unpointedElement = newRoot.idlookup[oldValue];\r\n                }\r\n            }\r\n            else if (current[key] !== newVal) {\r\n                // todo: caso in cui setto manualmente classes.1 = pointer; // the latest element is array and not DPointerTargetable, so might need to buffer upper level in the tree? or instead of \"current\" keep an array of sub-objects encountered navigating the path in state.\r\n                oldValue = current[key];\r\n                gotChanged = true;\r\n                unpointedElement = newRoot.idlookup[oldValue];\r\n                // NB: se elimino un oggetto che contiene array di puntatori, o resetto l'array di puntatori kinda like store.arr= [ptr1, ptr2, ...]; store.arr = [];\r\n                // i puntati dall'array hanno i loro pointedBY non aggiornati, non voglio fare un deep check di tutto l'oggetto a cercare puntatori per efficienza.\r\n                if (newVal === undefined) delete current[key];\r\n                else current[key] = newVal;\r\n\r\n                if (action.isPointer) {\r\n                    if (Array.isArray(action.value)) {\r\n                        let oldpointerdestinations: Pointer[] = oldValue;\r\n                        let difference = U.arrayDifference(oldpointerdestinations, current[key]); // : {added: Pointer[], removed: Pointer[], starting: Pointer[], final: Pointer[]}\r\n                        for (let rem of difference.removed) { newRoot = PointedBy.remove(rem as Pointer, action, newRoot); }\r\n                        for (let add of difference.added) { newRoot = PointedBy.add(add as Pointer, action, newRoot); }\r\n                        // a.pointsto = [a, b, c];  a.pointsto = [a, b, x];    ------>     c.pointedby.remove(a) & x.pointedby.add(a)\r\n                        // idlookup.somelongid.pointsto = [...b];\r\n                    }\r\n                    else {\r\n                        // a.pointsto = b;  a.pointsto = c;    ------>     b.pointedby.remove(a)\r\n                        newRoot = PointedBy.remove(oldValue as Pointer, action, newRoot);\r\n                        newRoot = PointedBy.add(current[key] as Pointer, action, newRoot);\r\n                    }\r\n                }\r\n            } else {\r\n                gotChanged = false;\r\n                // value not changed\r\n            }\r\n\r\n            let fullpathTrimmed = action.pathArray.join('.');\r\n            /*if (unpointedElement) {\r\n                if (isArrayAppend || isArrayAppend) fullpathTrimmed.substr(0, fullpathTrimmed.length - 2);\r\n                U.arrayRemoveAll(unpointedElement.pointedBy, fullpathTrimmed); // todo: se faccio una insert in mezzo ad un array devo aggiustare tutti i path di pointedby...\r\n            }\r\n            let newlyPointedElement = newRoot.idlookup[newVal];\r\n            if (newlyPointedElement) {\r\n                U.ArrayAdd(newlyPointedElement.pointedBy, fullpathTrimmed);\r\n            }*/\r\n            // console.log('deepCopyButOnlyFollowingPath final', {current, i, imax:action.pathArray.length, key, isArrayAppend, gotChanged, alreadyPastDivergencePoint});\r\n            break;\r\n        }\r\n        Log.exDevv('should not reach here: reducer');\r\n    }\r\n    return gotChanged ? newRoot : oldStateDoNotModify;\r\n}\r\n\r\n\r\n// const pendingPointedByPaths: {from: DocString<\"Path in store\">, field: DocString<\"keyof object found in from path\">, to: Pointer}[] = [];\r\nfunction CompositeActionReducer(oldState: DState, actionBatch: CompositeAction): DState {\r\n    // per via di thunk se arrivo qui lo stato cambia sicuro in mono-client non synchro (non ri-assegno valori equivalenti)\r\n    // todo: ma se arrivano in ordine sbagliato da altri client? posso permetterlo?\r\n    let actions: ParsedAction[];\r\n    if (actionBatch.actions) actions = Action.parse(actionBatch.actions);\r\n    else actions = [Action.parse(actionBatch)]; // else-case is if it's a single action and not an actual compositeaction\r\n    if (PendingPointedByPaths.all.length) actions.push(...PendingPointedByPaths.getSolveableActions(oldState)); //.all.map( p=> p.resolve() ) );\r\n\r\n    Action.possibleInconsistencies = {};\r\n\r\n    // estraggo le azioni derivate\r\n    let derivedActions: ParsedAction[] = [];\r\n    for (let action of actions) {\r\n        switch (action.type){\r\n            default: break;\r\n            case LoadAction.type: return action.value;\r\n            case CreateElementAction.type:\r\n                const elem: DPointerTargetable = action.value;\r\n\r\n                if (oldState.idlookup[elem.id]) {\r\n                console.error(\"rejected CreateElementAction, roolback occurring:\", {action, elem:{...elem},\r\n                    preexistingValue: {...oldState.idlookup[elem.id]}, isEqual: elem === oldState.idlookup[elem.id] });\r\n                    return oldState;\r\n                    /*\r\n                    action.value = \"An element with that id already existed.\";\r\n                    action.path = action.field = \"CreateActionRejected\";\r\n                    action.className = SetRootFieldAction.name;\r\n                    action.type = SetRootFieldAction.type;\r\n                    action.pathArray = [action.path]; //a\r\n                    action.isPointer = false;\r\n                    // just to log it in undo-redo action list and have a feedback*/\r\n                    break;\r\n                }\r\n                elem.className = elem.className || elem.constructor.name;\r\n                let statefoldername = elem.className.substring(1).toLowerCase() + 's';\r\n                derivedActions.push(\r\n                    Action.parse(SetRootFieldAction.create(statefoldername, elem.id,'[]', true)));\r\n                if (!Array.isArray(elem.pointedBy)) elem.pointedBy = [];\r\n                elem.pointedBy.push(PointedBy.new(statefoldername));\r\n                /*if (false && action.isPointer) {\r\n                    if (Array.isArray(action.value)) {\r\n                        const ptr: Pointer[] = action.value;\r\n                        // todo but replaced by side actions in execution of the main action instead of triggering derived actions\r\n                    }\r\n                    else {\r\n                        const ptr: Pointer = action.value;\r\n                        const target: DPointerTargetable | null = oldState.idlookup[ptr];\r\n                        let pendingPointedBy = PendingPointedByPaths.new(action, oldState);\r\n                        if (!target) PendingPointedByPaths.new(action, oldState).saveForLater(); // {from: action.path, field: action.field, to: target});\r\n                        // @ts-ignore\r\n                        else derivedActions.push(pendingPointedBy.resolve());\r\n                        // a -> x\r\n                        // a -> y     unset x.pointedby(a)\r\n                    }\r\n                }*/\r\n                break;\r\n        }\r\n    }\r\n    // console.error({U, Umip:U.arrayMergeInPlace, WU: windoww.U, WUmip: windoww.U.arrayMergeInPlace});\r\n    actions = U.arrayMergeInPlace<ParsedAction>(actions, derivedActions);\r\n\r\n    // ordino i path con segmenti comuni\r\n    actions = actions.sort( (a1, a2) => U.stringCompare(a1.path, a2.path));\r\n\r\n    // destrutturo solo i nodi intermedi e solo la prima volta che li incontro (richiede le azioni ordinate in base al path)\r\n    let newState = oldState;\r\n    for (let i = 0; i < actions.length; i++) {\r\n        const prevAction: ParsedAction = actions[i-1];\r\n        const action: ParsedAction = actions[i];\r\n        const actiontype = action.type.indexOf('@@') === 0 ? 'redux' : action.type;\r\n        console.log('executing action:', {a:action, t:actiontype, field: action.field, v:action.value}); //, count: ++action.executionCount});\r\n\r\n        switch (actiontype) {\r\n            /*\r\n            case '@@redux/INIT6.x.f.d.r.e':\r\n            case '@@redux/INITm.f.1.s.o.g':\r\n            case '@@redux/INIT5.t.4.v.d.o':\r\n            case '@@redux/INITy.a.d.r.l.a':\r\n            case '@@redux/INIT4.2.q.u.z.k':\r\n            case '@@redux/INITj.8.e.g.y.p':\r\n            case '@@redux/INITp.k.q.g.z.w':\r\n            case '@@redux/INITq.c.u.w.f.e': ... etc*/\r\n            default:\r\n                if (action.type.indexOf('@@redux/') === 0) break;\r\n                return Log.exDevv('unexpected action type:', action.type);\r\n            case CreateElementAction.type:\r\n            case SetRootFieldAction.type:\r\n            case DeleteElementAction.type:\r\n            case SetFieldAction.type:\r\n                newState = deepCopyButOnlyFollowingPath(newState, action, prevAction, action.value);\r\n                break;\r\n        }\r\n\r\n        // and that's all, the reducer is really simple as actions are really simple.\r\n    }\r\n\r\n    // effetti collaterali, aggiornamento di ridondanze\r\n    newState = updateRedundancies_OBSOLETE(newState, oldState, Action.possibleInconsistencies);\r\n    return newState;\r\n}\r\n\r\nfunction updateRedundancies_OBSOLETE(state: DState, oldState:DState, possibleInconsistencies: Dictionary<DocString<'subtype'>, (Pointer | DPointerTargetable)[]>): DState {\r\n    for (let subType in possibleInconsistencies)\r\n    switch (subType) {\r\n        default: break;\r\n        case Action.SubType.vertexSubElements:/*\r\n            risolto triggrerando più azioni da LGraphElement setter\r\n            let dvertexid: Pointer, newdvertex: DGraphElement, olddvertex: DGraphElement;\r\n            for (newdvertex of possibleInconsistencies[subType] as DGraphElement[]){\r\n                const olddvertex: DGraphElement = oldState.idlookup[newdvertex.id] as DGraphElement;\r\n                const notContainedAnymoreOut: Pointer<DGraphElement> = [];\r\n                const newlyInsertedOut: Pointer<DGraphElement>[] = [];\r\n                U.arraySymmetricDifference(olddvertex.subElements, newdvertex.subElements, notContainedAnymoreOut, newlyInsertedOut);\r\n                for (let geid of notContainedAnymoreOut) {\r\n                    const oldge = oldState.idlookup[geid] as DGraphElement;\r\n                    const newge = state.idlookup[geid] as DGraphElement;\r\n                    if (oldge.containedIn === newge.containedIn) continue;\r\n                }\r\n                for (let geid of notContainedAnymoreOut) {\r\n                    const ge = idlookup[geid] as DGraphElement;\r\n                    if (ge.containedIn === context.data.id) set container = context.data.id\r\n                    meglio se sti 2 cicli li fai nel reducer perchè  potrebbe esserci una azione pending che setta il parent = someotherid e qui faccio partire una azione che setta il parent a null, \"annullando\" una azione pending non ancora eseguita\r\n                }\r\n            }\r\n            break;*/\r\n    }\r\n    // if state is updated shallow copy state before returning it\r\n    return state;\r\n}\r\n\r\nlet initialState: DState = null as any;\r\nlet storeLoaded: boolean = false;\r\n\r\nexport function reducer(oldState: DState = initialState, action: Action): DState {\r\n    const ret = _reducer(oldState, action);\r\n    if(ret === oldState) return oldState;\r\n    if(!oldState?.room) return ret;\r\n    // action.sender === DUser.current\r\n    const ignoredFields = ['contextMenu', '_lastSelected', 'isCleaning'];\r\n    if(action.token === DUser.token && !ignoredFields.includes(action.field)) {\r\n        const parsedAction: JSON = JSON.parse(JSON.stringify(action));\r\n        Firebase.addAction(ret.room, parsedAction).then();\r\n    }\r\n    return ret;\r\n\r\n}\r\n\r\nexport function _reducer/*<S extends StateNoFunc, A extends Action>*/(oldState: DState = initialState, action: Action): DState{\r\n    let times: number;\r\n    let state: DState;\r\n    switch(action.type) {\r\n        case UndoAction.type:\r\n            times = action.value;\r\n            state = oldState;\r\n            Log.exDev(times<=0, \"undo must be positive\", action);\r\n            while (times--) {\r\n                state = undo(state, statehistory[DUser.current].undoable.pop());\r\n            }\r\n            return state;\r\n\r\n        case RedoAction.type:\r\n            times = action.value;\r\n            state = oldState;\r\n            Log.exDev(times<=0, \"redo must be positive\", action);\r\n            while (times--) {\r\n                state = undo(state, statehistory[DUser.current].redoable.pop(), false);\r\n            }\r\n            return state;\r\n        // case CombineHistoryAction.type: return combineHistory(oldState); break;\r\n        // todo: se al posto di \"annullare l'undo\" memorizzo l'azione e la rieseguo, posso ripetere l'ultimo passo N volte e questa azione diventa utile per combinare passi e ripetere blocchi di azioni assieme\r\n        default:\r\n            let ret = doreducer(oldState, action);\r\n            if (ret === oldState) return ret;\r\n            statehistory[DUser.current].redoable = [];\r\n            let delta =  U.objectDelta(ret, oldState);\r\n            if (!filterundoableactions(delta)) return ret;\r\n            // console.log(\"setting undoable action:\", {ret, oldState0:{...oldState}, oldState, delta});\r\n            if (oldState !== null) statehistory[DUser.current].undoable.push(delta);\r\n            return ret;\r\n    }\r\n}\r\n\r\nfunction filterundoableactions(delta: Partial<DState>): boolean {\r\n    if (!statehistory.globalcanundostate) return false;\r\n    if (Object.keys(delta).length === 1 && \"dragging\" in delta) return false;\r\n    if (Object.keys(delta).length === 1 && \"_lastSelected\" in delta) return false;\r\n    if (Object.keys(delta).length === 1 && \"contextMenu\" in delta) return false;\r\n    return true;\r\n}\r\nfunction undo(state: DState, delta: GObject | undefined, isundo = true): DState {\r\n    if (!delta) return state;\r\n    let undonestate: DState = {...state} as DState;\r\n    //   controlla se vengono shallow-copied solo e tutti gli oggetti nested lungo la catena del percorso delle modifiche\r\n    //   es: root.a.b.c=3 + root.a.b.d=3 = 4+1 modifiche, 5 shallow copies including the root\r\n    undorecursive(delta, undonestate);\r\n    if (isundo) statehistory[DUser.current].redoable.push( U.objectDelta(undonestate, state) ); // reverses from undo to redo and viceversa swapping arguments, so the target result after appliying the delta changes\r\n    else statehistory[DUser.current].undoable.push( U.objectDelta(undonestate, state) ); // redo is \"undoing an undo\", reversing his changes just like an undo reverses an ordinary action changes.\r\n    return undonestate;\r\n}\r\n\r\nfunction undorecursive(deltalevel: GObject, statelevel: GObject): void {\r\n    // statelevel = {...statelevel}; not working if i do it here, just a new var. first time copy id done in caller func undo(). recursive copies are done before recursive step\r\n    for (let key in deltalevel) {\r\n        let delta = deltalevel[key];\r\n        console.log(\"undoing\", {delta, key, deltalevel, statelevel})\r\n        if (key.indexOf(\"_-\") === 0) { delete statelevel[key.substring(2)]; continue; }\r\n        if (typeof delta === \"object\") {\r\n        // if (U.isObject(delta, false, false, true)) {\r\n            statelevel[key] = {...statelevel[key]};\r\n            undorecursive(deltalevel[key], statelevel[key]); }\r\n        else { statelevel[key] = delta; }\r\n    }\r\n}\r\n\r\nfunction doreducer/*<S extends StateNoFunc, A extends Action>*/(oldState: DState = initialState, action: Action): DState{\r\n    if (!oldState) { oldState = initialState = DState.new(); }\r\n    let ca: CompositeAction;\r\n    // console.log('external REDUCER', {action, CEtype:CreateElementAction.type});\r\n    if (!storeLoaded) {\r\n        // new SetRootFieldAction('forceinit', true);\r\n        storeLoaded = true;\r\n    }\r\n    if (!(oldState as any).forceinit) {\r\n        // afterStoreLoad();\r\n        // new SetRootFieldAction('forceinit', true);\r\n    } //  setTimeout(afterStoreLoad, 1);\r\n    switch (action.type) {\r\n        case CompositeAction.type: ca = action as CompositeAction; break;\r\n        case LoadAction.type:\r\n        default:\r\n            if (action.type.indexOf('@@redux/') === 0) {\r\n                //storeLoaded = true;\r\n                return oldState;\r\n            }\r\n            ca = new CompositeAction([action], false);\r\n            break;\r\n    }\r\n    let ret = CompositeActionReducer(oldState, ca);\r\n    /*if (state.current !== ret) {\r\n        state.current = ret;\r\n        state.past.push(ret);\r\n    }*/\r\n    return ret;\r\n}\r\nfunction setSubclasses(dict:Dictionary<string, typeof RuntimeAccessibleClass>){\r\n\r\n    let tree = new TreeModel({\r\n        childrenPropertyName: \"subclasses\"\r\n    });\r\n    for (let key in dict){\r\n        let constructor = dict[key];\r\n        if(!constructor.hasOwnProperty(\"subclasses\")) constructor.subclasses = [];\r\n    }\r\n    RuntimeAccessibleClass.extendTree = (tree as any).safe_parse(RuntimeAccessibleClass);\r\n\r\n}\r\nwindoww.TreeModel = TreeModel;\r\nfunction buildLSingletons(alld: Dictionary<string, typeof DPointerTargetable>, alll: Dictionary<string, typeof LPointerTargetable>) {\r\n    for (let dname in alld) {\r\n        switch (dname) {\r\n            case \"DeleteElementAction\": continue;\r\n            case \"DV\": continue;\r\n            default: break;\r\n        }\r\n        let tagless = dname.substring(1);\r\n        let d = alld[dname];\r\n        let l = alll['L'+tagless];\r\n        d.logic = l;\r\n        if (!l) console.error('lllllllll', l, d);\r\n        // @ts-ignore\r\n        d.singleton = new l('dwc');\r\n        d.structure = d;\r\n\r\n        l.logic = d.logic;\r\n        l.singleton = d.singleton;\r\n        l.structure = d.structure;\r\n\r\n        // if (!d.subclasses) d.subclasses = [];\r\n        // @ts-ignore\r\n        // for (let sc of d.subclasses) { if (!sc[\"_extends\"]) sc[\"_extends\"] = [];  sc[\"_extends\"].push(d); }\r\n    }\r\n}\r\n\r\nexport function jodelInit() {\r\n    RuntimeAccessibleClass.fixStatics();\r\n\r\n    let dClasses: string[] = RuntimeAccessibleClass.getAllNames().filter( rc => rc[0] === 'D');\r\n    let lClasses: string[] = RuntimeAccessibleClass.getAllNames().filter( rc => rc[0] === 'L');\r\n    let dClassesmap: Dictionary<string, typeof DPointerTargetable> = dClasses.reduce((acc: any,curr)=> (acc[curr] = RuntimeAccessibleClass.get(curr), acc),{});\r\n    let lClassesmap: Dictionary<string, typeof LPointerTargetable> = lClasses.reduce((acc: any,curr)=> (acc[curr] = RuntimeAccessibleClass.get(curr), acc),{});\r\n    buildLSingletons(dClassesmap, lClassesmap);\r\n    setSubclasses(dClassesmap);\r\n    setSubclasses(lClassesmap);\r\n\r\n\r\n    windoww.defaultContext = {$: windoww.$, getPath, React: React, Selectors, ...RuntimeAccessibleClass.getAllClassesDictionary(), ...windoww.Components};\r\n\r\n    /*for (let dclassname of dClasses) {\r\n        const dclass = RuntimeAccessibleClass.get(dclassname) as typeof DPointerTargetable;\r\n        const lclass = RuntimeAccessibleClass.get('L' + dclassname.substr(1)) as typeof LPointerTargetable;\r\n        dclass.logic = lclass;\r\n        console.log('EXecute on read set singletons:', {dclass, lclass});\r\n        if (!lclass) continue;\r\n        lclass.singleton = new lclass();\r\n        lclass.structure = dclass;\r\n    }*/\r\n\r\n    DState.fakeinit();\r\n//    setTimeout( () => createOrOpenModelTab('m3'), 1);\r\n    // GraphDragHandler.init();\r\n\r\n}\r\n\r\n// ideally launched before component render, verify it. maybe move the callback to <App> component mounting\r\nfunction afterStoreLoad() {\r\n    jodelInit();\r\n}\r\n","import {createStore, Store} from \"redux\";\r\nimport {Action, DState, reducer, windoww} from \"../joiner\";\r\n\r\ninterface StateExt{}\r\nexport let store: Store<DState & StateExt, Action> = createStore(reducer);\r\n\r\nwindoww.store = store;\r\nwindoww.s = store.getState;\r\n\r\n// console.log('store:', {store, wstore: windoww.store, state: U.cloneObj(store.getState())});\r\n","// @ts-nocheck\r\nexport class Debug {\r\n    // counts how many times each node is rendered in a component.\r\n    static getComponentMap(){\r\n        let nodes = Object.values(window.GraphElementComponent.all).map(a=>a.props.node).filter(a=>!!a);\r\n        let nodeids = [...new Set(nodes.map(a=>a.id).filter(a=>!!a))]\r\n        let allids = {};\r\n        for (let o of nodeids) allids[o] = 0;\r\n        for (let n of nodes) allids[n?.id]++;\r\n        allids.nodes = nodeids;\r\n        allids.components = Object.values(window.GraphElementComponent.all);\r\n        return allids; }\r\n    static timeoutTasks(){}\r\n    static largeTimeoutTasks(){\r\n        window.model = window.LPointerTargetable.wrap(s().model?.[0]);\r\n    }\r\n\r\n}\r\n\r\nsetTimeout(Debug.timeoutTasks, 500);\r\nsetTimeout(Debug.largeTimeoutTasks, 5000);\r\nwindow.Debug = Debug;\r\n","import {OclEngine} from \"@stekoe/ocl.js\"\r\nimport {Constructor, GObject, RuntimeAccessible} from \"../joiner\";\r\nimport {OclResult} from \"@stekoe/ocl.js/dist/components/OclResult\";\r\n\r\nlet windoww = window as any;\r\n\r\nexport class Company {\r\n    static all: Company[] = [];\r\n    constructor(public name: string ='cname', public employee: Persona[]=[], public manager: Persona|null = null) { Company.all.push(this); }\r\n}\r\n@RuntimeAccessible\r\nexport class Persona {\r\n    static all: Persona[] = [];\r\n    constructor(public name: string='pname', public age: number=18, public isUnemployed: boolean=true){ Persona.all.push(this) }\r\n}\r\n\r\nexport class OCL{\r\n    public static evaluate<T extends GObject>(obj0: T, constructor: Constructor<T>, oclexp: string, typeused: Constructor[]=[], oclEngine?: OclEngine): OclResult {\r\n        if (!oclEngine) {\r\n            oclEngine = OclEngine.create();\r\n            var oclResult = null;\r\n            // let objexp = //\"context Object inv: self.age > 0\" +\r\n            if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n\r\n\r\n            const typeregister: GObject = {};\r\n            typeregister[constructor.name] = constructor;\r\n            for (let type of typeused) { typeregister[type.name] = type; }\r\n            oclEngine.registerTypes(typeregister);\r\n            oclEngine.addOclExpression(oclexp);\r\n        }\r\n\r\n        let obj: GObject = obj0;\r\n        if (!obj) {\r\n            obj = new Persona();\r\n            obj.age = -55;\r\n            obj.name = {notEmpty: () => { console.log('innerfunc'); return true} };\r\n            obj.f = (a:any) => { console.error('called a', a); return a>0};\r\n            obj.name0= '';\r\n//obj.$$typeof = Persona;\r\n\r\n            obj.__asArray = true;\r\n        }\r\n        // as you set classname in runtimeaccessible you must set this typeName\r\n        // obj.typeName = constructor.name || constructor;\r\n// obj = getPath;\r\n// obj.constructor = Persona;\r\n        oclResult = oclEngine.evaluate(obj);\r\n        return oclResult;\r\n    }\r\n\r\n    public static filter<T extends GObject>(keepIndex: boolean, returnType: 'ocl' | 'bool' | 'src', obj0: T[], oclexp: string, typeused: Constructor[]=[]) {\r\n        var oclEngine = OclEngine.create();\r\n        var oclResult = null;\r\n        const typeregister: GObject = {};\r\n        for (let type of typeused) { typeregister[type.name] = type; }\r\n        oclEngine.registerTypes(typeregister);\r\n        if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n        oclEngine.addOclExpression(oclexp);\r\n\r\n        let obj: GObject[] = obj0;\r\n        let ret: ((OclResult | boolean) | (GObject | null))[] = [];\r\n\r\n        for (let i = 0; i < obj.length; i++) {\r\n            let res: OclResult | null;\r\n            try { res = oclEngine.evaluate(obj[i]); }\r\n            catch(e) { console.error('failed to evalute object:', {e}); res = null; }\r\n            if (returnType === 'ocl') {\r\n                ret[i] = res;\r\n                continue; }\r\n            let bool = res && res.getEvaluatedContexts().length > 0 && res.getResult();\r\n            if (returnType === 'bool') ret[i] = bool;\r\n            else ret[i] = bool ? obj[i] : null;\r\n        }\r\n\r\n        if (!keepIndex) {\r\n            ret = (ret).filter((r:any) => !!r) as any;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n}\r\nwindoww.OCL = OCL;\r\nconst oclEngine = OclEngine.create();\r\n\r\n\r\n/*\r\n\r\nlet p = new Persona();\r\np.age = 0;\r\nlet p2 = new Persona();\r\np2.age = 1;\r\nlet p3 = new Persona();\r\np3.age = -5;\r\nlet pp = [p, p2, p3];\r\nOCL.filter(true, 'ocl', pp, undefined, \"context Persona inv: self.age>0\")\r\n\r\n\r\n///\r\n\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.abstract\")\r\n/// works\r\nlet pp = Selectors.getAll(DClass, undefined, undefined, true);\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.name = \\\"class_2\\\"\")\r\n\r\n* */\r\n\r\noclEngine.addOclExpression(`\r\n    -- No one should work that long...\r\n    context Company inv:\r\n        self.employee->forAll(p : Person | p.age <= 65 )\r\n\r\n    -- If a company has a manager, \r\n    -- the company has at least one employee.\r\n    context Company\r\n        inv: self.manager.isUnemployed = false\r\n        inv: self.employee->notEmpty()\r\n`);\r\n\r\nlet company = new Company();\r\ncompany.employee.push(new Persona());\r\n\r\nconst oclResult = oclEngine.evaluate(company);\r\n\r\n\r\n\r\nwindoww.Person = Persona;\r\nwindoww.Company = Company;\r\nwindoww.oclEngine = oclEngine;\r\n\r\nconsole.log('tests:', '\\n' +\r\n    'oclEngine.addOclExpression(`\\n' +\r\n    '    -- No one should work that long...\\n' +\r\n    '    context Company inv:\\n' +\r\n    '        self.employee->forAll(p : Person | p.age <= 65 )\\n' +\r\n    '\\n' +\r\n    '    -- If a company has a manager, \\n' +\r\n    '    -- the company has at least one employee.\\n' +\r\n    '    context Company\\n' +\r\n    '        inv: self.manager.isUnemployed = false\\n' +\r\n    '        inv: self.employee->notEmpty()\\n' +\r\n    '`);\\n' +\r\n    '\\n' +\r\n    'const customTypes = {\\n' +\r\n    '  \"Person\": Person, \"Company\": Company \\n' +\r\n    '}\\n' +\r\n    '\\n' +\r\n    'oclEngine.registerTypes(customTypes);' +\r\n    'let company = new Company();\\n' +\r\n    'let employee = new Person();\\n' +\r\n    'let parent = new Person();\\n' +\r\n    'let child = new Person();\\n' +\r\n    'child.parents = [parent];\\n' +\r\n    'parent.parents = [parent];\\n' +\r\n    'employee.age = 70;\\n' +\r\n    'company.employee.push(employee);\\n' +\r\n    '\\n' +\r\n    'console.log(\\'evaluate company\\', oclEngine.evaluate(company));\\n' +\r\n    '\\n' +\r\n    '\\n' +\r\n    '// parentchild test\\n' +\r\n    'let oclEnginep = OclEngine.create();\\n' +\r\n    'oclEnginep.addOclExpression(`\\n' +\r\n    '    context Person\\n' +\r\n    '        inv: self.parents->forAll(p | p <> self)\\n' +\r\n    '`)\\n' +\r\n    'console.log(\\'evaluate parent\\', oclEnginep.evaluate(parent));\\n' +\r\n    'console.log(\\'evaluate child\\', oclEnginep.evaluate(child));\\n');\r\n","import {jodelInit, windoww} from \"../joiner\";\r\nimport * as Componentss from '../joiner/components';\r\n\r\n\r\n/*\r\nlet pairs = [\r\n    [DAnnotation, LAnnotation],\r\n    [DModelElement, LModelElement],\r\n    [DAttribute, LAttribute],\r\n    [DClass, LClass],\r\n    [DClassifier, LClassifier],\r\n    [DEnumerator, LEnumerator],\r\n    [DEnumLiteral, LEnumLiteral],\r\n    [DModel, LModel],\r\n    [DObject, LObject],\r\n    [DOperation, LOperation],\r\n    [DPackage, LPackage],\r\n    [DParameter, LParameter],\r\n    [DReference, LReference],\r\n    [DStructuralFeature, LStructuralFeature],\r\n    [DValue, LValue],\r\n    [DModelElementTransientProperties, LModelElementTransientProperties],\r\n    [DViewTransientProperties, LViewTransientProperties],\r\n    [DViewPrivateTransientProperties, LViewPrivateTransientProperties],\r\n    [DViewElement, LViewElement],\r\n    [DVoidVertex, LVoidVertex]\r\n    // [DMap, LMap],\r\n];\r\n*/\r\n\r\n/*for (let pair of pairs as any[]) {\r\n    pair[0].logic = pair[1];\r\n    pair[1].singleton = new pair[1]();\r\n    pair[1].structure = pair[0];\r\n    windoww[pair[0].name] = pair[0];\r\n    windoww[pair[1].name] = pair[1];\r\n}*/\r\n\r\n/*\r\nDAnnotation.logic = LAnnotation;\r\nLAnnotation.singleton = new LAnnotation();\r\n\r\nDModelElement.logic = LModelElement;\r\nLModelElement.singleton = new LModelElement();\r\nDAttribute.logic = LAttribute;\r\nLAttribute.singleton = new LAttribute();\r\nDClass.logic = LClass;\r\nDClassifier.logic = LClassifier;\r\nDEnumerator.logic = LEnumerator;\r\nDEnumLiteral.logic = LEnumLiteral;\r\nDModel.logic = LModel;\r\nDOBject.logic = LObject;\r\nDOperation.logic = LOperation;\r\nDPackage.logic = LPackage;\r\nDParameter.logic = LParameter;\r\nDReference.logic = LReference;\r\nDStructuralFeature.logic = LStructuralFeature;\r\nDValue.logic = LValue;\r\nDModelElementTransientProperties.logic = LModelElementTransientProperties;\r\n\r\nLClass.singleton = new LClass();\r\nLClassifier.singleton = new LClassifier();\r\nLEnumerator.singleton = new LEnumerator();\r\nLEnumLiteral.singleton = new LEnumLiteral();\r\nLOperation.singleton = new LOperation();\r\nLPackage.singleton = new LPackage();\r\nLParameter.singleton = new LParameter();\r\nLReference.singleton = new LReference();\r\nLStructuralFeature.singleton = new LStructuralFeature();\r\nLValue.singleton = new LValue();\r\nLModel.singleton = new LModel();\r\nLObject.singleton = new LObject();\r\nLModelElementTransientProperties.singleton = new LModelElementTransientProperties();\r\n*/\r\nexport const fakeExport = {}; // just to import-execute this file\r\n// DState.fakeinit();\r\n// Symbol.prototype.toString = function(): string { alert('symbol to string'); return String(this); }\r\n\r\nlet Components = Componentss;\r\n/*\r\nComponents.map(C=> {\r\n    if (typeof C === 'object') return\r\n})\r\nfor (let Comp of Components) {\r\n\r\n}*/\r\nlet wComponents = {...Components}\r\nfor (let key in wComponents) {\r\n    let index = key.indexOf(\"Component\")\r\n    if (index === -1) continue;\r\n    let newkey = key.substring(0, index);\r\n    if ((Components as any)[newkey]) continue;\r\n    (wComponents as any)[newkey] = (Components as any)[key];\r\n}\r\n\r\n// (Components as any)[\"input\"] = Components[\"InputComponent\"];\r\nwindoww.Components = wComponents;\r\n\r\n\r\nfunction afterStoreLoad() {\r\n    jodelInit();\r\n}\r\n\r\n// afterStoreLoad();\r\n// setTimeout( afterStoreLoad, 0);\r\n","import * as jsxtt from 'jsx-transform/lib/jsx.js';\r\nimport $$ from 'jquery';\r\nimport {ReactNode} from \"react\";\r\nimport * as _pr_json2xml from '../common/libraries/prj_json2xml.js';\r\nimport * as _pr_xml2json from '../common/libraries/prj_xml2json.js';\r\n// true imports for this file (should all be import type\r\nimport type {DocString, GObject as GObjectt} from './types';\r\nimport type {U as UType} from \"../common/U\";\r\nimport type {Selectors as SelType} from \"../redux/selectors/selectors\";\r\n\r\nexport type {Constructor, AbstractConstructor} from \"../joiner/types\";\r\nexport type {ValueDetail, SetValueAtPoisitionInfoType} from \"../model/logicWrapper/LModelElement\";\r\nvar windoww = (window as any);\r\nwindoww.windoww = windoww;\r\n\r\n\r\n// console.error('iiiiiiiiiiiiiiii 0');\r\n\r\nwindoww.$ = $$;\r\nexport const $: JQueryStatic = $$;\r\nexport const prjson2xml = _pr_json2xml;\r\nexport const prxml2json = _pr_xml2json;\r\nwindoww.prjson2xml = prjson2xml;\r\nwindoww.prxml2json = prxml2json;\r\n\r\n// import types\r\n//import {$s, GraphPoint, GraphSize, IPoint, ISize, Log, Point, Size, U} from \"../common/U\";\r\n\r\n// nb: export type è un export \"finto\" che esiste solo in compilazione per fare capire a typescript i tipi. permette export di alias con nomi diversi (l'export normale no)\r\nexport type {GetPath} from './proxy';\r\n\r\nexport type {Subtract, Class, Empty, Json, GObject, bool, Dictionary, Proxyfied, Temporary, RawObject, NotFoundv,\r\n    NotFound, DocString, nbool, nnumber, nstring, Nullable, TODO, UnixTimestamp, UObject, IsActually,\r\n    Function, Function2, InOutParam,\r\n    unArr, orArr, PrimitiveType, CClass, NonEmptyString, Overlap, Info\r\n} from \"./types\";\r\nexport type {Pointer, PtrString, getWParams, WUser, WtoD, WtoL, DtoW, LtoW, LtoD, DtoL, PackArr, Pack, Pack1 } from \"./classes\";\r\n\r\nexport type { WAnnotation, WNamedElement, WFactory_useless_, WClass, WAttribute, WClassifier, WDataType, WMap, WModel,\r\n    WModelElement, WEnumerator, WObject, WPackage, WOperation, WValue, WParameter, WReference, WTypedElement, WEnumLiteral, WStructuralFeature,\r\n} from \"../model/logicWrapper/LModelElement\";\r\nexport type {WEdge, WEdgePoint, WExtEdge, WGraph, WRefEdge, WGraphElement, WVoidEdge, WGraphVertex, WVertex, WVoidVertex, EdgeSegment, EdgeFillSegment} from \"../model/dataStructure/GraphDataElements\";\r\n\r\nexport {windoww} from './types';\r\nexport {GraphElementStatee, GraphElementDispatchProps, GraphElementReduxStateProps, GraphElementOwnProps, EdgeStateProps, EdgeOwnProps} from \"../graph/graphElement/sharedTypes/sharedTypes\";\r\nexport {EdgeBendingMode} from \"./types\";\r\nexport {Constructors, JsType, RuntimeAccessibleClass, DPointerTargetable,\r\n    LPointerTargetable, WPointerTargetable, MyError, RuntimeAccessible,\r\n    Obsolete, Leaf, Node, Abstract, Instantiable, MixOnlyFuncs,\r\n    LUser, DUser, Pointers, PointedBy, PendingPointedByPaths, CoordinateMode, EdgeHead} from \"./classes\";\r\n\r\n// export type {Pointer} from './typeconverter';\r\nexport {getPath, TargetableProxyHandler, MyProxyHandler, MapProxyHandler, LogicContext, MapLogicContext} from './proxy';\r\n// console.error('iiiiiiiiiiiiiiii 3');\r\n// import independent generic modules (only dependent from types and RuntimeAccessible\r\n\r\nexport {Uarr,  DDate, ParseNumberOrBooleanOptions, myFileReader,\r\n    Keystrokes, ShortAttribETypes, AttribETypes, FileReadTypeEnum, FocusHistoryEntry, SelectorOutput, U as UU, ShortAttribSuperTypes,\r\n    } from \"../common/U\";\r\nexport {DV} from '../common/DV';\r\nexport {Size, GraphSize, GraphPoint, IPoint, ISize, Point} from \"../common/Geom\";\r\nexport { CSSRuleSorted, CSSParser, TagNames } from \"../common/Uhtml\";\r\n// export {Log as Logg, Size, GraphSize, GraphPoint, IPoint, ISize, Point} from \"../common/Log\";\r\nexport const Log = windoww.Log;\r\nexport {UX} from \"../common/UX\";\r\nexport var U = windoww.U as typeof UType;\r\nexport {DLog} from \"../model/classes/D\";\r\nexport {LLog} from \"../model/classes/L\";\r\n// console.error('iiiiiiiiiiiiiiii 4');\r\n\r\nexport {EcoreParser} from \"../api/data\";\r\n// import domain-specific classes\r\n\r\n\r\nexport {\r\n    DModelElement,\r\n    LModelElement,\r\n    DModel, LModel,\r\n    DValue, LValue,\r\n    DNamedElement, LNamedElement,\r\n    DObject, LObject,\r\n    DEnumerator, LEnumerator,\r\n    DEnumLiteral, LEnumLiteral,\r\n    DAttribute, LAttribute,\r\n    DReference, LReference,\r\n    DStructuralFeature, LStructuralFeature,\r\n    DClassifier, LClassifier,\r\n    DDataType, LDataType,\r\n    DClass, LClass,\r\n    DParameter, LParameter,\r\n    DOperation, LOperation,\r\n    DPackage, LPackage,\r\n    DTypedElement, LTypedElement,\r\n    DAnnotation, LAnnotation,\r\n    EJavaObject,\r\n    DFactory_useless_, LFactory_useless_, DMap, LMap\r\n} from \"../model/logicWrapper/LModelElement\";\r\n\r\n// console.error('joiner here 3');\r\n/*\r\nexport {\r\n    LModelElement,\r\n    LAnnotation,\r\n    LAttribute,\r\n    LClass,\r\n    LClassifier,\r\n    LEnumerator,\r\n    LEnumLiteral, LModel,\r\n    LObject, LOperation,\r\n    LPackage, LParameter, LReference,\r\n    LStructuralFeature, LDataType, LTypedElement, LNamedElement, // DMap, LMap,\r\n    LValue,\r\n} from \"../model/logicWrapper/LModelElement\";*/\r\nexport {DExtEdge, DRefEdge, DVoidEdge, LGraphVertex, LRefEdge, LEdgePoint, DVoidVertex, DGraphVertex, DEdgePoint, DVertex, DEdge, LVertex, LGraph, DGraph, LVoidVertex, LVoidEdge, LEdge, LGraphElement, LExtEdge, DGraphElement} from \"../model/dataStructure/GraphDataElements\";\r\n\r\n\r\n\r\n// export {GraphDragHandler} from \"../graph/vertex/GraphDragHandler\";\r\n\r\n// console.error('iiiiiiiiiiiiiiii 11', windoww.DViewElement);\r\nexport type {WViewElement, WViewTransientProperties} from \"../view/viewElement/view\";\r\nexport {DViewTransientProperties, LViewTransientProperties, LViewElement, DViewElement} from \"../view/viewElement/view\";\r\nexport {DViewPoint, LViewPoint} from \"../view/viewPoint/viewpoint\";\r\n// console.error('iiiiiiiiiiiiiiii 12', windoww.DViewElement);\r\n\r\nexport {Action, CreateElementAction, DeleteElementAction, SetFieldAction, SetRootFieldAction, CompositeAction, ParsedAction, LoadAction, CombineHistoryAction, RedoAction, UndoAction, TRANSACTION, BEGIN, ABORT, END} from \"../redux/action/action\";\r\nexport {DState, LState, ModelStore, ViewPointState, statehistory} from \"../redux/store\";\r\nexport {Selectors as Selectorss} from \"../redux/selectors/selectors\";\r\nexport var Selectors = windoww.Selectors as (GObjectt & typeof SelType);\r\nexport {reducer, jodelInit} from \"../redux/reducer/reducer\";\r\nexport {store} from \"../redux/createStore\";\r\nexport {Debug} from \"../debugtools/debug\";\r\n\r\nexport {OCL} from \"../ocl/ocl\";\r\n\r\n\r\n\r\n\r\nclass JSXT_TYPE{\r\n    fromString(str: string, options?:\r\n        {   factory: string,\r\n            spreadFn?:Function,\r\n            unknownTagPattern?:string,\r\n            passUnknownTagsToFactory?:boolean,\r\n            unknownTagsAsString?:boolean,\r\n            arrayChildren?:boolean\r\n        }): DocString<ReactNode, 'compiled code as string, like React.CreateElement(...)'> { return ''; }\r\n    fromFile(path: string, options?:\r\n        {   factory: string,\r\n            spreadFn?:Function,\r\n            unknownTagPattern?:string,\r\n            passUnknownTagsToFactory?:boolean,\r\n            unknownTagsAsString?:boolean,\r\n            arrayChildren?:boolean\r\n        }): DocString<ReactNode, 'compiled code as string, like React.CreateElement(...)'> { return ''; }\r\n    browserifyTransform(...params: any): any {}\r\n    visitor: unknown = null;\r\n}\r\n\r\nexport const JSXT = jsxtt as any as JSXT_TYPE/*as {\r\n    fromString: (str: string, options?:\r\n        {   factory: string,\r\n            spreadFn?:Function,\r\n            unknownTagPattern?:string,\r\n            passUnknownTagsToFactory?:boolean,\r\n            unknownTagsAsString?:boolean,\r\n            arrayChildren?:boolean\r\n        }) =>string,\r\n    fromFile: (path: string, options?:\r\n        {   factory: string,\r\n            spreadFn?:Function,\r\n            unknownTagPattern?:string,\r\n            passUnknownTagsToFactory?:boolean,\r\n            unknownTagsAsString?:boolean,\r\n            arrayChildren?:boolean\r\n        }) =>string,\r\n    browserifyTransform: unknown | Function,\r\n    visitor: unknown\r\n}*/\r\n\r\n\r\n\r\nexport type Event = JQuery.Event;\r\nexport type EventBase = JQuery.EventBase;\r\nexport type EventHandlerBase<T1, T2> = JQuery.EventHandlerBase<T1, T2>;\r\nexport type MouseEventBase = JQuery.MouseEventBase;\r\nexport type MouseUpEvent = JQuery.MouseUpEvent;\r\nexport type ChangeEvent = JQuery.ChangeEvent;\r\nexport type ContextMenuEvent = JQuery.ContextMenuEvent;\r\nexport type ClickEvent = JQuery.ClickEvent;\r\nexport type MouseDownEvent = JQuery.MouseDownEvent;\r\nexport type BlurEvent = JQuery.BlurEvent;\r\nexport type KeyDownEvent = JQuery.KeyDownEvent;\r\nexport type KeyPressEvent = JQuery.KeyPressEvent;\r\nexport type DoubleClickEvent = JQuery.DoubleClickEvent;\r\nexport type DragEndEvent = JQuery.DragEndEvent;\r\nexport type DragEnterEvent = JQuery.DragEnterEvent;\r\nexport type DragEvent = JQuery.DragEvent;\r\nexport type DragExitEvent = JQuery.DragExitEvent;\r\nexport type DragLeaveEvent = JQuery.DragLeaveEvent;\r\nexport type DragOverEvent = JQuery.DragOverEvent;\r\nexport type DragStartEvent = JQuery.DragStartEvent;\r\nexport type DropEvent = JQuery.DropEvent;\r\nexport type FocusEvent = JQuery.FocusEvent;\r\nexport type FocusInEvent = JQuery.FocusInEvent;\r\nexport type FocusOutEvent = JQuery.FocusOutEvent;\r\nexport type FocusEventBase = JQuery.FocusEventBase;\r\n\r\n// todo: continua\r\n\r\n\r\n// window (NB: most of them should be replaced by RuntimeAccessibleClass)\r\nlet w: any = window;/*\r\nw.$ = $;\r\nw.Log = Log;\r\nw.U = U;\r\nw.Size = Size;\r\nw.ISize = ISize;\r\nw.GraphSize = GraphSize;\r\nw.Point = Point;\r\nw.IPoint = IPoint;\r\nw.GraphPoint = GraphPoint;\r\nw.$s = $s;\r\n*/\r\nexport {\r\n    TextArea, Select, Input, Image, Edge, DamEdge,\r\n    GraphsContainerComponent,\r\n    Overlap as OverlapComponent,\r\n    GraphsContainer,\r\n    GraphElement,\r\n    Vertex, VoidVertex, EdgePoint,\r\n    Graph, GraphVertex,\r\n    Field,\r\n    DefaultNode,\r\n    GraphElementComponent,\r\n    VertexComponent,\r\n    DefaultNodeComponent,\r\n    // DockLayoutComponent,\r\n    ColorScheme, Edges,\r\n    EdgeComponent,\r\n    DataOutputComponent, LoggerComponent\r\n} from './components'\r\n\r\n//export {createOrOpenModelTab} from \"../components/abstract/DockLayoutComponent\"; // needs to be after docklayoutcomponent or to split the file\r\nexport {fakeExport} from './ExecuteOnRead';\r\nconsole.info('joiner loaded');\r\nclass Joiner{\r\n    // just to help the file search\r\n}\r\n\r\n","import React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {U,\r\n    DState, DPointerTargetable, DViewElement, GObject, LPointerTargetable, LViewElement, Pointer} from \"../../../joiner\";\r\n\r\n\r\nfunction OclEditorComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = U.getDefaultViewsID().includes(view.id);\r\n\r\n    const change = (value: string|undefined) => {\r\n        if (value !== undefined) view.query = value;\r\n    }\r\n\r\n    return <div style={{height: '5em'}}>\r\n        <label className={'ms-1'}>OCL Editor</label>\r\n        <Editor className={'mx-1'} onChange={change} options={{readOnly: readOnly}}\r\n                defaultLanguage={'js'} value={view.query} />\r\n    </div>;\r\n}\r\ninterface OwnProps { viewid: Pointer<DViewElement, 1, 1, LViewElement>; }\r\ninterface StateProps { view: LViewElement }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.view = LViewElement.fromPointer(ownProps.viewid);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const OclEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(OclEditorComponent);\r\n\r\nexport const OclEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <OclEditorConnected {...{...props, children}} />;\r\n}\r\nexport default OclEditor;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 129;","import type {\r\n    DAttribute,\r\n    DClass,\r\n    DGraph,\r\n    DClassifier,\r\n    DEnumerator,\r\n    DGraphElement,\r\n    DRefEdge,\r\n    DVoidVertex,\r\n    GObject,\r\n    DState,\r\n    LClass,\r\n    LEnumerator,\r\n    LGraphElement,\r\n    LOperation,\r\n    LPackage,\r\n    LRefEdge,\r\n    LViewElement,\r\n    LVoidVertex,\r\n    Pointer,\r\n} from \"../../joiner\";\r\nimport {\r\n    AbstractConstructor,\r\n    Constructor,\r\n    LModelElement,\r\n    DModel, LModel,\r\n    DModelElement, DNamedElement, DObject,\r\n    DPointerTargetable, DValue,\r\n    DViewElement, LNamedElement, LObject,\r\n    Log,\r\n    LPointerTargetable, LValue,\r\n    MyProxyHandler, OCL,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    store,\r\n    U, windoww, Pointers, DViewPoint, LViewPoint, Dictionary, DUser\r\n} from \"../../joiner\";\r\nimport {EdgeOptions} from \"../store\";\r\n\r\nenum ViewEClassMatch { // this acts as a multiplier for explicit priority\r\n    MISMATCH = 0,\r\n    IMPLICIT_MATCH = 1,\r\n    INHERITANCE_MATCH = 2,\r\n    EXACT_MATCH = 3,\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class Selectors{\r\n\r\n    static getSelected(): Dictionary<Pointer<DUser>, Pointer<DModelElement, 0, 1, LModelElement>> {\r\n        const state = store.getState();\r\n        return state.selected;\r\n    }\r\n\r\n    static getRoom(): string {\r\n        const state = store.getState();\r\n        return state.room;\r\n    }\r\n\r\n    static getActiveModel(): null|LModel {\r\n        let metamodel: null|LModel;\r\n        let state: DState & GObject = store.getState();\r\n        const selected = state._lastSelected?.modelElement;\r\n        if(selected) {\r\n            const me = LModelElement.fromPointer(selected)\r\n            metamodel = (me) ? me.model : null;\r\n        } else metamodel = null;\r\n        return metamodel;\r\n    }\r\n\r\n    public static getLastSelectedModel<RET extends {m1?:LModel, m2?:LModel, model?:LModel, element?:LModelElement}>(state?: DState): RET {\r\n        state = state || store.getState();\r\n        let me = state._lastSelected?.modelElement;\r\n        if (!me) return {} as RET;\r\n        let ret: RET = {element: LPointerTargetable.fromPointer(me, state)} as RET;\r\n        ret.model = ret.element!.model\r\n        if (ret.model.isMetamodel) ret.m2 = ret.model;\r\n        else {\r\n            ret.m1 = ret.model;\r\n            ret.m2 = ret.m1.instanceof;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    static getAllViewElements(): DViewElement[] {\r\n        // return Object.values(store.getState().idlookup).filter(v => v.className === DViewElement.name) as DViewElement[];\r\n        let state: DState & GObject = store.getState();\r\n        const ptrs: Pointer<DViewElement, 0, 'N'> = Object.values((state).viewelements);\r\n        let views: DViewElement[] = ptrs.map<DViewElement>( (ptr) => state.idlookup[ptr] as DViewElement);\r\n        return views;\r\n    }\r\n    //Giordano: start\r\n\r\n    public static getViewpoints() : LViewPoint[] {\r\n        const state: DState & GObject = store.getState();\r\n        return LViewPoint.fromPointer(state.viewpoints);\r\n    }\r\n    public static getViewpoint() : LViewPoint  {\r\n        const state: DState & GObject = store.getState();\r\n        return LViewPoint.fromPointer(state.viewpoint);\r\n    }\r\n\r\n    public static getObjects(): LObject[] {\r\n        let state: DState & GObject = store.getState();\r\n        const ptrs: Pointer<DObject, 0, 'N'> = Object.values((state).objects);\r\n        const dObjects: DObject[] = ptrs.map<DObject>( (ptr) => state.idlookup[ptr] as DObject);\r\n        const lObjects: LObject[] = [];\r\n        for(let dObject of dObjects) {\r\n            lObjects.push(LObject.fromPointer(dObject.id));\r\n        }\r\n        return lObjects;\r\n    }\r\n    public static getValues(): LValue[] {\r\n        let state: DState & GObject = store.getState();\r\n        const ptrs: Pointer<DValue, 0, 'N'> = Object.values((state).values);\r\n        const dValues: DValue[] = ptrs.map<DValue>( (ptr) => state.idlookup[ptr] as DValue);\r\n        const lValues: LValue[] = [];\r\n        for(let dValue of dValues) {\r\n            if(dValue?.id) {\r\n                lValues.push(LValue.fromPointer(dValue.id));\r\n            }\r\n        }\r\n        return lValues;\r\n    }\r\n\r\n    public static getDeleted(): string [] {\r\n        const state: DState & GObject = store.getState();\r\n        return state.deleted;\r\n    }\r\n\r\n    public static getState(): any {\r\n        const state: DState & GObject = store.getState();\r\n        return state;\r\n    }\r\n\r\n    static removeEdge(id: number): EdgeOptions[] {\r\n        const state: DState & GObject = store.getState();\r\n        const edges: EdgeOptions[] = [];\r\n        for(let edge of state.edges) {\r\n            if(edge.id !== id) {\r\n                edges.push(edge);\r\n            }\r\n        }\r\n        return edges;\r\n    }\r\n\r\n    static getAllPrimitiveTypes(): DClassifier[] {\r\n        let state: DState & GObject = store.getState();\r\n        const ptrs: Pointer<DClassifier, 0, 'N'> = Object.values((state).primitiveTypes);\r\n        const classifiers: DClassifier[] = ptrs.map<DClassifier>( (ptr) => state.idlookup[ptr] as DClassifier);\r\n        return classifiers;\r\n    }\r\n    static getFirstPrimitiveTypes(): DClassifier {\r\n        return Selectors.getAllPrimitiveTypes()[0];\r\n    }\r\n    static getRefEdges(): DRefEdge[] {\r\n        const state: DState & GObject = store.getState();\r\n        const pointers: Pointer<DRefEdge, 0, 'N', LRefEdge> = Object.values((state).refEdges);\r\n        const dRefEdges: DRefEdge[] = pointers.map<DRefEdge>( (ptr) => state.idlookup[ptr] as DRefEdge);\r\n        return dRefEdges;\r\n    }\r\n    static getField(field: string): string[] {\r\n        let state: DState & GObject = store.getState();\r\n        const pointers: Pointer<DModelElement, 0, 'N'> = Object.values((state)[field]);\r\n        return pointers;\r\n    }\r\n\r\n    static getAllAttributes(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).attributes);\r\n    }\r\n    static getAllEnumLiterals(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).enumliterals);\r\n    }\r\n    static getAllReferences(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).references);\r\n    }\r\n    static getAllReferenceEdges(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).refEdges);\r\n    }\r\n    static getAllClasses(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).classs);\r\n    }\r\n    static getReturnTypes(): LClass[] {\r\n        const state: DState = store.getState();\r\n        return LPointerTargetable.from(Object.values((state).returnTypes));\r\n    }\r\n\r\n    static getAllClassesWithoutPrimitive(): string[] {\r\n        // this solution does not look good. what if a primitive type is inserted at runtime in between?\r\n        // coould reach the same goal by taking all Classes of a model (m2), excluding classes from other models (types are classes from m3 model)\r\n        const state: DState = store.getState();\r\n        const classList: string[] = Object.values((state).classs);\r\n        classList.splice(0, Selectors.getAllPrimitiveTypes().length);\r\n        /* todo: need to change it in something like this once cross-references between models and instances are implemented\r\n        const m2: LModel;\r\n        m2.isInstanceOf = m3 as LModel;\r\n        m2.isInstanceOf.classes;*/\r\n\r\n        return classList;\r\n    }\r\n\r\n    static getAllEnumerators(flag = false): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).enumerators);\r\n    }\r\n    static getAllPackages(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).packages);\r\n    }\r\n\r\n    static getAllParameters(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).parameters);\r\n    }\r\n    static getAllOperations(): string[] {\r\n        const state: DState = store.getState();\r\n        return Object.values((state).operations);\r\n    }\r\n\r\n    static getDElement<T extends DModelElement>(pointer: string): T {\r\n        const state: DState & GObject = store.getState();\r\n        const dElement: T = state.idlookup[pointer] as T;\r\n        return dElement;\r\n    }\r\n\r\n    static getAllMetamodels(): LModel[] {\r\n        const state: DState = store.getState();\r\n        const dModels = Object.values((state).m2models);\r\n        return LModel.fromPointer(dModels);\r\n    }\r\n\r\n    static getAllModels(): LModel[] {\r\n        const state: DState = store.getState();\r\n        const dModels = Object.values((state).m1models);\r\n        return LModel.fromPointer(dModels);\r\n    }\r\n\r\n    //Giordano: end\r\n\r\n    static getVertex<W extends boolean = true, RP extends boolean = true>(wrap?: W /* = true */, resolvePointers?: RP /**/):\r\n        W extends false ? (RP extends false ? Pointer<DVoidVertex, 1, 1, LVoidVertex>[] : DVoidVertex[]) : LVoidVertex[] {\r\n        const state: DState = store.getState();\r\n        let ptrs: Pointer<DVoidVertex>[] = [];\r\n\r\n        U.ArrayMerge0(false, ptrs,\r\n            // Object.values(state.graphs || {}),\r\n            Object.values(state.voidvertexs || {}),\r\n            Object.values(state.vertexs || {}),\r\n            Object.values(state.graphvertexs || {}),\r\n            Object.values(state.edgepoints || {}));\r\n\r\n        console.log('selector getvertex: ', {ptrs, g: Object.values(state.graphs || {}), vv:Object.values(state.voidvertexs || {}), v:Object.values(state.vertexs || {}), gv:Object.values(state.graphvertexs || {}), ep:Object.values(state.edgepoints || {})});\r\n        if (wrap === undefined || wrap === true) return ptrs.map( p => DPointerTargetable.wrap(p)) as any[];\r\n        if (resolvePointers === undefined || resolvePointers === true) return ptrs.map( r => state.idlookup[r]) as any[];\r\n        return ptrs as any[];\r\n    }\r\n\r\n    static getAll<D extends DPointerTargetable, L extends LPointerTargetable, DT extends typeof DPointerTargetable = typeof DPointerTargetable,\r\n        W extends undefined | true | false = false, RP extends undefined | true | false = true, RET = W extends false ? (RP extends false ? Pointer<D, 1, 1, L> : D) : L>\r\n        (Classe?: DT, condition?: (e:RET) => boolean, state?: DState, resolvePointers?: RP /**/, wrap?: W /* = true */): RET[] {\r\n        if (!state) state = store.getState();\r\n        let GClass = (Classe as GObject) || {name:\"idlookup\"};\r\n        const className: string = (GClass?.staticClassName || GClass.name).toLowerCase();\r\n        const allIdByClassName: Pointer<D, 1, 1, L>[]\r\n            = (state as GObject)[className]\r\n            || (state as GObject)[className.substr(1)]\r\n            || (state as GObject)[className + 's']\r\n            || (state as GObject)[className.substr(1) + 's'];\r\n        Log.exDev(!allIdByClassName, 'cannot find store key:', {state, className, Classe});\r\n        let allDByClassName: D[] | null = null;\r\n        let allLByClassName: L[] | null = null;\r\n        if (resolvePointers || wrap) {\r\n            allDByClassName = allIdByClassName.map( (e) => (state as DState).idlookup[e] ) as D[];\r\n            if (wrap) {\r\n                allLByClassName = allDByClassName.map( e => DPointerTargetable.wrap(e)) as any as L[];\r\n            }\r\n        }\r\n        let ret: RET[] = (resolvePointers || wrap ? (wrap ? allLByClassName : allDByClassName) : allIdByClassName) as any[] as RET[];\r\n        if (!Array.isArray(ret)) ret = Object.values(ret).filter(e => e instanceof Object) as RET[];\r\n        if (condition) return ret.filter( e => condition(e));\r\n        return ret;\r\n    }\r\n/*\r\n    static getModels(condition?: (m: DModel) => boolean): DModel[] {\r\n        /*\r\n        const className: Pointer<DPointerTargetable, 1, 1> = DViewElement.name.substr(1).toLowerCase() + 's';\r\n        const allByClassName: DPointerTargetable[] = state[className as string];\r\n        let models: DModel[] = state[className as string].map((mid) => state.idlookup[mid as string]) as DModel[];\r\n        if (condition) models = models.filter(condition);\r\n        return models; * /\r\n        return Selectors.getAll(DModel, undefined, undefined, resolvePointers, wrap); }*/\r\n\r\n    static getModel(name: string, caseSensitive: boolean = false, wrap: boolean = false): DModel | LModel | null {\r\n        if (!caseSensitive) name = name.toLowerCase();\r\n        let ret = Selectors.getAll<DModel, LModel>(DModel, (d) => (caseSensitive ? d.name : d.name.toLowerCase()) === name, undefined, true, wrap as any)[0];\r\n        return ret;\r\n    }\r\n\r\n    static getByName(classe: typeof DPointerTargetable, name: string, caseSensitive: boolean = false, wrap: boolean = false): DPointerTargetable | LPointerTargetable | null {\r\n        return Selectors.getByField(classe, 'name', name, caseSensitive, wrap); }\r\n\r\n    static getByField(classe: typeof DPointerTargetable, field: string, value: string, caseSensitive: boolean = false, wrap: boolean = false): DPointerTargetable | LPointerTargetable | null {\r\n        if (!caseSensitive) value = value.toLowerCase();\r\n        let condition = (d: any) => {\r\n            let ret = (caseSensitive ? d[field] : d[field]?.toLowerCase()) === value;\r\n            console.log('filtering getall by field:', {d, dfield:d[field], value, ret});\r\n            return ret;\r\n        }\r\n        let ret = Selectors.getAll(classe, condition, undefined, true, wrap as any)[0];\r\n        return ret; }\r\n\r\n    static getViews(condition?: (m: DModel) => boolean): DViewElement[] { return Selectors.getAll(DViewElement); }\r\n\r\n\r\n\r\n    private static queryJS(model: LModel, query: string): LPointerTargetable[] {\r\n        try {\r\n            return eval(query);\r\n        } catch (e) { return []; }\r\n    }\r\n    /*static getCurrentView(data: LModelElement): DViewElement {\r\n        Log.exDevv('todo');\r\n        return undefined as any;\r\n    }*/\r\n\r\n\r\n    // 2 = explicit exact match (===), 1 = matches a subclass, 0 = implicit match (any *), -1 = not matches\r\n    private static matchesOclCondition(v: DViewElement, data: DModelElement | LModelElement): ViewEClassMatch.MISMATCH | ViewEClassMatch.IMPLICIT_MATCH | ViewEClassMatch.EXACT_MATCH {\r\n        if (!v.query) return ViewEClassMatch.IMPLICIT_MATCH;\r\n        const query = v.query;\r\n        const viewpoint = Selectors.getViewpoint();\r\n        if(v.viewpoint !== viewpoint.id) { return ViewEClassMatch.IMPLICIT_MATCH; }\r\n        let constructors: Constructor[] = RuntimeAccessibleClass.getAllClasses() as (Constructor|AbstractConstructor)[] as Constructor[];\r\n        try {\r\n            const flag = OCL.filter(false, \"src\", [data], query, constructors);\r\n            if(flag.length > 0) return ViewEClassMatch.EXACT_MATCH;\r\n            else return ViewEClassMatch.MISMATCH;\r\n        } catch (e) { console.error('invalid ocl query'); }\r\n        return ViewEClassMatch.MISMATCH;\r\n    }\r\n\r\n\r\n    private static matchesMetaClassTarget(v: DViewElement, data: DModelElement | DGraphElement): ViewEClassMatch {\r\n        if (!v.appliableToClasses || !v.appliableToClasses.length) return ViewEClassMatch.IMPLICIT_MATCH;\r\n        if (!data) return ViewEClassMatch.MISMATCH;\r\n        let ThisClass: typeof DPointerTargetable = RuntimeAccessibleClass.get(data?.className);\r\n        Log.exDev(!ThisClass, 'unable to find class type:', {v, data}); // todo: v = view appliable to DModel, data = proxy<LModel>\r\n        let gotSubclassMatch: boolean = false;\r\n        for (let classtarget of v.appliableToClasses) {\r\n            const ClassTarget: typeof DPointerTargetable = RuntimeAccessibleClass.get(classtarget);\r\n            if (ThisClass === ClassTarget) return ViewEClassMatch.EXACT_MATCH; // explicit exact match\r\n            if (!gotSubclassMatch && U.classIsExtending(ThisClass, ClassTarget)) gotSubclassMatch = true; // explicit subclass match\r\n            if (gotSubclassMatch) return ViewEClassMatch.INHERITANCE_MATCH;\r\n        }\r\n        return ViewEClassMatch.MISMATCH;\r\n }\r\n\r\n    private static isOfSubclass(data: DPointerTargetable, classTarget: string | typeof DPointerTargetable, acceptEquality: boolean = false): boolean {\r\n        let ThisClass: typeof DPointerTargetable = RuntimeAccessibleClass.get(data.className);\r\n        Log.exDev(!ThisClass, 'isOfSubclass() unable to find class type:', {data});\r\n        const ClassTarget: typeof DPointerTargetable = typeof classTarget === \"string\"? RuntimeAccessibleClass.get(classTarget) : classTarget;\r\n        if (ThisClass === ClassTarget) return acceptEquality;\r\n        return U.classIsExtending(ThisClass, ClassTarget);\r\n    }\r\n\r\n\r\n\r\n    private static scoreView(v1: DViewElement, data: LModelElement | undefined, node: DGraphElement | undefined, graph: LGraphElement, sameViewPointViews: Pointer<DViewElement, 1, 1>[] = []): number {\r\n        let datascore: number = 1;\r\n        let nodescore: number = 1;\r\n        if (data) {// 1° priority: matching by EClass type\r\n            let v1MatchingEClassScore: ViewEClassMatch = this.matchesMetaClassTarget(v1, data?.__raw);\r\n            // Log.l('score view:', {v1, data, v1MatchingEClassScore});\r\n            if (v1MatchingEClassScore === ViewEClassMatch.MISMATCH) return ViewEClassMatch.MISMATCH;\r\n            // 2° priority: by ocl condition matching\r\n            let v1OclScore = Selectors.matchesOclCondition(v1, data);\r\n            if (v1OclScore === ViewEClassMatch.MISMATCH) return ViewEClassMatch.MISMATCH;\r\n            // 3° priority by sub-view\r\n            let v1SubViewScore = Selectors.matchesOclCondition(v1, data);\r\n            if (v1SubViewScore === ViewEClassMatch.MISMATCH) return ViewEClassMatch.MISMATCH;\r\n            // second priority: matching by viewpoint / subViews\r\n            datascore = (v1MatchingEClassScore * v1OclScore * v1SubViewScore);\r\n        }\r\n        if (node){\r\n            // 1° priority: matching by DGraphElement type\r\n            let v1MatchingEClassScore: ViewEClassMatch = this.matchesMetaClassTarget(v1, node);\r\n            nodescore = 1; // todo: ocl by node position or other node info\r\n        }\r\n        return datascore * nodescore * v1.explicitApplicationPriority;\r\n    }\r\n\r\n\r\n    static getAppliedViews(data: LModelElement|undefined, hisnode: DGraphElement | undefined, graph: LGraphElement,\r\n                           selectedViewId: Pointer<DViewElement, 0, 1, LViewElement>, parentViewId: Pointer<DViewElement, 0, 1, LViewElement>): Scored<DViewElement>[] {\r\n        const state : DState = store.getState();\r\n        const allViews: DViewElement[] = [...Selectors.getAllViewElements()];\r\n        const selectedView: DViewElement | null = null; // selectedViewId ? state.idlookup[selectedViewId] as DViewElement : null;\r\n        const parentView: DViewElement | null = parentViewId ? state.idlookup[parentViewId] as DViewElement : null;\r\n        const sameViewPointSubViews: Pointer<DViewElement, 1, 1>[] = parentView ? parentView.subViews : []; // a viewpoint is a simple view that is targeting a model\r\n        if (selectedView) U.arrayRemoveAll(allViews, selectedView);\r\n        let sortedPriority: Scored<DViewElement>[] = allViews.map(\r\n            // v => new Scored<DViewElement>(Selectors.scoreView(v, data as any as DModelElement, hisnode, graph, sameViewPointSubViews), v)) as Scored<DViewElement>[];\r\n            (v) => {\r\n                return new Scored<DViewElement>(Selectors.scoreView(v, data, hisnode, graph, sameViewPointSubViews), v);}\r\n        ) as Scored<DViewElement>[];\r\n        sortedPriority.sort( (e1, e2) => e2.score - e1.score);\r\n        // todo: prioritize views \"children\" of the view of the graph, so they will display differnet views for the same element in different graphs\r\n        // then sort by  view selector matching: on classtype (eattribute, eoperation, eclass...), on values, upperbound...\r\n        if (selectedView) sortedPriority = [new Scored<DViewElement>('manually assigned' as any, selectedView), ...sortedPriority];\r\n        // sortedPriority = sortedPriority.map( s=> s.element) as any] : sortedPriority.map( s=> s.element) as any;\r\n\r\n        // Log.exDevv('viewscores', {data, sp:sortedPriority});\r\n        return sortedPriority;\r\n    }\r\n\r\n    static getAllMP(state?: DState): DModelElement[] {\r\n        if (!state) state = store.getState();\r\n        let allD: DPointerTargetable[] = Object.values(state.idlookup);\r\n        return allD.filter( (d: DPointerTargetable) => U.isObject(d) && Selectors.isOfSubclass(d, DModelElement)) as DModelElement[]; }\r\n\r\n    static toObject<D extends DPointerTargetable>(ptrs: Pointer<D>[], state?: DState):D[] {\r\n        if (!state) state = store.getState();\r\n        return ptrs.map(p => (state as DState).idlookup[p]) as D[]; }\r\n\r\n    static wrap<D extends DPointerTargetable, L extends LPointerTargetable>(arr: (Pointer<D, 1, 1, L> | D)[], state?: DState): L[] {\r\n        if (!arr.length) return [];\r\n        if (!state) state = store.getState();\r\n        let objarr: D[];\r\n        if (typeof arr[0] === \"string\") { objarr = Selectors.toObject(arr as string[], state); }\r\n        else objarr = arr as D[];\r\n        return objarr.map(p => RuntimeAccessibleClass.wrap(p)) as L[]; }\r\n\r\n    static unwrap<D extends DPointerTargetable, L extends LPointerTargetable>(arr:L[]): D[] { return arr.map( (a)=> a.__raw) as any[]; }\r\n    static getSubNodeElements(forGraph: Pointer<DGraph, 1, 1>, asPointers: boolean = false, wrap: boolean = false): Pointer<DGraphElement>[] | DGraphElement[] | LGraphElement[] {\r\n        const state : DState = store.getState();\r\n        const g: DGraph = state.idlookup[forGraph] as DGraph;\r\n        if (asPointers) return g.subElements;\r\n        const subelements: DGraphElement[] = g.subElements.map( geid => state.idlookup[geid]) as DGraphElement[];\r\n        if (wrap) return subelements.map<LGraphElement>( (ge) => MyProxyHandler.wrap(ge));\r\n        return subelements; }\r\n\r\n\r\n\r\n\r\n    //// giordano part\r\n\r\n\r\n\r\n    public static getAllPackageClasses(id: string): LClass[] {\r\n        const data = MyProxyHandler.wrap(id) as GObject;\r\n        let lPackage : LPackage | undefined;\r\n        const classes: LClass[] = [];\r\n        if (data.className === \"DReference\") {\r\n            const lClass: LClass = MyProxyHandler.wrap(data.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if (data.className === \"DParameter\") {\r\n            const lOperation: LOperation = MyProxyHandler.wrap(data.father);\r\n            const lClass: LClass = MyProxyHandler.wrap(lOperation.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if (data.className === \"DOperation\") {\r\n            const lClass: LClass = MyProxyHandler.wrap(data.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if (lPackage) {\r\n            for(let classifier of lPackage.classifiers) {\r\n                const lClassifier: LClass | LEnumerator = MyProxyHandler.wrap(classifier);\r\n                if(lClassifier.className === \"DClass\") classes.push(lClassifier as LClass);\r\n            }\r\n        }\r\n        return classes;\r\n    }\r\n    public static getAllPackageEnumerators(id: string): LEnumerator[] {\r\n        const data = MyProxyHandler.wrap(id) as GObject;\r\n        let lPackage : LPackage | undefined;\r\n        const enumerators: LEnumerator[] = [];\r\n        if(data.className === \"DAttribute\") {\r\n            const lClass: LClass = MyProxyHandler.wrap(data.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if(data.className === \"DParameter\") {\r\n            const lOperation: LOperation = MyProxyHandler.wrap(data.father);\r\n            const lClass: LClass = MyProxyHandler.wrap(lOperation.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if(data.className === \"DOperation\") {\r\n            const lClass: LClass = MyProxyHandler.wrap(data.father);\r\n            lPackage = MyProxyHandler.wrap(lClass.father);\r\n        }\r\n        if(lPackage) {\r\n            for(let classifier of lPackage.classifiers) {\r\n                const lClassifier: LClass | LEnumerator = MyProxyHandler.wrap(classifier);\r\n                if(lClassifier.className === \"DEnumerator\") enumerators.push(lClassifier as LEnumerator);\r\n            }\r\n        }\r\n        return enumerators;\r\n    }\r\n}\r\n\r\nclass Scored<T extends GObject> {\r\n    constructor(public score: number, public element: T) {}\r\n}\r\n","import {\r\n    Json,\r\n    Log,\r\n\r\n\r\n    DModelElement,\r\n    LModelElement,\r\n    DModel,\r\n    LModel,\r\n    DValue,\r\n    LValue,\r\n    DNamedElement,\r\n    LNamedElement,\r\n    DObject,\r\n    LObject,\r\n    DEnumerator,\r\n    LEnumerator,\r\n    DEnumLiteral,\r\n    LEnumLiteral,\r\n    DAttribute,\r\n    LAttribute,\r\n    DReference,\r\n    LReference,\r\n    DStructuralFeature,\r\n    LStructuralFeature,\r\n    DClassifier,\r\n    LClassifier,\r\n    DDataType,\r\n    LDataType,\r\n    DClass,\r\n    LClass,\r\n    DParameter,\r\n    LParameter,\r\n    DOperation,\r\n    LOperation,\r\n    DPackage,\r\n    LPackage,\r\n    DTypedElement,\r\n    LTypedElement,\r\n    DAnnotation,\r\n    LAnnotation,\r\n    EJavaObject,\r\n    DMap,\r\n    LMap,\r\n    DFactory_useless_,\r\n    LFactory_useless_,\r\n    AttribETypes,\r\n    U,\r\n    Pointer,\r\n    CreateElementAction,\r\n    Selectors,\r\n    GObject,\r\n    Dictionary,\r\n    PointedBy,\r\n    LPointerTargetable,\r\n    windoww,\r\n    SetRootFieldAction,\r\n    Constructors,\r\n    DocString,\r\n    store,\r\n    SetFieldAction,\r\n    Pointers,\r\n    DPointerTargetable\r\n\r\n} from \"../joiner\";\r\n\r\ntype RET<T = boolean> = T | Promise<T>;\r\ntype Ret = RET;\r\n\r\nclass SavePack{\r\n    model: string;\r\n    vertexpos: string;\r\n    view: string;\r\n    constructor(model: string='', vertexpos: string='', view:string='') {\r\n        this.model = model;\r\n        this.vertexpos = vertexpos;\r\n        this.view = view;\r\n    }\r\n}\r\n\r\ntype JsonSavePack = {[key in keyof SavePack]: Json | null }\r\n\r\n\r\nexport abstract class IStorage{\r\n    static get():IStorage { return Log.exx(\"IStorage.get (static) should be overridden\"); }\r\n    public prefix: string;\r\n    public autosave: boolean;\r\n    constructor(prefix: string, autosave: boolean) {\r\n        this.prefix = prefix;\r\n        this.autosave = autosave;\r\n    }\r\n\r\n\r\n    public del(key: string | number): boolean{\r\n        let isOverwrite = this.get(key) !== null;\r\n        this.set(key, '');\r\n        return isOverwrite; }\r\n    public abstract set(key: string | number, val: string | any): RET;\r\n    get<T extends boolean>(key: string | number, parse: T = false as any): T extends false ? null | string : null | any{ return Log.exx(\"IStorage.get should be overridden\"); }\r\n\r\n    protected serialize(val: any): string { // serialize\r\n        try { return JSON.stringify(val); } catch(e){ return \"\"+val; }\r\n    }\r\n    protected deserialize(val: string): any{ // de-serialize\r\n        try { return JSON.parse(val); } catch(e){ return val; }\r\n    }\r\n    protected set0(val: any): string { return this.serialize(val); }\r\n    protected get0(val: any): string { return this.deserialize(val); }\r\n    protected parse(val: any): string { return this.deserialize(val); }\r\n}\r\n\r\nexport class LocalStorage extends IStorage{\r\n    public static get():LocalStorage {return new LocalStorage(\"_j\", true); }\r\n    private constructor (prefix: string, autosave: boolean) { super(prefix, autosave); }\r\n\r\n    private static KeyList= {lastOpenedModel: \"lastOpenedModel\",lastOpenedView: \"lastOpenedView\",lastOpenedPosition: \"lastOpenedPosition\",}\r\n\r\n\r\n    get<T extends boolean>(key: string | number, parse: T = false as any): T extends false ? null | string : null | any{\r\n        let val = localStorage.getItem(this.prefix+key);\r\n        return parse ? this.parse(val) : val;\r\n    }\r\n\r\n    set(key?: string | number, val?: string | any): boolean {\r\n        val = this.serialize(val);\r\n        // let isOverwrite = localStorage.getItem(this.prefix+key);\r\n        localStorage.set(this.prefix+key, val);\r\n        return true;\r\n    }\r\n\r\n\r\n    public getLastOpened(modelNumber: 1 | 2): SavePack {\r\n        let modelname = \"m\" + modelNumber + \"_\";\r\n        const ret: SavePack = new SavePack();\r\n        ret.model = this.get(modelname + LocalStorage.KeyList.lastOpenedModel, false) || '';\r\n        ret.view = this.get(modelNumber + LocalStorage.KeyList.lastOpenedView, false) || '';\r\n        ret.vertexpos = this.get(modelNumber + LocalStorage.KeyList.lastOpenedPosition, false) || '';\r\n        return ret; }\r\n\r\n    public deleteLastOpened(modelNumber: 1 | 2): void { this.setLastOpened(modelNumber, '', '', ''); }\r\n\r\n    public setLastOpened(modelNumber: 1 | 2, model: string = '', view: string = '', vertex: string = ''): void {\r\n        let modelname = \"m\" + modelNumber + \"_\";\r\n        if (model) this.set(modelname + LocalStorage.KeyList.lastOpenedModel, model);\r\n        else this.del(modelname +  LocalStorage.KeyList.lastOpenedModel);\r\n        if (view) this.set(modelname + LocalStorage.KeyList.lastOpenedView, view);\r\n        else this.del(modelname +  LocalStorage.KeyList.lastOpenedView);\r\n        if (vertex) this.set(modelname + LocalStorage.KeyList.lastOpenedPosition, vertex);\r\n        else this.del(modelname +  LocalStorage.KeyList.lastOpenedPosition); }\r\n\r\n\r\n}\r\n\r\nexport class EcoreParser{\r\n    static supportedEcoreVersions = [\"http://www.eclipse.org/emf/2002/Ecore\"];\r\n    static prefix:string = '@';\r\n\r\n    static parse(ecorejson: GObject | string | null, isMetamodel: boolean, filename: string | undefined, persist: boolean = true): DModelElement[]{\r\n        if (!ecorejson) return [];\r\n        let parsedjson: GObject;\r\n        if (typeof ecorejson === \"string\") try { parsedjson = JSON.parse(ecorejson); } catch(e) { windoww.temp = ecorejson; Log.exx(\"error while parsing json:\", e, ecorejson.substring(0, 1000)); throw e; }\r\n        else parsedjson = ecorejson;\r\n\r\n        console.log(\"root parse\", ecorejson);\r\n\r\n        isMetamodel = !!parsedjson[ECoreRoot.ecoreEPackage];\r\n\r\n        Constructors.pause();\r\n            let parsedElements: DModelElement[] = isMetamodel ? EcoreParser.parseM2Model(parsedjson, filename) : EcoreParser.parseM1Model(parsedjson, undefined, filename);\r\n            console.warn(\"parse.result D\", parsedElements);\r\n            this.LinkAllNamesToIDs(parsedElements);\r\n            this.fixNamingConflicts(parsedElements);\r\n        Constructors.resume();\r\n        if (persist) {\r\n            CreateElementAction.newBatch(parsedElements);\r\n        }\r\n        // update m1 object pointers (need them to be persistent to navigate .fathers and get ecore pointer strings using LObject)\r\n        setTimeout(() => this.fixObjectPointers(parsedElements), 1);\r\n\r\n        windoww.tmpparse = () => LPointerTargetable.wrapAll(parsedElements);\r\n\r\n        this.tempfix_untilopennewtabisdone(parsedElements, isMetamodel);\r\n\r\n        console.log('parsedElem', parsedElements)\r\n        return parsedElements;\r\n    }\r\n\r\n    private static fixObjectPointers(parsedElements: DModelElement[]): void {\r\n        let dobjects: DObject[] = parsedElements.filter(e=>e.className === DObject.name) as any[];\r\n        let values: DValue[] = parsedElements.filter(e=>e.className === DValue.name) as any[];\r\n        let lobjects: LObject[] = LPointerTargetable.fromArr(dobjects);\r\n        let m1pointermap: Dictionary<string, LObject> = { }; //    \"//@rootrefname.index@/refname.index/@....etc\"\r\n        for (let o of lobjects){ m1pointermap[o.ecorePointer()] = o; }\r\n        for (let v of values) {\r\n            if (v.isMirage) continue;\r\n            let modified = false;\r\n            let newvalues = v.values.map((e) => {\r\n                if (!m1pointermap[e as any]) return e;\r\n                modified = true;\r\n                console.log(\"m1 pointer resolved:\", {from:e, to:m1pointermap[e as any].id});\r\n                return m1pointermap[e as any].id;\r\n            });\r\n            if (!modified) continue;\r\n            let lv: LValue = LPointerTargetable.from(v);\r\n            lv.values = newvalues;\r\n        }\r\n\r\n    }\r\n    private static tempfix_untilopennewtabisdone(parsedElements: DModelElement[], isMetamodel: boolean) {\r\n        // replaces current model with parsed model. this needs to be removed to open a new tab later on.\r\n        let model: DModel = null as any;\r\n        for (let elem of parsedElements) { if (elem.className === DModel.name) { model = elem as any; break; } }\r\n        SetRootFieldAction.new(isMetamodel ? \"m2models\" : \"m1models\", model.id, '+=', false); // it is pointer but no need to update pointedby's this time\r\n    }\r\n\r\n    // resolve eCore pointers to Jodel pointers and set the PointedBy\r\n    private static LinkAllNamesToIDs(parsedElements: DModelElement[]): void {\r\n        // todo: è post-parse che legga i nomi e assegni gli id aggiustando le references e extends settati by name. trova i campi temporanei cercando i @ts-ignore\r\n        // update mref, attribute, parameter type\r\n        // update operation exception\r\n        // replace those names with id's\r\n\r\n        let idMap: Dictionary<Pointer, DModelElement> = {};\r\n        let nameMap: Dictionary<string, DModelElement> = {};\r\n        let replacePrimitiveMap: Dictionary<string, DClassifier> = {};\r\n        let d_Estring: DClassifier = Selectors.getAllPrimitiveTypes()[0];\r\n        replacePrimitiveMap[AttribETypes.EString] = d_Estring;\r\n        // todo: do the same for all other primitives\r\n\r\n        // let longprefixlength = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore'.length;\r\n        const typeprefix = \"#//\";\r\n        for (let shortkey in AttribETypes){\r\n            let longkey: string = (AttribETypes as GObject)[shortkey];\r\n            // fallback for missing type instead of crash\r\n            if (!replacePrimitiveMap[longkey]) replacePrimitiveMap[longkey] = d_Estring;\r\n\r\n            // allow shortcuts to work too\r\n            replacePrimitiveMap[typeprefix + shortkey] = replacePrimitiveMap[longkey];\r\n\r\n        }\r\n\r\n\r\n        for (let ecorename in replacePrimitiveMap) {\r\n            idMap[replacePrimitiveMap[ecorename].id] = replacePrimitiveMap[ecorename];\r\n        }\r\n\r\n        // let prereplace = (name: string) => name.replaceAll(\"#//\", \"\");\r\n        let replaceRules = [\"extends\", /*\"extendedBy\",*/ \"exceptions\", \"type\", \"values\"];\r\n        let dobj: GObject & DModelElement;\r\n\r\n        for (dobj of parsedElements) {\r\n            if (dobj.name) { nameMap[dobj.name] = dobj; nameMap[typeprefix + dobj.name] = dobj;}\r\n            idMap[dobj.id] = dobj;\r\n        }\r\n\r\n        for (let replacekey of replaceRules){\r\n            for (dobj of parsedElements) {\r\n                let valtmp: string | string[] = dobj[replacekey] as string | string[];\r\n                if (valtmp === undefined) continue; // for missing properties in a d-object like looking for extends on a dmodel.\r\n                let values: string[]\r\n                let isArray = Array.isArray(valtmp);\r\n                if (isArray) {\r\n                    values = valtmp as string[];\r\n                    dobj[replacekey] = [];\r\n                }\r\n                else {\r\n                    values = [valtmp as string];\r\n                }\r\n                for (let value of values) {\r\n                    if (!value) continue;\r\n                    // console.log(\"fixalltypes\", {replacekey, dobj, value, values});\r\n                    let target: DModelElement = replacePrimitiveMap[value];\r\n                    if (!target) target = nameMap[value];\r\n                    // if (Pointers.isPointer(value)) { target = value;  if it happen to be a pointer it's a mistake in parser }\r\n                    // (value.indexOf(\"#//\") == 0) && console.log(\"attempt to replace primitive type to his id\", {target, dobj, replacekey, value, replacePrimitiveMap, nameMap, idMap, parsedElements});\r\n\r\n                    if (replacekey === \"extends\") {\r\n                        if (!target) continue;\r\n                        Log.ex(target.className !== DClass.name, \"found a class attempting to extend an object that is not a class\", {target, dobj, replacePrimitiveMap, nameMap, idMap});\r\n                        (target as DClass).extendedBy.push((dobj as DClass).id);\r\n                    }\r\n                    Log.ex(!target, \"LinkAllNames() can't find type target:\", {value, nameMap, replacePrimitiveMap, dobj, replacekey});\r\n                    if (isArray) dobj[replacekey].push(target.id);\r\n                    else dobj[replacekey] = target.id;\r\n                }\r\n            }\r\n        }\r\n\r\n        let idlookup: Dictionary<string, DModelElement> = store.getState().idlookup as any;\r\n\r\n        // fix from ordinals to Pointer<DEnumLiteral>\r\n        function DfromPtr<T extends DPointerTargetable>(id: Pointer<T>|null|undefined): T{ return !id ? undefined as any : (idMap[id] || idlookup[id]); }\r\n        function getLiteral(id: Pointer<DEnumerator>, ordinal: number): DEnumLiteral { return LPointerTargetable.fromD(DfromPtr(id))?.ordinals[ordinal]?.__raw; }\r\n        for (let elem of parsedElements) {\r\n            if (elem.className !== DValue.name) continue;\r\n            let dval: DValue = elem as DValue;\r\n            let meta: DAttribute | DReference = DfromPtr(dval.instanceof as Pointer<DAttribute|DReference>);\r\n            if (!meta) continue;\r\n            let type: DEnumerator = DfromPtr(meta.type) as DEnumerator;\r\n            if (!type || type.className !== DEnumLiteral.name) continue;\r\n            let mapper = (v: unknown): Pointer<DEnumLiteral> => {\r\n                if (typeof v !== \"number\") { Log.e(\"found non-numeric value in a literal value.\", v, dval); return v as any; }\r\n                let l = getLiteral(type.id, v);\r\n                return l ? l.id : v as any;\r\n            }\r\n            dval.values = dval.values.map( mapper );\r\n        }\r\n\r\n        // finally: set all pointedby\r\n        for (let ptrkey of PointedBy.list) for(dobj of parsedElements) {\r\n            let valtmp: string | string[] = dobj[ptrkey] as string | string[];\r\n            let values: string[];\r\n            if (Array.isArray(valtmp)) {\r\n                values = valtmp as string[];\r\n            }\r\n            else {\r\n                if (valtmp === undefined) values = [];\r\n                // if (valtmp === \"modeltmp\") { dobj[ptrkey] = null; values = []; } // because model.father is null, but i want to error check others and let them crash if missing father\r\n                else values = [valtmp as string];\r\n            }\r\n            console.log(\"fixalltypes[]\", {ptrkey, valtmp, dobj, values});\r\n            for (let value of values) {\r\n                if (!value) continue;\r\n                // errore: per operazione.type l'import mi restituisce puntatore a oggetto stringa, ma non è tra gli oggetti parsed\r\n                let target: DModelElement = idMap[value];\r\n                if (target) {\r\n                    target.pointedBy.push(PointedBy.new(\"idlookup.\" + dobj.id + \".\" + ptrkey));\r\n                } else {\r\n                    target = idlookup[value];\r\n                    console.log(\"fixalltypes\", {ptrkey, valtmp, dobj, value, values, target, idMap});\r\n                    if (!target) throw new Error(\"target undefined\");\r\n                    SetFieldAction.new(target, \"pointedBy\", PointedBy.new(\"idlookup.\" + dobj.id + \".\" + ptrkey),'+=', false);\r\n                }\r\n            }\r\n        }\r\n        // update superclasses\r\n        this.updateSuperClasses(parsedElements);\r\n    }\r\n\r\n    private static todoGetPrimitiveTypenope(type: AttribETypes.EString | string): Pointer<DClass, 1, 1, LClass> {\r\n        // akready fixed in LinkAllNamesToID\r\n        return 'todoGetPrimitiveType from parser';\r\n    }\r\n\r\n    private static updateSuperClasses(parsedElements: DModelElement[]): void {\r\n        // todo:3\r\n\r\n    }\r\n    private static fixNamingConflicts(parsedElements: DModelElement[]): void {\r\n        // todo:4 final\r\n    }\r\n\r\n    static parseM2Model(json: Json, filename: string | undefined): DModelElement[] {\r\n        let generated: DModelElement[] = [];\r\n        if (!json) { json = {}; }\r\n        let modelname = json[ECoreNamed.namee] as string;\r\n        if (!modelname && filename) {\r\n            let pos = filename.indexOf(\".\");\r\n            modelname = pos === -1 ? filename : filename.substring(0, pos); }\r\n        let dObject: DModel = DModel.new( modelname || \"imported_metamodel_1\", undefined, true, true);\r\n        console.log(\"made model\", json);\r\n        generated.push(dObject); // dObject.father = 'modeltmp' as any;\r\n        /// *** specific  *** ///\r\n        const children = EcoreParser.getChildren(json);\r\n        const annotations = EcoreParser.getAnnotations(json);\r\n        // dObject.name = json[ECoreNamed.namee] as string || \"imported_metamodel_1\";\r\n        console.log(\"made model 2\", children, annotations);\r\n        for (let child of annotations) {\r\n            EcoreParser.parseDAnnotation(dObject, child, generated);\r\n        }\r\n        console.log(\"made annotations\");\r\n        for (let child of children) {\r\n            EcoreParser.parseDPackage(dObject, child, generated);\r\n        }\r\n        console.log(\"made packages\");\r\n        return generated;\r\n    }\r\n\r\n    static parseM1Model(json: Json, meta?: LModel, filename?: string): DModelElement[] {\r\n        let generated: DModelElement[] = [];\r\n        if (!json) { json = {}; }\r\n        /// *** specific  *** ///\r\n        // this.parseDObject(json, dObject, DModel,undefined, generated);\r\n        let allmodels: DModel[];\r\n        if (!meta && filename) {\r\n            allmodels = Selectors.getAll(DModel);\r\n            allmodels = allmodels.filter( (m) => m.name === filename);\r\n            meta = LPointerTargetable.fromD(allmodels[0]);\r\n        } else allmodels = [];\r\n\r\n        let xmlns =  EcoreParser.XMLinlineMarker + \"xmlns:\";\r\n        let ns: string | undefined = undefined as any;\r\n        function findns(key: string): false | string {\r\n            let pos = key.indexOf(\":\");\r\n            if (pos <= 0) return false;\r\n            return ns = key.substring(0, pos); // through namespace before the name of the root objects;\r\n            // additional method: through xmlns key\r\n            // if (key.indexOf(xmlns)) continue; // \"-xmlns:org.eclipse.example.modelname\": \"https://org/eclipse/example/modelname\",\r\n            // ns = key.substring(xmlns.length); break;\r\n        }\r\n        outerloop: for (let key0 in json) { // ns can be at most in sublevel 3, this is annoying but i need it at beginning of parsing\r\n            if (findns(key0)) break;\r\n            let val0 = json[key0];\r\n            if (typeof val0 === \"object\") for (let key1 in val0) {\r\n                if (findns(key0)) break outerloop;\r\n            }\r\n        }\r\n        if (ns && !meta) {\r\n            let allpkgs: LPackage[] = Selectors.getAll(DPackage, undefined, undefined, true, true);\r\n            let matchpkg: LPackage[] = allpkgs.filter( (d) => d.uri === ns);\r\n            meta = matchpkg[0]?.model;\r\n            // Log.exDev(!meta, \"metamodel not found: \", {ns, json, filename, allmodels, allpkgs, matchpkg}) // todo: after tests remove this check and allow shapeless models.\r\n        }\r\n\r\n        let modelname = '';\r\n        if (!modelname && filename) {\r\n            let pos = filename.indexOf(\".\");\r\n            modelname = (pos === -1 ? filename : filename.substring(0, pos)); }\r\n        let dObject: DModel = DModel.new( modelname || \"imported_model_1\", meta?.id, false, true);\r\n        console.log(\"made model\", json);\r\n        generated.push(dObject);\r\n\r\n        for (let key in json) {\r\n            switch(key) {\r\n                case ECoreObject.xmi_version: // this is only on roots\r\n                    Log.ex(json[key] !== \"2.0\",\"The only supported ecore version is \\\"2.0\\\", found instead: \\\"\"+json[key] +\"\\\"\");\r\n                    break;\r\n                // case ECoreObject.xmlnsecore:\r\n                case ECoreObject.xmlns_xmi:\r\n                    let expected = \"http://www.omg.org/XMI\";\r\n                    Log.ex(json[key] !== expected,\"Unexpected XMI schema. Should be \\\"\"+expected+\"\\\", found instead: \\\"\"+json[key] +\"\\\"\");\r\n                    break;\r\n                default: // a feature name\r\n                    let val = json[key];\r\n                    if (!val) continue;\r\n                    if (key.indexOf(xmlns) === 0) continue; // \"-xmlns:org.eclipse.example.modelname\": \"https://org/eclipse/example/modelname\",\r\n                    if (key[0] === EcoreParser.XMLinlineMarker) key = key.substring(EcoreParser.XMLinlineMarker.length);\r\n\r\n                    const namespacedclass: string = key;\r\n                    const mmclass: LClass | undefined = meta && meta.getClassByNameSpace(namespacedclass);\r\n                    if (!mmclass) console.log(\"failed to get mmclass\", {meta, key, mmclass})\r\n                    const roots_for_this_metaclass: Json[] = Array.isArray(val) ? val : [val]; // there might be N roots of class A, M of type B...\r\n                    for(let rootjson of roots_for_this_metaclass) {\r\n                        // DObject.new(mmclass.id, dObject.id, DModel, undefined, true)\r\n                        EcoreParser.parseDObject(rootjson, dObject, DModel, mmclass, generated);\r\n                    }\r\n            }\r\n        }\r\n        return generated;\r\n    }\r\n    /*\r\n    {\r\n      \"org.eclipse.example.bowling:League\": { <-- :classroot\r\n        \"-xmlns:xmi\": \"http://www.omg.org/XMI\",\r\n        \"-xmlns:org.eclipse.example.bowling\": \"https://org/eclipse/example/bowling\",\r\n        \"-xmi:version\": \"2.0\",\r\n        \"Players\": [\r\n          { \"-name\": \"tizio\" },\r\n          { \"-name\": \"asd\" }\r\n        ]\r\n      }\r\n    }\r\n    */\r\n\r\n\r\n    /// In Ecore parsing when you find a value list, it is possible to recover only the type for the meta-feature,<br>\r\n    /// but an array of Mammals might have some Whales, Pigs, etc mixed in. and you have to get the correct subclass for each\r\n    static getobjectmetaclass(json: Json, metaSuperClass: LClass): LClass {\r\n        return metaSuperClass; // todo: comment this and execute below\r\n        let subclasses: LClass[] | [] = !metaSuperClass ? [] : [metaSuperClass];\r\n        let subclasseshapes: Dictionary<Pointer<DClass>, {l: LClass } & Dictionary<DocString<\"feature name\">,  LTypedElement[\"type\"]/*feature type*/>> = {}\r\n        for (let sc of subclasses) {\r\n            subclasseshapes[sc.id] = {l: sc};\r\n            let row = subclasseshapes[sc.id];\r\n            for (let feat of sc.children) {\r\n                let lfeat: LTypedElement = feat as any;\r\n                let dfeat: DTypedElement = lfeat.__raw as any;\r\n                if (!dfeat.name || !dfeat.type) continue;\r\n                row[dfeat.name] = lfeat.type;\r\n            }\r\n        }\r\n        return this.findBestMatch(subclasseshapes, json);\r\n    }\r\n    static findBestMatch(\r\n        m2classes: Dictionary<Pointer<DClass>,  {l: LClass } & Dictionary<DocString<\"feature name\">, LTypedElement[\"type\"]>>,\r\n        json: Dictionary<DocString<\"feature name\">, any/*actual val instead of type*/>): LClass{\r\n        throw new Error(\"todo\");\r\n        return null as any;\r\n    }\r\n    static parseDObject(json: Json, parent: DModel | DValue, parentType: typeof DModel | typeof DValue, meta: LClass | undefined, generated: DModelElement[]): DModelElement[]{\r\n        if (!json) { json = {}; }\r\n        meta = meta && this.getobjectmetaclass(json, meta);\r\n        // let dObject: DObject = DObject.new(meta?.id, parent.id, parentType, json[\"name\"] as string || \"obj_1\");\r\n        // let data: Partial<DObject> = {};\r\n        let dObject: DObject = DObject.new(meta?.id, parent.id, parentType, json[\"name\"] as string || \"obj_1\");\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) {\r\n            if (parentType === DModel) (parent as DModel).objects.push(dObject.id);\r\n            else (parent as DValue).values.push(dObject.id);\r\n        }\r\n        console.log(\"made dobject\", {json, dObject, meta, metaname: meta?.name});\r\n        /// *** specific  *** ///\r\n        for (let key in json) {\r\n            switch(key) {\r\n                case ECoreObject.xmi_version: // this is only on roots\r\n                    Log.ex(json[key] !== \"2.0\",\"The only supported ecore version is \\\"2.0\\\", found instead: \\\"\"+json[key] +\"\\\"\");\r\n                    break;\r\n                // case ECoreObject.xmlnsecore:\r\n                case ECoreObject.xmlns_xmi:\r\n                    let expected = \"http://www.omg.org/XMI\";\r\n                    Log.ex(json[key] !== expected,\"Unexpected XMI schema. Should be \\\"\"+expected+\"\\\", found instead: \\\"\"+json[key] +\"\\\"\");\r\n                    break;\r\n                default: // a feature name\r\n                    let val = json[key];\r\n                    if (!val) continue;\r\n                    if (key[0] === EcoreParser.XMLinlineMarker) key = key.substring(1);\r\n                    if (key.indexOf(\"xmlns:\") === 0) continue; // \"-xmlns:org.eclipse.example.modelname\": \"https://org/eclipse/example/modelname\",\r\n                    let metafeature: LAttribute | LReference | undefined = meta && (meta as any)[\"@\"+key];\r\n                    console.log(\"feature meta\", {json, dObject, key, val, metafeature, classmeta: meta});\r\n                    let values: any[];\r\n                    if (Array.isArray(val)) values = val;\r\n                    else if (val as unknown === undefined) values = [];\r\n                    else values = [val];\r\n                    EcoreParser.parseDValue(key, values, dObject/*father*/, metafeature/*meta*/, generated);\r\n                    // DValue.new(key, metafeature?.id, values, dObject, true, false);\r\n            }\r\n        }\r\n        return generated;\r\n    }\r\n\r\n    private static parseDValue(name:string | undefined, jsonvalues: any[], parent: DObject, meta: LAttribute | LReference | undefined, generated: DModelElement[]): DModelElement[] {\r\n        if (!jsonvalues) { jsonvalues = []; }\r\n        // let dObject: DObject = DObject.new(meta?.id, parent.id, parentType, json[\"name\"] as string || \"obj_1\");\r\n        console.log(\"DValue.new(meta ? undefined : name, meta?.id, jsonvalues, parent.id, true, false)\")\r\n        console.log(\"DValue.new(\", meta ? undefined : name, \",\",meta?.id, \",\",jsonvalues, \",\",parent.id);\r\n        let dValue: DValue = DValue.new(meta ? undefined : name, meta?.id, [], parent.id, true, false);\r\n        generated.push(dValue); dValue.father = parent.id;\r\n        parent.features.push(dValue.id);\r\n        console.log(\"made dValue\", {jsonvalues, dValue, meta, metaname: meta?.name});\r\n        if (meta && meta.className === DAttribute.name) { dValue.values = jsonvalues; return generated; }\r\n\r\n        for (let v of jsonvalues) {\r\n            if (typeof v !== \"object\") { dValue.values.push(v); continue; }\r\n            // let subdObject: DObject = DObject.new((meta as LReference)?.type.id, parent.id, DValue, undefined);\r\n            // generated.push(subdObject);\r\n            EcoreParser.parseDObject(v, dValue, DValue, (meta as LReference)?.type, generated);\r\n        }\r\n        return generated;\r\n    }\r\n\r\n    static parseDAnnotation(parent: DModelElement, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        let dObject: DAnnotation = DAnnotation.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        dObject.father = parent.id;\r\n        if (parent) parent.annotations.push(dObject.id);\r\n\r\n        /// *** specific  *** ///\r\n        let key: string;\r\n        for (key in json){\r\n            const value = json[key];\r\n            switch (key) { //todo\r\n                default: Log.exx('unexpected field in EAnnotation:  ' + key + ' => |' + value + '|'); break;\r\n                case ECoreAnnotation.details: break;\r\n                case ECoreAnnotation.references: break;\r\n                case ECoreAnnotation.source: break;\r\n            }\r\n        }\r\n        // annotation.referencesStr = this.read(json, ECoreAnnotation.source, '#/');\r\n        // annotation.name = this.read(json, ECoreAnnotation.name, 'EAnnotation_1');\r\n        // const details: Json[] = this.getDetails(json);\r\n        // for (let i = 0; i < details.length; i++) { new EAnnotationDetail(this, details[i]); }\r\n        return generated; }\r\n\r\n    static parseDPackage(parent: DModel, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n\r\n        console.warn(\"parseDPackage.children\", childs, generated);\r\n        let dObject: DPackage = DPackage.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.packages.push(dObject.id);\r\n\r\n        let version = (json[EcoreParser.prefix+\"xmlns:ecore\"] || '') as string;\r\n        // model.xmi = json[EcoreParser.prefix+\"xmlns:xmi\"]; // http://www.omg.org/XMI\r\n        // model.xsi = json[EcoreParser.prefix+\"xmlns:xsi\"]; // http://www.w3.org/2001/XMLSchema-instance\r\n\r\n        console.log(json);\r\n        Log.ex(!EcoreParser.supportedEcoreVersions.includes(version), \"unsupported ecore version, must be one of:\" + EcoreParser.supportedEcoreVersions + \" found instead: \"+version);\r\n\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'defaultPackage');\r\n        /// *** specific start *** ///\r\n        dObject.uri = this.read(json, ECorePackage.nsURI, null);\r\n        dObject.prefix = this.read(json, ECorePackage.nsPrefix, null);\r\n        // if (!parent.uri) parent.uri = dObject.uri;\r\n        // if (!parent.prefix) parent.prefix = dObject.prefix; // namespace\r\n        for (let child of childs) {\r\n            switch (child[ECoreClass.xsitype]) {\r\n                default: Log.exx('unexpected xsitype:', child[ECoreClass.xsitype], ' found in jsonfragment:', child, ', in json:', json, ' package:', dObject); break;\r\n                case 'ecore:EClass': this.parseDClass(dObject, child, generated); break;\r\n                case 'ecore:EEnum': this.parseDEnum(dObject, child, generated); break;\r\n            }\r\n        }\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDClass(parent: DPackage, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        let dObject: DClass = DClass.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.classifiers.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'Class_1');\r\n        /// *** specific start *** ///\r\n        for (let key in json) {\r\n            switch (key) {\r\n                default: Log.exx('unexpected field in parseDClass() |' + key + '|', json); break;\r\n                case ECoreClass.instanceTypeName:\r\n                case ECoreClass.eSuperTypes:\r\n                case ECoreClass.xsitype:\r\n                case ECoreClass.eOperations:\r\n                case ECoreClass.eStructuralFeatures:\r\n                case ECoreClass.abstract:\r\n                case ECoreClass.interface:\r\n                case ECoreClass.namee: break; } }\r\n        dObject.instanceClassName = this.read(json, ECoreClass.instanceTypeName, '');\r\n        dObject.interface = this.read(json, ECoreClass.interface, 'false') === 'true';\r\n        dObject.abstract = this.read(json, ECoreClass.abstract, 'false') === 'true';\r\n        let tmps: string = this.read(json, ECoreClass.eSuperTypes, '');\r\n        dObject.extends = tmps.split(' ');\r\n        const features: Json[] = this.getChildren(json);\r\n        const functions: Json[] = this.getChildren(json, false, true);\r\n        for (let child of functions) {\r\n            this.parseDOperation(dObject, json, generated);\r\n        }\r\n        for (let child of features) {\r\n            const xsiType = this.read(child, ECoreAttribute.xsitype);\r\n            switch (xsiType) {\r\n                default: Log.exx( 'unexpected xsi:type: ', xsiType, ' in feature:', child); break;\r\n                case 'ecore:EAttribute':\r\n                    this.parseDAttribute(dObject, child, generated); break;\r\n                case 'ecore:EReference':\r\n                    this.parseDReference(dObject, child, generated); break;\r\n            }\r\n        }\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDEnum(parent: DPackage, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DEnumerator = DEnumerator.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.classifiers.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'Enum_1');\r\n        /// *** specific start *** ///\r\n        for (let key in json) {\r\n            const value = json[key];\r\n            switch (key) {\r\n                default: Log.exx('Enum.parse() unexpected key:', key, 'in json:', json); break;\r\n                case ECoreEnum.xsitype: case ECoreNamed.namee: break;\r\n                case ECoreEnum.eLiterals: break;\r\n                case ECoreEnum.serializable: dObject.serializable = value === 'true'; break;\r\n                case ECoreEnum.instanceTypeName: dObject.instanceClassName = value + ''; break;\r\n            }\r\n        }\r\n        for (let child of childs) {\r\n            this.parseDEnumLiteral(dObject, child, generated);\r\n        }\r\n\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n\r\n\r\n    static parseDEnumLiteral(parent: DEnumerator, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DEnumLiteral = DEnumLiteral.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.literals.push(dObject.id);\r\n        /// *** specific start *** ///\r\n        dObject.value = +this.read(json, EcoreLiteral.value, Number.NEGATIVE_INFINITY);//vv4\r\n        dObject.literal = this.read(json, EcoreLiteral.literal, '');\r\n        dObject.name = this.read(json, ECoreNamed.namee,  dObject.literal || 'literal_1');\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDAttribute(parent: DClass, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DAttribute = DAttribute.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.attributes.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'attr_1');\r\n        /// *** specific start *** ///\r\n        dObject.lowerBound = +this.read(json, ECoreAttribute.lowerbound, 0);\r\n        dObject.upperBound = +this.read(json, ECoreAttribute.upperbound, 1);\r\n        dObject.type = this.read(json, ECoreAttribute.eType, AttribETypes.EString);\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDReference(parent: DClass, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DReference = DReference.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.references.push(dObject.id);\r\n        dObject.name = this.read(json, ECorePackage.namee, 'Ref_1');\r\n        /// *** specific start *** ///\r\n        dObject.containment = U.fromBoolString(this.read(json, ECoreReference.containment, false), false);\r\n        dObject.lowerBound = +this.read(json, ECoreAttribute.lowerbound, 0);\r\n        dObject.upperBound = +this.read(json, ECoreAttribute.upperbound, 1);\r\n\r\n        dObject.type = this.read(json, ECoreReference.eType, this.getEcoreTypeName(parent));\r\n\r\n        console.log(\"attempting to parse dref\", {dObject, json, parent, typekey:  ECoreReference.eType})\r\n\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDParameter(parent: DOperation, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DParameter = DParameter.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.parameters.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'arg1');\r\n        /// *** specific start *** ///\r\n        dObject.lowerBound = +this.read(json, ECoreAttribute.lowerbound, 0);\r\n        dObject.upperBound = +this.read(json, ECoreAttribute.upperbound, 1);\r\n        dObject.type = this.read(json, ECoreAttribute.eType, AttribETypes.EString);\r\n        dObject.ordered = U.fromBoolString(this.read(json, ECoreOperation.ordered, 'false'), false);\r\n        dObject.unique = U.fromBoolString(this.read(json, ECoreOperation.unique, 'false'), false);\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n    static parseDOperation(parent: DClass, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DOperation = DOperation.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.operations.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, 'operation_1');\r\n        /// *** specific start *** ///\r\n        dObject.lowerBound = +this.read(json, ECoreAttribute.lowerbound, 1);\r\n        dObject.upperBound = +this.read(json, ECoreAttribute.upperbound, 1);\r\n        dObject.type = this.read(json, ECoreAttribute.eType, AttribETypes.EString);\r\n        dObject.exceptions = [this.read(json, ECoreOperation.eexceptions, '')];\r\n        dObject.ordered = U.fromBoolString(this.read(json, ECoreOperation.ordered, 'false'));\r\n        dObject.unique = U.fromBoolString(this.read(json, ECoreOperation.unique, 'false'));\r\n        dObject.visibility = AccessModifier.package;\r\n        for (let child of childs) {\r\n            this.parseDParameter(dObject, json, generated);\r\n        }\r\n        /// *** specific end *** ///\r\n        return generated; }\r\n\r\n\r\n    /*\r\n    static parseTEMPLATE(parent: DSomething, json: Json, generated: DModelElement[]): DModelElement[] {\r\n        if (!generated) generated = [];\r\n        if (!json) { json = {}; }\r\n        const childs = this.getChildren(json);\r\n        let dObject: DSomething = DSomething.new();\r\n        generated.push(dObject); dObject.father = parent.id;\r\n        if (parent) parent.CHILDCOLLECTION.push(dObject.id);\r\n        dObject.name = this.read(json, ECoreNamed.namee, defaultNameTODO);\r\n        /// *** specific start *** ///\r\n        for (let child of childs) {\r\n            this.parseDSOMETHING(dObject, json, generated);\r\n        }\r\n        /// *** specific end *** ///\r\n        return generated; }*/\r\n\r\n\r\n\r\n\r\n\r\n    /////////////////////////////////// generic\r\n    static XMLinlineMarker: string = '@';\r\n    static classTypePrefix: string = '#//'\r\n    private static getAnnotations(thiss: Json): Json[] {\r\n        const ret: any = thiss[ECorePackage.eAnnotations];\r\n        if (!ret || $.isEmptyObject(ret)) { return []; }\r\n        if (Array.isArray(ret)) { return ret; } else { return [ret]; } }\r\n\r\n    private static getDetails(thiss: Json): Json[] {\r\n        const ret: any = thiss[ECoreAnnotation.details];\r\n        if (!ret || $.isEmptyObject(ret)) { return []; }\r\n        if (Array.isArray(ret)) { return ret; } else { return [ret]; } }\r\n\r\n    private static getChildren(thiss: Json, throwError: boolean = false, functions: boolean = false): Json[] {\r\n        if (!thiss && !throwError) { return []; }\r\n        const mod = thiss[ECoreRoot.ecoreEPackage];\r\n        const pkg = thiss[ECorePackage.eClassifiers];\r\n        const cla = thiss[functions ? ECoreClass.eOperations : ECoreClass.eStructuralFeatures];\r\n        const fun = thiss[ECoreOperation.eParameters];\r\n        const lit = thiss[ECoreEnum.eLiterals];\r\n\r\n        const ret: any = mod || pkg || cla || fun || lit;\r\n        /*if ( ret === undefined || ret === null ) {\r\n          if (thiss['@name'] !== undefined) { ret = thiss; } // if it's the root with only 1 child arrayless\r\n        }*/\r\n        Log.ex( throwError && !ret, 'getChildren() Failed: ', thiss, ret);\r\n        // console.log('ret = ', ret, ' === ', {}, ' ? ', ($.isEmptyObject(ret) ? [] : [ret]));\r\n        if (!ret || $.isEmptyObject(ret)) { return []; }\r\n        if (Array.isArray(ret)) { return ret; } else { return [ret]; }\r\n    }\r\n\r\n    private static read(json: Json, field: string, valueIfNotFound: any = 'read<T>()CanThrowError'): string {\r\n        let ret: any = json ? json[field] : null;\r\n        if (ret !== null && ret !== undefined && field.indexOf(this.XMLinlineMarker) !== -1) {\r\n            Log.ex(U.isObject(ret, false, false, true), 'inline value |' + field + '| must be primitive.', ret);\r\n            ret = U.multiReplaceAll('' + ret, ['&amp;', '&#38;', '&quot;'], ['&', '\\'', '\"']);\r\n        }\r\n        if ((ret === null || ret === undefined)) {\r\n            Log.ex(valueIfNotFound === 'read<T>()CanThrowError', 'this.read<',  '> failed: field[' + field + '], json: ', json);\r\n            return valueIfNotFound; }\r\n        return ret; }\r\n\r\n    static write(json: Json, field: string, val: string | any[]): string | any[] {\r\n        if (val !== null && field.indexOf(EcoreParser.XMLinlineMarker) !== -1) {\r\n            Log.ex(val !== '' + val, 'inline value |' + field + '| must be a string.', val);\r\n            val = U.multiReplaceAll(val as string, ['&', '\\'', '\"'], ['&amp;', '&#38;', '&quot;']);\r\n        }\r\n        else Log.ex(val !== '' + val || !U.isObject(val, true), 'primitive values should be inserted only inline in the xml:', field, val);\r\n        json[field] = val;\r\n        return val; }\r\n\r\n    private static getEcoreTypeName(parent: DClassifier): string {\r\n        if (parent.className === DEnumerator.name || parent.className === DClass.name) return this.classTypePrefix + this.name;\r\n        // return Type.classTypePrefix + parent.parent.name; problem: need L-object to navigate\r\n        return Log.ex(\"getEcoreTypeName failed\", parent);\r\n    }\r\n\r\n}\r\n\r\nexport enum AccessModifier {\r\n    public = 'public',\r\n    private = 'private',\r\n    protected = 'protected',\r\n    internal = 'internal',\r\n    package = 'package',\r\n    protectedinternal = 'protected internal',\r\n    protectedprivate = 'protected private', }\r\n\r\nexport class ECoreRoot {\r\n    static ecoreEPackage: string;\r\n}\r\n\r\nexport class ECoreAnnotation {\r\n    static source: string;\r\n    static references: string;\r\n    static details: string;}\r\nexport class ECoreNamed {\r\n    static namee: string; }\r\n\r\nexport class ECoreDetail {\r\n    static key: string;\r\n    static value: string; }\r\n\r\nexport class ECorePackage {\r\n    static eAnnotations: string;\r\n    static eClassifiers: string;\r\n    static xmlnsxmi: string;\r\n    static xmlnsxsi: string;\r\n    static xmiversion: string;\r\n    static xmlnsecore: string;\r\n    static nsURI: string;\r\n    static nsPrefix: string;\r\n    static namee: string;\r\n}\r\n\r\n\r\nexport class ECoreClass {\r\n    static eAnnotations: string;\r\n    static eStructuralFeatures: string;\r\n    static xsitype: string;\r\n    static namee: string;\r\n    static eOperations: string;\r\n    static instanceTypeName: string;\r\n    static eSuperTypes: string;\r\n    static abstract: string;\r\n    static interface: string;\r\n\r\n    // static defaultValue = EcoreParser.XMLinlineMarker + 'defaultValue';  // visualizzato in ecore ma mai salvato dentro il file. inutilizzato\r\n    // nelle classi, assume il valore di \"[name] = [NumericValue]\" senza le [] negli enum.\r\n}\r\n\r\nexport class ECoreEnum {\r\n    static eAnnotations: string;\r\n    static xsitype: string;\r\n    static namee: string;\r\n    static instanceTypeName: string;\r\n    static serializable: string;\r\n    static eLiterals: string;\r\n}\r\n\r\nexport class EcoreLiteral {\r\n    static eAnnotations: string;\r\n    static namee: string;\r\n    static value: string;\r\n    static literal: string;\r\n}\r\n\r\n\r\nexport class ECoreReference {\r\n    static eAnnotations: string;\r\n    static xsitype: string;\r\n    static eType: string;\r\n    static containment: string;\r\n    static upperbound: string;\r\n    static lowerbound: string;\r\n    static namee: string; }\r\n\r\nexport class ECoreAttribute {\r\n    static eAnnotations: string;\r\n    static xsitype: string;\r\n    static eType: string;\r\n    static namee: string;\r\n    static lowerbound: string;\r\n    static upperbound: string;\r\n}\r\n\r\nexport class ECoreOperation {\r\n    static eAnnotations: string;\r\n    static eType: string;\r\n    static eexceptions: string;\r\n    static upperBound: string;\r\n    static lowerBound: string;\r\n    static unique: string;\r\n    static ordered: string;\r\n    static namee: string;\r\n    static eParameters: string; }\r\n\r\nexport class ECoreParameter {\r\n    static eAnnotations: string;\r\n    static namee: string;\r\n    static ordered: string;\r\n    static unique: string;\r\n    static lowerBound: string;\r\n    static upperBound: string;\r\n    static eType: string;\r\n}\r\n\r\nexport class ECoreObject{\r\n    static xmlns_xmi: string;\r\n    static xmlns_uri: never; // \"-xmlns:org.eclipse.example.modelname\": \"https://org/eclipse/example/modelname\", <b>key is dynamic</b>\r\n    static xmi_version: string;\r\n}\r\nexport class XMIModel {\r\n    static type: string;\r\n    static namee: string; }\r\n\r\n\r\n///////////////\r\n\r\nECoreRoot.ecoreEPackage = 'ecore:EPackage';\r\nECoreNamed.namee = EcoreParser.XMLinlineMarker + 'name';\r\n\r\nECorePackage.eAnnotations = ECoreClass.eAnnotations = ECoreEnum.eAnnotations = EcoreLiteral.eAnnotations =\r\n    ECoreReference.eAnnotations = ECoreAttribute.eAnnotations = ECoreOperation.eAnnotations = ECoreParameter.eAnnotations = 'eAnnotations';\r\n\r\nECoreAnnotation.source = EcoreParser.XMLinlineMarker + 'source';\r\nECoreAnnotation.references = EcoreParser.XMLinlineMarker + 'references'; // \"#/\" for target = package.\r\nECoreAnnotation.details = 'details'; // arr\r\nECoreDetail.key = EcoreParser.XMLinlineMarker + 'key'; // can have spaces\r\nECoreDetail.value = EcoreParser.XMLinlineMarker + 'value';\r\n\r\nECorePackage.eClassifiers = 'eClassifiers';\r\nECorePackage.xmlnsxmi = EcoreParser.XMLinlineMarker + 'xmlns:xmi'; // typical value: http://www.omg.org/XMI\r\nECorePackage.xmlnsxsi = EcoreParser.XMLinlineMarker + 'xmlns:xsi'; // typical value: http://www.w3.org/2001/XMLSchema-instance\r\nECorePackage.xmiversion = EcoreParser.XMLinlineMarker + 'xmi:version'; // typical value: \"2.0\"\r\nECorePackage.xmlnsecore = EcoreParser.XMLinlineMarker + 'xmlns:ecore';\r\nECorePackage.nsURI = EcoreParser.XMLinlineMarker + 'nsURI'; // typical value: \"http://org/eclipse/example/modelname\"\r\nECorePackage.nsPrefix = EcoreParser.XMLinlineMarker + 'nsPrefix'; // typical value: org.eclipse.example.modelname\r\nECorePackage.namee = EcoreParser.XMLinlineMarker + 'name';\r\n\r\nECoreClass.eStructuralFeatures = 'eStructuralFeatures';\r\nECoreClass.eOperations = 'eOperations';\r\nECoreClass.xsitype = EcoreParser.XMLinlineMarker + 'xsi:type'; // \"ecore:EClass\"\r\nECoreClass.namee = ECorePackage.namee;\r\nECoreClass.eSuperTypes = EcoreParser.XMLinlineMarker + 'eSuperTypes'; // space separated: \"#name1 #name2\"...\r\nECoreClass.instanceTypeName = EcoreParser.XMLinlineMarker + 'instanceTypeName';  // raw str\r\nECoreClass.instanceTypeName = EcoreParser.XMLinlineMarker + 'instanceTypeName';\r\nECoreClass.abstract = EcoreParser.XMLinlineMarker + 'abstract'; // bool\r\nECoreClass.interface = EcoreParser.XMLinlineMarker + 'interface'; // bool\r\n\r\nECoreEnum.instanceTypeName = ECoreClass.instanceTypeName;\r\nECoreEnum.serializable = 'serializable'; // \"false\", \"true\"\r\nECoreEnum.xsitype = ECoreClass.xsitype; // \"ecore:EEnum\"\r\nECoreEnum.eLiterals = 'eLiterals';\r\nECoreEnum.namee = ECorePackage.namee;\r\n\r\nEcoreLiteral.literal = 'literal';\r\nEcoreLiteral.namee = ECorePackage.namee;\r\nEcoreLiteral.value = 'value'; // any integer (-inf, +inf), not null. limiti = a type int 32 bit? vv4\r\n\r\nECoreReference.xsitype = EcoreParser.XMLinlineMarker + 'xsi:type'; // \"ecore:EReference\"\r\nECoreReference.eType = EcoreParser.XMLinlineMarker + 'eType'; // \"#//Player\"\r\nECoreReference.containment = EcoreParser.XMLinlineMarker + 'containment'; // \"true\"\r\nECoreReference.upperbound = EcoreParser.XMLinlineMarker + 'upperBound'; // \"@1\"\r\nECoreReference.lowerbound = EcoreParser.XMLinlineMarker + 'lowerBound'; // does even exists?\r\nECoreReference.namee = EcoreParser.XMLinlineMarker + 'name';\r\n\r\nECoreAttribute.xsitype = EcoreParser.XMLinlineMarker + 'xsi:type'; // \"ecore:EAttribute\",\r\nECoreAttribute.eType = EcoreParser.XMLinlineMarker + 'eType'; // \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\"\r\nECoreAttribute.namee = EcoreParser.XMLinlineMarker + 'name';\r\nECoreAttribute.lowerbound = EcoreParser.XMLinlineMarker + 'lowerBound';\r\nECoreAttribute.upperbound = EcoreParser.XMLinlineMarker + 'upperBound';\r\n\r\n\r\nECoreOperation.eParameters = 'eParameters';\r\nECoreOperation.namee = EcoreParser.XMLinlineMarker + 'name'; // \"EExceptionNameCustom\",\r\nECoreOperation.ordered = EcoreParser.XMLinlineMarker + 'ordered'; // \"false\",\r\nECoreOperation.unique = EcoreParser.XMLinlineMarker + 'unique'; // \"false\",\r\nECoreOperation.lowerBound = EcoreParser.XMLinlineMarker + 'lowerBound'; // \"5\", ma che senso ha su una funzione?? è il return?\r\nECoreOperation.upperBound = EcoreParser.XMLinlineMarker + 'upperBound';\r\nECoreOperation.eType = EcoreParser.XMLinlineMarker + 'eType'; // \"#//Classname\",\r\nECoreOperation.eexceptions = EcoreParser.XMLinlineMarker + 'eExceptions';\r\n// \"#//ClassnameException1 #//ClassNameException2 (also custom classes) ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt\r\n\r\nECoreParameter.namee = EcoreParser.XMLinlineMarker + 'name';\r\nECoreParameter.ordered = EcoreParser.XMLinlineMarker + 'ordered'; // \"false\";\r\nECoreParameter.unique = EcoreParser.XMLinlineMarker + 'unique'; // \"false\"\r\nECoreParameter.lowerBound = EcoreParser.XMLinlineMarker + 'lowerBound'; // \"1\"\r\nECoreParameter.upperBound = EcoreParser.XMLinlineMarker + 'upperBound'; // \"2\"\r\nECoreParameter.eType = EcoreParser.XMLinlineMarker + 'eType'; // \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubl\r\n\r\nECoreObject.xmlns_xmi = EcoreParser.XMLinlineMarker + 'xmlns:xmi'; // \"http://www.omg.org/XMI\"\r\n// ECoreObject.xmlns_uri = EcoreParser.XMLinlineMarker + 'xmlns:org.eclipse.example.modelname'; // \"https://org/eclipse/example/modelname\"\r\nECoreObject.xmi_version = EcoreParser.XMLinlineMarker + 'xmi:version'; // \"2.0\"\r\n\r\nXMIModel.type = EcoreParser.XMLinlineMarker + 'type';\r\nXMIModel.namee = EcoreParser.XMLinlineMarker + 'name';\r\n\r\n","import type { LVoidVertex } from \"../../joiner\";\r\nimport {\r\n    BEGIN,\r\n    Constructor,\r\n    Constructors,\r\n    CreateElementAction,\r\n    DEdge, DeleteElementAction,\r\n    Dictionary,\r\n    DPointerTargetable,\r\n    DtoL,\r\n    END,\r\n    getWParams,\r\n    GObject,\r\n    DState,\r\n    Leaf,\r\n    LEdge,\r\n    LGraphElement,\r\n    Log,\r\n    LogicContext,\r\n    LPointerTargetable,\r\n    Node,\r\n    Pack,\r\n    Pack1,\r\n    PackArr,\r\n    PointedBy,\r\n    Pointer,\r\n    Pointers,\r\n    RuntimeAccessible,\r\n    Abstract,\r\n    Instantiable,\r\n    RuntimeAccessibleClass,\r\n    Selectors,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    ShortAttribETypes,\r\n    ShortAttribSuperTypes,\r\n    store,\r\n    TargetableProxyHandler,\r\n    U,\r\n    unArr,\r\n    WPointerTargetable, DUser, DocString, GraphSize} from \"../../joiner\";\r\nimport {Info, Json, ObjectWithoutPointers, orArr, PrimitiveType} from \"../../joiner/types\";\r\n\r\nimport {\r\n    AccessModifier,\r\n    ECoreAnnotation,\r\n    ECoreAttribute,\r\n    ECoreClass,\r\n    ECoreEnum,\r\n    EcoreLiteral,\r\n    ECoreOperation,\r\n    ECorePackage,\r\n    EcoreParser,\r\n    ECoreReference,\r\n    ECoreRoot\r\n} from \"../../api/data\";\r\n\r\n\r\n@Node\r\n@RuntimeAccessible\r\nexport class DModelElement extends DPointerTargetable {\r\n    // static _super = DPointerTargetable;\r\n    // static logic: typeof LModelElement;\r\n    // static structure: typeof DModelElement;\r\n    // static singleton: LModelElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n\r\n    id!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n\r\n    public static new(): DModelElement {\r\n        Log.exx(\"DModelElement is abstract, cannot instantiate\");\r\n        return null as any;\r\n        //return new Constructors(new DModelElement('dwc')).DPointerTargetable().DModelElement().end();\r\n    }\r\n}\r\n\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DAnnotationDetail extends DPointerTargetable {\r\n    // todo\r\n}\r\n\r\n/*\r\ntype Pack1<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L>, R = {D:D, L:L, P:P} > = P|D|L\r\ntype PackArr<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L> , ARR = Pack1<D>> = (ARR)[];\r\ntype Pack<D extends DPointerTargetable, L extends LPointerTargetable = DtoL<D>, P extends Pointer<D, 0, 1, L> = Pointer<D, 0, 1, L> , ARR = Pack1<D>> = ARR | (ARR)[];*/\r\n\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LModelElement<Context extends LogicContext<DModelElement> = any, D extends DModelElement = DModelElement> extends LPointerTargetable {\r\n    // extends Mixin(DModelElement0, LPointerTargetable)\r\n    // static logic: typeof LModelElement;\r\n    // static structure: typeof DModelElement;\r\n    // static singleton: LModelElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    /*static ResolvePointer = resolvePointerFunction;\r\n    private static ResolvePointers? = resolvePointersFunction;\r\n    private resolvePointer<T extends DPointerTargetable = DPointerTargetable, LB extends number = 0, UB extends number = 0, RET extends LPointerTargetable = LPointerTargetable>(ptr: Pointer<T, LB, UB, RET>): RET | null {\r\n        return LModelElement.ResolvePointer(ptr); }\r\n    private resolvePointers<T extends DPointerTargetable = DPointerTargetable, LB extends number = 0, RET extends LPointerTargetable = LPointerTargetable>(ptr: Pointer<T, LB, 'N', RET>)\r\n        : (RET | null)[] { return resolvePointersFunction(ptr); }\r\n    */\r\n    public __raw!: DModelElement;\r\n    id!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    parent!: LModelElement[];\r\n    father!: LModelElement; // annotations can be children of everything. except them fathers are: Model, Package, Classifier(class+enum), Operation\r\n\r\n    private __info_of__father = {type: \"LModelElement\", txt:\"<a href=\\\"https://github.com/DamianoNaraku/jodel-react/wiki/LModelElement\\\"><span>The element containing this object.</span></a>\"};\r\n    public fatherList!: LModelElement[]; // chain of fathers going up recursively\r\n    annotations!: LAnnotation[];\r\n    children!: (LPackage | LClassifier | LTypedElement | LAnnotation | LObject | LValue)[];\r\n    __info_of_children__: Info = {type: \"LModelElement[]\", txt: <div>Merging of all the subelement collections (attributes, references, parameters...) except annotations</div>}\r\n    nodes!: LGraphElement[];\r\n    node!: LGraphElement | undefined;\r\n\r\n    // utilities to go up in the tree (singular names)\r\n    model!: LModel; // utility, follow father chain until get a Model parent or null\r\n    package!: LPackage | null;\r\n    class!: LClass | null;\r\n    enum!: LEnumerator | null;\r\n    operation!: LOperation | null;\r\n    subNodes!: LGraphElement[] | null;\r\n\r\n\r\n    property!: keyof DModelElement;\r\n    containers!: LNamedElement[]; // list of fathers until the model is reached.\r\n\r\n    public generateEcoreJson(loopDetectionloopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        throw new Error(\"cannot be called directly, should trigger getter. this is only for correct signature\");\r\n    }\r\n\r\n    private get_generateEcoreJson(context: Context): (loopdetectionobj: Dictionary<Pointer, DModelElement>) => Json {\r\n        return (loopdetectionobj) => this.generateEcoreJson_impl(context, loopdetectionobj);\r\n    }\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj?: Dictionary<Pointer, DModelElement>): Json {\r\n        return Log.exDevv(\"generateEcoreJson() should be overridden\", context);\r\n    }\r\n\r\n    public duplicate(deep: boolean = true): this {\r\n        return this.cannotCall(this.constructor.name + \"duplicate() class is abstract\");\r\n    }\r\n\r\n    public addAnnotation(source?: DAnnotation[\"source\"], details?: DAnnotation[\"details\"]): DAnnotation {\r\n        return this.cannotCall(\"addAnnotation\");\r\n    }\r\n\r\n    protected get_addAnnotation(context: Context): this[\"addAnnotation\"] {\r\n        return (source?: DAnnotation[\"source\"], details?: DAnnotation[\"details\"]) => DAnnotation.new(source, details, context.data.id, true);\r\n    }\r\n\r\n    protected set_containers(): boolean {\r\n        return this.cannotSet('containers');\r\n    }\r\n\r\n    protected get_containers(context: Context): LModelElement[\"containers\"] {\r\n        let thiss: LModelElement = context.proxyObject;\r\n        const ret: LModelElement[] = [thiss];\r\n        while (true) {\r\n            thiss = thiss.father;\r\n            if (!thiss) break;\r\n            ret.push(thiss);\r\n        }\r\n        return ret as LNamedElement[];\r\n    }\r\n\r\n\r\n    protected get_namespace(context: Context): string {\r\n        throw new Error(\"?? get namespace ?? todo\");\r\n        return \"\";\r\n    }\r\n\r\n    protected get_subNodes(context: LogicContext<LClass>, includingthis: boolean = false): LGraphElement[] {\r\n        const lclass: LClass = context.proxyObject as any;\r\n        let $class = $('[data-dataid=\"' + context.data.id + '\"]');\r\n        let $subnodes = $class.find('[data-nodeid]');\r\n\r\n        function mapfunc(this: HTMLElement) {\r\n            return this.dataset.nodeid;\r\n        }\r\n\r\n        let nodehtmlarr: HTMLElement[] = $subnodes.toArray();\r\n        if (includingthis) nodehtmlarr.push($class[0]);\r\n        let nodeidarr: string[] = nodehtmlarr.map((html: HTMLElement) => html.dataset.nodeid) as string[];\r\n        let state = store.getState();\r\n        let dnodes = nodeidarr.map(id => state.idlookup[id]).filter((d) => !!d);\r\n        return dnodes.map(d => LPointerTargetable.wrap(d)) as any;\r\n    }\r\n\r\n\r\n    // name -> redux (es. DClass -> classs)\r\n    protected get_property(context: Context): this[\"property\"] {\r\n        return (context.data.className.substring(1) + \"s\").toLowerCase() as any;\r\n    }\r\n\r\n    protected targetRemoved(context: Context, field: keyof DPointerTargetable): void {\r\n        context.proxyObject.delete();\r\n    }\r\n\r\n\r\n    protected get_fatherList(context: Context): LModelElement[] {\r\n        let ret: LModelElement[] = [context.proxyObject];\r\n        let loopdetection: Dictionary<Pointer, boolean> = {};\r\n        loopdetection[context.data.id] = true;\r\n        let current = this.get_father(context);\r\n        while (current) {\r\n            if (loopdetection[current.id]) { console.error(\"found loop\", {loopdetection, ret, current}); return ret; }\r\n            loopdetection[current.id] = true;\r\n            ret.push(current);\r\n            current = current.father;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public superDelete(): void {\r\n    }\r\n\r\n    protected get_superDelete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const father = data.father.__raw;\r\n        const fatherFieldName = U.getFatherFieldToDelete(data);\r\n        const reduxFieldName = U.getReduxFieldToDelete(data);\r\n        const ret = () => {\r\n            if (fatherFieldName) {\r\n                const fatherField: Pointer<DModelElement, 0, 'N', LModelElement> = father[fatherFieldName] as Pointer<DModelElement, 0, 'N', LModelElement>;\r\n                SetFieldAction.new(father, fatherFieldName, fatherField.indexOf(data.id), '-=', true);\r\n            }\r\n            if (reduxFieldName) {\r\n                const state = Selectors.getState();\r\n                const reduxField: Pointer<DModelElement, 0, 'N', LModelElement> = state[reduxFieldName];\r\n                SetRootFieldAction.new(reduxFieldName, reduxField.indexOf(data.id), '-=', true);\r\n            }\r\n            if(data.children) { for(let child of data.children) { child.delete(); } }\r\n            const selected = Selectors.getState()._lastSelected?.modelElement;\r\n            if(selected && selected === data.id) SetRootFieldAction.new('_lastSelected', {}, '', false);\r\n            DeleteElementAction.new(data.id);\r\n        };\r\n        return ret;\r\n    }\r\n\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const ret = () => {\r\n            context.proxyObject.superDelete();\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    // @ts-ignore\r\n    private get_until_parent<D extends Constructor, L extends DtoL<InstanceType<D>>>(l: LModelElement, d: DModelElement, father: D): L | null {\r\n        while (true) {\r\n            // console.log('get_until_parent', {l, d, father}, {dname: d.className, fname: father.name});\r\n            if (d.className === father.name) return l as L;\r\n            l = l.father;\r\n            let oldd = d;\r\n            d = l?.__raw;\r\n            if (oldd === d || !l) return null; // reached end of father chain (a model) without finding the desired parent.\r\n        }\r\n    }\r\n\r\n    protected get_nodes(context: Context): this[\"nodes\"] {\r\n        const nodes: LGraphElement[] = [];\r\n        const nodeElements = $('[data-dataid=\"' + context.data.id + '\"]');\r\n        for (let nodeElement of nodeElements) {\r\n            const nodeId = nodeElement.id;\r\n            if (nodeId) {\r\n                const lNode: LGraphElement | undefined = LPointerTargetable.wrap(nodeId);\r\n                if (lNode) nodes.push(lNode);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    protected get_node(context: Context): this[\"node\"] {\r\n        const nodes = context.proxyObject.nodes;\r\n        return nodes.filter( n => n.favoriteNode)[0] || nodes[0];\r\n    }\r\n\r\n    /*\r\n    protected get_nodes(context: Context): this[\"nodes\"] {\r\n        return context.data.nodes.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_nodes(val: PackArr<this[\"nodes\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'nodes', list);\r\n        return true;\r\n    }\r\n    */\r\n\r\n    protected get_model(context: Context): LModel {\r\n        return this.get_until_parent(context.proxyObject, context.data, DModel) as LModel;\r\n    }\r\n\r\n    protected get_package(context: Context): LPackage {\r\n        return this.get_until_parent(context.proxyObject, context.data, DPackage) as LPackage;\r\n    }\r\n\r\n    protected get_class(context: Context): LClass | null {\r\n        return this.get_until_parent(context.proxyObject, context.data, DClass);\r\n    } // todo: might be better for pergormance to erase this universal method and add implementations to every single L-class counting the correct amount of \"father\" navigations for each ( attrib to package? use attrib.father.father)\r\n    protected get_operation(context: Context): LOperation | null {\r\n        return this.get_until_parent(context.proxyObject, context.data, DOperation);\r\n    }\r\n\r\n    protected get_enum(context: Context): LEnumerator | null {\r\n        return this.get_until_parent(context.proxyObject, context.data, DEnumerator);\r\n    }\r\n\r\n    protected get_father(context: Context): LModelElement {\r\n        return LPointerTargetable.from(context.data.father);\r\n    }\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DPackage | DClassifier | DEnumerator | DEnumLiteral | DParameter | DStructuralFeature | DOperation | DObject | DValue, 1, 'N'> { // LPackage | LClassifier | LTypedElement | LAnnotation | LEnumLiteral | LParameter | LStructuralFeature | LOperation\r\n        return context.data.annotations ? [...context.data.annotations] : [];\r\n    }\r\n\r\n    protected get_children(context: Context): this[\"children\"] {\r\n        // return this.get_children_idlist(context).map(e => LPointerTargetable.from(e));\r\n        return LPointerTargetable.from(this.get_children_idlist(context));\r\n    }\r\n\r\n    protected set_children(a: never, context: Context): boolean {\r\n        return Log.exx('children is a derived read-only collection', this);\r\n    }\r\n\r\n\r\n    add_parent(val: Pack<this[\"parent\"]>, logicContext: Context): boolean { // todo: when will be used?\r\n        const ptr = Pointers.from(val);\r\n        return SetFieldAction.new(logicContext.data, 'parent', ptr, '+=', true); // todo: need to update children of the old and new parents\r\n    }\r\n\r\n    protected remove_parent(logicContext: Context): boolean { // todo: perchè senza bersaglio? perchè sempre elimina tutti?\r\n        return SetFieldAction.new(logicContext.data, 'parent', [], '', true);\r\n    }\r\n\r\n    protected get_parent(context: Context): this[\"parent\"] {\r\n        return LPointerTargetable.from(context.data.id);\r\n    }\r\n\r\n    protected set_parent(val: Pack<LAnnotation>, context: Context): boolean { // val: Pack<DModelElement>\r\n        const ptrs = Pointers.from(val);\r\n        SetFieldAction.new(context.data, 'father', ptrs?.[0] || ptrs, '', true);\r\n        return SetFieldAction.new(context.data, 'parent', ptrs, '', true);\r\n    }\r\n\r\n    add_annotation(val: Pack<this[\"annotations\"]>, context: Context): boolean {\r\n        const ptrs = Pointers.from(val);\r\n        return SetFieldAction.new(context.data, 'annotations', ptrs, '+=', true);\r\n    }\r\n\r\n    remove_annotation(val: Pack<this[\"annotations\"]>, context: Context): boolean { // todo: when this will be ever used? this should be triggered by LObject but only get_ / set_ and delete of whole elements should be triggerable.\r\n        //todo: remove as any\r\n        const ptrs: Pointer<DAnnotation, 1, 'N', LAnnotation> = Pointers.from(val) as any;\r\n        let indexes = ptrs.map(ptr => context.data.annotations.indexOf(ptr)).filter(p => p >= 0);\r\n        return SetFieldAction.new(context.data, 'annotations', indexes, '-=', true);\r\n    }\r\n\r\n    protected get_annotations(context: Context): this[\"annotations\"] {\r\n        return LPointerTargetable.fromPointer(context.data.annotations);\r\n    }\r\n\r\n    protected set_annotations(val: Pack<LAnnotation>, context: Context): boolean {\r\n        //  if (!Array.isArray(val)) val = [val];\r\n        //         val = val.map( v => (v instanceof LAnnotation ? v.id : ( Pointers.filterValid(v) ? v : null ))) as Pointer<DAnnotation>[];\r\n        const ptrs = Pointers.from(val);\r\n        SetFieldAction.new(context.data, 'annotations', ptrs, '', true);\r\n        return true;\r\n    }\r\n\r\n    protected get_addChild(context: Context): (type: string, ...params: any[]) => DModelElement { // just for add new, not for add pre-existing.\r\n        console.log(\"addchild\", context, this);\r\n        return (type, ...args: any) => {\r\n            let ret: undefined | ((...params: any[]) => DModelElement);\r\n            switch ((type || '').toLowerCase()) {\r\n                default:\r\n                    Log.ee('cannot find children type requested to add:', {type: (type || '').toLowerCase(), context});\r\n                    ret = () => undefined as any;\r\n                    break;\r\n                case \"attribute\":\r\n                    ret = this.get_class(context)?.addAttribute;\r\n                    break;\r\n                case \"class\":\r\n                    let current = context.proxyObject;\r\n                    ret = this.get_package(context)?.addClass;\r\n                    //ret = (this as any).get_addClass(context as any);\r\n                    break;\r\n                case \"package\":\r\n                    ret = (this.get_package(context) || this.get_model(context))?.addPackage;\r\n                    break;\r\n                case \"reference\":\r\n                    ret = this.get_class(context)?.addReference;\r\n                    break;\r\n                case \"enumerator\":\r\n                    ret = this.get_package(context)?.addEnumerator;\r\n                    break;\r\n                case \"literal\":\r\n                    ret = this.get_enum(context)?.addLiteral;\r\n                    break;\r\n                case \"operation\":\r\n                    ret = this.get_class(context)?.addOperation;\r\n                    break;\r\n                case \"parameter\":\r\n                    ret = this.get_operation(context)?.addParameter;\r\n                    break;\r\n                //case \"exception\": ret = ((exception: Pack1<LClassifier>) => { let rett = this.get_addException(context as any); rett(exception); }) as any; break;\r\n                case \"exception\":\r\n                    ret = (this as any).get_addException(context as any);\r\n                    break;\r\n            }\r\n            return ret ? ret(...args) : null as any;\r\n        }\r\n    }\r\n\r\n    /*\r\n        protected get_addPackage(context: Context): (() => void) {\r\n            let ret = () => {};\r\n            switch (context.data?.className) {\r\n                default: break;\r\n                case \"DModel\": ret = () => LModelElement.addPackage(context.data as DModel); break;\r\n                case \"DPackage\": ret = () => LModelElement.addSubPackage(context.data as DPackage); break;\r\n            }\r\n            ret();\r\n            return ret;\r\n        }\r\n\r\n        private static addPackage(dModel: DModel): void {\r\n            const lModel: LModel = LModelElement.from(dModel);\r\n            let name = 'package_' + 0;\r\n            let childrenNames: (string)[] = lModel.packages.map( p => p.name);\r\n            name = U.increaseEndingNumber(name, false, false, (newName) => childrenNames.indexOf(newName) >= 0)\r\n            const dPackage = DPackage.new(name);\r\n            CreateElementAction.new(dPackage);\r\n            let wModel = WPointerTargetable.fromD(dModel);\r\n            wModel.packages = [...dModel.packages, dPackage];\r\n        }\r\n\r\n        private static addSubPackage_obsolete(dPackage: never): void {\r\n            const lPackage: LPackage = LPackage.from(dPackage);\r\n            let name = 'subpackage_' + 0;\r\n            let childrenNames: (string)[] = lPackage.children.map( p => (p as LPackage).name);\r\n            name = U.increaseEndingNumber(name, false, false, (newName) => childrenNames.indexOf(newName) >= 0)\r\n            const dSubPackage = DPackage.new(name);\r\n            CreateElementAction.new(dSubPackage);\r\n            let wPackage = WPointerTargetable.fromD(dPackage);\r\n            wPackage.subpackages = [...dPackage.subpackages, dSubPackage];\r\n        }*/\r\n\r\n    protected get_addException(context: Context): () => void {\r\n        let ret = () => {\r\n        };\r\n        const dOperation: DOperation | null = (context.data?.className === \"DOperation\") ? context.data as DOperation : null;\r\n        if (dOperation) {\r\n            const dClass = DPointerTargetable.from(dOperation.father);\r\n            ret = () => {\r\n                SetFieldAction.new(dOperation, \"exceptions\", dClass.id, '+=', true);\r\n            }\r\n        }\r\n        ret();\r\n        return ret;\r\n    }\r\n\r\n    // activated by user in JSX\r\n    // todo: this.wrongAccessMessage(\"addClass\");\r\n    protected cannotCall(name: string, ...params: string[]): any {\r\n        Log.exDevv(name + ' should never be called directly, but should trigger get_' + name + '(' + params.join(', ') + '), this is only a signature for type checking.');\r\n    }\r\n\r\n    public addClass(): void {\r\n        this.cannotCall('addClass');\r\n    }\r\n\r\n    public addAttribute(): void {\r\n        this.cannotCall('addAttribute');\r\n    }\r\n\r\n    public addReference(): void {\r\n        this.cannotCall('addReference');\r\n    }\r\n\r\n    public addEnumerator(): void {\r\n        this.cannotCall('addEnumerator');\r\n    }\r\n\r\n    public addParameter(): void {\r\n        this.cannotCall('addParameter');\r\n    }\r\n\r\n    // chiedere al prof: cosa può lanciato come eccezione: se tutte le classi o se solo quelle che estendono Exception\r\n    public addException(exception?: DClassifier): () => void {\r\n        throw this.wrongAccessMessage(\"AddException\");\r\n    }\r\n\r\n    public addChild(type: string): DModelElement { return this.cannotCall(\"addChild\", type); }\r\n\r\n}\r\n\r\n/*function isValidPointer<T extends DPointerTargetable = DModelElement, LB extends number = 0, UB extends number = 1, RET extends LPointerTargetable = LModelElement>\r\n(p: Pointer<T, LB, UB, RET>, constraintType?: typeof DPointerTargetable): boolean {\r\n    const pointerval: RET | null = LModelElement.ResolvePointer(p);\r\n    if (!pointerval) return false;\r\n    if (!constraintType) return true;\r\n    return (pointerval instanceof constraintType); }*/\r\n\r\n/* todo:\r\nnel proxy aggiungi regola di default, se prendi qualcosa che inizia con \"set_X\" esplicitamente (dovrebbe farlo solo il dev)\r\nrichiama _set_X(context, ...params)     <---- nuova funzione set di default, anche this.x = x richiama _set_x\r\n\r\nil dev specifica set_x come public di sola firma senza implementazione (throw exception) e senza context\r\nil dev specifica _set_x come implementazione private\r\n\r\nper la get esiste solo _get_x, non \"get_x\"\r\n\r\n todo2: aggiungi readonly a tutti i campi L per non sbagliarsi e fare in modo che il dev usi sempre i \"set_\" che sono correttamente tipizzati\r\n*\r\n* */\r\n\r\n/*todo:\r\n* for every feature X: typed L, in CLASS_L0 with a side effects when they are edited (like need to update other data for consistency)\r\n*\r\n* dev will use this\r\n* protected set_X(val: D | L | Pointer<D> ) { throw new Error(\"set_X should never be executed, the proxy should redirect to get_set_X.\"); }\r\n* protected get_set_X( val: D | L | Pointer<D>, otherparams, ContextD>) { throw new Error(\"set_X should never be executed, the proxy should redirect to get_set_X.\"); }\r\n*\r\n*\r\n* */\r\n// @RuntimeAccessible export class _WModelElement extends LModelElement { }\r\n// export type WModelElement = DModelElement | LModelElement | _WModelElement;\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DModelElement);\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, LModelElement);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DAnnotation extends DModelElement { // extends Mixin(DAnnotation0, DModelElement)\r\n    // static singleton: LAnnotation;\r\n    // static logic: typeof LAnnotation;\r\n    // static structure: typeof DAnnotation;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // inherit redefine\r\n    id!: Pointer<DAnnotation, 1, 1, LAnnotation>;\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    // personal\r\n    source!: string;\r\n    details!: DAnnotationDetail[];//Dictionary<string, string>;\r\n\r\n    public static new(source?: DAnnotation[\"source\"], details?: DAnnotation[\"details\"], father?: Pointer, persist: boolean = true): DAnnotation {\r\n        // if (!name) name = this.defaultname(\"annotation \", father);\r\n        return new Constructors(new DAnnotation('dwc'), father, persist, undefined).DPointerTargetable().DModelElement().DAnnotation(source, details).end();\r\n    }\r\n}\r\n\r\n@Node\r\n@RuntimeAccessible\r\nexport class LAnnotation<Context extends LogicContext<DAnnotation> = any, D extends DAnnotation = DAnnotation> extends LModelElement {\r\n    // Mixin(DAnnotation0, LModelElement)\r\n    // @ts-ignore\r\n    __namee!: \"LAnnotation\" = \"LAnnotation\";\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DAnnotation;\r\n    id!: Pointer<DAnnotation, 1, 1, LAnnotation>;\r\n    // static singleton: LAnnotation;\r\n    // static logic: typeof LAnnotation;\r\n    // static structure: typeof DAnnotation;\r\n\r\n    // inherit redefine\r\n    parent!: LModelElement[];\r\n    father!: LModelElement;\r\n    annotations!: LAnnotation[];\r\n    // personal\r\n    source!: string;\r\n    details!: LAnnotationDetail[];// Dictionary<string, string> = {};\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        EcoreParser.write(json, ECoreAnnotation.source, context.data.source);\r\n        // EcoreParser.write(json, ECoreAnnotation.references, context.proxyObject.referencesStr);\r\n        EcoreParser.write(json, ECoreAnnotation.details, context.proxyObject.details.map(d => d.generateEcoreJson(loopDetectionObj)));\r\n        return json;\r\n    }\r\n\r\n    public duplicate(deep: boolean = true): this {\r\n        return this.cannotCall(this.constructor.name + \"duplicate()\");\r\n    }\r\n\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de = context.proxyObject.father.addAnnotation(context.data.source, (deep ? context.proxyObject.details.map(ldet => ldet.duplicate().__raw) : context.data.details));\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WAnnotation = le as any;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            END()\r\n            return le;\r\n        }\r\n    }\r\n\r\n    protected get_source(context: Context): this[\"source\"] {\r\n        return context.data.source;\r\n    }\r\n\r\n    protected set_source(val: this[\"source\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'source', val, '', false);\r\n        return true;\r\n    }\r\n\r\n    protected get_details(context: Context): this[\"details\"] {\r\n        return TargetableProxyHandler.wrapAll(context.data.details);\r\n    }\r\n\r\n    protected set_details(val: this[\"details\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'details', val);\r\n        return true;\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DModelElement, DAnnotation);\r\nRuntimeAccessibleClass.set_extend(LModelElement, LAnnotation);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class LAnnotationDetail<Context extends LogicContext<DAnnotationDetail> = any> extends LModelElement { // todo\r\n    father!: LAnnotation;\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        // loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        // if (context.data.name !== null) EcoreParser.write(json, ECoreDetail.key, context.data.name);\r\n        // if (context.data.value !== null) EcoreParser.write(json, ECoreDetail.value, context.data.value);\r\n        return json;\r\n    }\r\n\r\n    public duplicate(deep: boolean = true): this {\r\n        return this.cannotCall(this.constructor.name + \"duplicate()\");\r\n    }\r\n\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        Log.exDevv(\"LAnnotationDetail.getDuplicate(): todo\");\r\n        return () => this;\r\n        // return (deep: boolean = false) => (context.proxyObject as LAnnotationDetail).father.addAnnotationDetail( {...context.data._subMaps})\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DModelElement, DAnnotationDetail);\r\nRuntimeAccessibleClass.set_extend(LModelElement, LAnnotationDetail);\r\n@Node\r\n@RuntimeAccessible\r\nexport class DNamedElement extends DPointerTargetable { // Mixin(DNamedElement0, DAnnotation)\r\n    // static _super = DAnnotation;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LNamedElement;\r\n    // static logic: typeof LNamedElement;\r\n    // static structure: typeof DNamedElement;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DNamedElement, 1, 1, LNamedElement>;\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    // personal\r\n    name!: string;\r\n\r\n    public static new(name?: DNamedElement[\"name\"]): DNamedElement {\r\n        Log.exx(\"DNamedElement is abstract, cannot instantiate\");\r\n        return null as any;\r\n        // return new Constructors(new DNamedElement('dwc')).DPointerTargetable().DModelElement().DNamedElement(name).end();\r\n    }\r\n\r\n}\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LNamedElement<Context extends LogicContext<DNamedElement> = any> extends LModelElement { // Mixin(DNamedElement0, DAnnotation)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // public __raw!: DNamedElement;\r\n    id!: Pointer<DNamedElement, 1, 1, LNamedElement>;\r\n    // static singleton: LNamedElement;\r\n    // static logic: typeof LNamedElement;\r\n    // static structure: typeof DNamedElement;\r\n\r\n    // inherit redefine\r\n    parent!: LModelElement[];\r\n    father!: LModelElement;\r\n    annotations!: LAnnotation[];\r\n    // personal\r\n    name!: string;\r\n    namespace!: string;\r\n    fullname!: string;\r\n\r\n    protected set_containers(): boolean {\r\n        return this.cannotSet('containers');\r\n    }\r\n\r\n    protected get_containers(context: Context): LNamedElement[\"containers\"] {\r\n        let thiss: LNamedElement = context.proxyObject;\r\n        const ret: LNamedElement[] = [thiss];\r\n        while (true) {\r\n            thiss = thiss.father as LNamedElement;\r\n            if (!thiss) break;\r\n            ret.push(thiss);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    // protected get_namespace(context: Context): string { throw new Error(\"?? get namespace ?? todo\"); return \"\"; }\r\n\r\n    protected get_fullname(context: Context): this[\"fullname\"] {\r\n        const containers = this.get_containers(context);\r\n        let fullname: string = containers.reverse().slice(1, containers.length).map(c => c.name).join('.');\r\n        return fullname;\r\n    }\r\n\r\n\r\n    protected get_name(context: Context): this[\"name\"] {\r\n        return context.data.name;\r\n    }\r\n\r\n    protected set_name(val: this[\"name\"], context: Context): boolean {\r\n        let name = val;\r\n        const father = context.proxyObject.father;\r\n        if (father) {\r\n            const check = father.children.filter((child) => {\r\n                return (DNamedElement.fromPointer(child.id) as DNamedElement).name === name\r\n            });\r\n            if (check.length > 0) {\r\n                U.alert('error', 'Cannot rename the selected element since this name is already taken.');\r\n                return true\r\n            }\r\n        }\r\n        SetFieldAction.new(context.data, 'name', name, '', false);\r\n        return true;\r\n\r\n        /*\r\n        // this autofix removes spaces with _\r\n        if (val.match(/\\s/)) val = this._autofix_name(val, context);\r\n        // todo: validate if operation can be completed or need autocorrection, then either return false (invalid parameter cannot complete) or send newVal at redux\r\n        const fixedVal: string = val;\r\n        SetFieldAction.new(context.data, 'name', fixedVal, '', false);\r\n        return true;\r\n        */\r\n    }\r\n\r\n    protected _autofix_name(val: string, context: Context): string {\r\n        // NB: NON fare autofix di univocità nome tra i children o qualsiasi cosa dipendente dal contesto, questo potrebbe essere valido in alcuni modelli e invalido in altri e modificare un oggetto condiviso.\r\n        return val.replaceAll(/\\s/g, '_');\r\n    }\r\n\r\n    protected get_autofix_name(val: string, context: Context): (val: string) => string {\r\n        return (val: string) => this._autofix_name(val, context);\r\n    }\r\n\r\n    public autofix_name(val: string): string {\r\n        return this.wrongAccessMessage(\"autofix_name\");\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible export class _WNamedElement extends _WModelElement { }\r\n// export type WNamedElement = DNamedElement | LNamedElement | _WNamedElement;\r\nRuntimeAccessibleClass.set_extend(DModelElement, DNamedElement);\r\nRuntimeAccessibleClass.set_extend(LModelElement, LNamedElement);\r\n@RuntimeAccessible\r\nexport class DTypedElement extends DPointerTargetable { // Mixin(DTypedElement0, DNamedElement)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LTypedElement;\r\n    // static logic: typeof LTypedElement;\r\n    // static structure: typeof DTypedElement;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DTypedElement, 1, 1, LTypedElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    name!: string;\r\n    instances!: Pointer<DValue, 0, 'N', LValue>;\r\n    // personal\r\n    type!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean; // ?\r\n    required!: boolean; // ?\r\n\r\n\r\n    public static new(name?: DNamedElement[\"name\"], type?: DTypedElement[\"type\"], father?: Pointer, persist: boolean = true): DTypedElement {\r\n        Log.exx(\"DTypedElement is abstract, cannot instantiate\");\r\n        return null as any;\r\n        //return new Constructors(new DTypedElement('dwc'), father, persist, undefined).DPointerTargetable().DModelElement().DNamedElement(name).DTypedElement(type).end();\r\n    }\r\n}\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LTypedElement<Context extends LogicContext<DTypedElement> = any> extends LNamedElement { // extends Mixin(DTypedElement0, LNamedElement)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DTypedElement;\r\n    id!: Pointer<DTypedElement, 1, 1, LTypedElement>;\r\n    // static singleton: LTypedElement;\r\n    // static logic: typeof LTypedElement;\r\n    // static structure: typeof DTypedElement;\r\n\r\n    // inherit redefine\r\n    parent!: LModelElement[];\r\n    father!: LModelElement;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    instances!: LValue[];\r\n    // personal\r\n    type!: LClassifier;\r\n\r\n    primitiveType?: LClass;\r\n    classType?: LClass;\r\n    enumType?: LEnumerator;\r\n\r\n    ordered!: boolean;\r\n    unique!: boolean;\r\n    lowerBound!: number;\r\n    upperBound!: number;\r\n    many!: boolean;\r\n    required!: boolean;\r\n\r\n\r\n    protected get_classType(context: Context): this[\"classType\"] {\r\n        let type = this.get_type(context);\r\n        return type.isClass ? type as LClass : undefined;\r\n    }\r\n\r\n    protected get_enumType(context: Context): this[\"enumType\"] {\r\n        let type = this.get_type(context);\r\n        return type.isEnum ? type as LEnumerator : undefined;\r\n    }\r\n\r\n    protected get_primitiveType(context: Context): this[\"primitiveType\"] {\r\n        let type = this.get_type(context);\r\n        return type.isPrimitive ? type as LClass : undefined;\r\n    }\r\n\r\n    protected get_type(context: Context): this[\"type\"] {\r\n        return LPointerTargetable.from(context.data.type);\r\n    }\r\n\r\n    protected set_type(val: Pack1<this[\"type\"]>, context: Context): boolean {\r\n        const data = context.data;\r\n        let instances: LValue[] = context.proxyObject.instances;\r\n        SetFieldAction.new(context.data, 'type', Pointers.from(val), \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_ordered(context: Context): this[\"ordered\"] {\r\n        return context.data.ordered;\r\n    }\r\n\r\n    protected set_ordered(val: this[\"ordered\"], logicContext: Context): boolean {\r\n        return SetFieldAction.new(logicContext.data, 'ordered', val);\r\n    }\r\n\r\n    protected get_unique(context: Context): this[\"unique\"] {\r\n        return context.data.unique;\r\n    }\r\n\r\n    protected set_unique(val: this[\"unique\"], logicContext: Context): boolean {\r\n        return SetFieldAction.new(logicContext.data, 'unique', val);\r\n    }\r\n\r\n    protected get_lowerBound(context: Context): this[\"lowerBound\"] {\r\n        return context.data.lowerBound;\r\n    }\r\n\r\n    protected set_lowerBound(val: this[\"lowerBound\"], context: Context): boolean {\r\n        val = +val;\r\n        if (isNaN(val)) val = 0;\r\n        else val = Math.max(0, val);\r\n        SetFieldAction.new(context.data, 'lowerBound', val);\r\n        if (context.data.upperBound !=-1 && val > context.data.upperBound) SetFieldAction.new(context.data, 'upperBound', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_upperBound(context: Context): this[\"upperBound\"] {\r\n        return context.data.upperBound;\r\n    }\r\n\r\n    protected set_upperBound(val: this[\"upperBound\"], context: Context): boolean {\r\n        val = +val;\r\n        if (isNaN(val)) val = -1;\r\n        else val = Math.max(-1, val);\r\n        SetFieldAction.new(context.data, 'upperBound', val);\r\n        if (val !== -1 && val < context.data.lowerBound) SetFieldAction.new(context.data, 'lowerBound', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_many(context: Context): this[\"many\"] {\r\n        return context.data.many;\r\n    }\r\n\r\n    protected set_many(val: this[\"many\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'many', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_required(context: Context): this[\"required\"] {\r\n        return context.data.required;\r\n    }\r\n\r\n    protected set_required(val: this[\"required\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'required', val);\r\n        return true;\r\n    }\r\n\r\n    public typeToEcoreString(): string {\r\n        return this.cannotCall(\"typeToEcoreString\");\r\n    }\r\n\r\n    protected get_typeToEcoreString(context: Context): () => string {\r\n        // if (context.data.classType) return EcoreParser.classTypePrefix + context.proxyObject.classType.name;\r\n        // if (context.data.enumType) return EcoreParser.classTypePrefix + context.proxyObject.enumType.name;\r\n        // if (context.data.primitiveType) return context.proxyObject.primitiveType.long;\r\n        return () => context.proxyObject.type.typeEcoreString;\r\n    }\r\n\r\n    public typeToShortString(): string {\r\n        return this.cannotCall(\"typeToShortString\");\r\n    }\r\n\r\n    protected get_typeToShortString(context: Context): () => string {\r\n        // if (context.data.classType) return '' + context.data.classType.name;\r\n        // if (context.data.enumType) return '' + context.data.enumType.name;\r\n        // if (context.data.primitiveType) return '' + context.data.primitiveType.getName();\r\n        return () => context.proxyObject.type.typeString;\r\n    }\r\n\r\n    canOverride(context: Context, other: LTypedElement): boolean {\r\n        // i primitivi identici sono compatibili\r\n        if (context.data.type === other.type.id) return true;\r\n        let t1 = context.proxyObject.type;\r\n        let t2 = other.type;\r\n        // se entrambi primitivi\r\n        if (context.proxyObject.primitiveType && other.primitiveType) {\r\n            ShortAttribSuperTypes[t1.name as ShortAttribETypes].includes(other.name as ShortAttribETypes);\r\n        }\r\n        if (context.proxyObject.enumType) return t1 === t2; // only if they are same enumerator\r\n        // now assumed to be class type\r\n        if (other.classType === other.classType) return true;\r\n        return (context.proxyObject.classType as LClass).isExtending(other.classType as LClass);\r\n    }\r\n\r\n}\r\n\r\n// @RuntimeAccessible export class _WTypedElement extends _WNamedElement { }\r\n// export type WTypedElement = DTypedElement | LTypedElement | _WTypedElement;\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DTypedElement);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LTypedElement);\r\n@RuntimeAccessible\r\nexport /*abstract*/\r\nclass DClassifier extends DPointerTargetable { // extends DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LClassifier;\r\n    // static logic: typeof LClassifier;\r\n    // static structure: typeof DClassifier;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    parent: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    father!: Pointer<DPackage, 1, 1, LPackage>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    // personal\r\n    instanceClassName!: string;\r\n    // instanceClass: EJavaClass // ?\r\n    defaultValue!: Pointer<DObject, 1, 1, LObject>[] | string[];\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n\r\n    public static new(name?: DNamedElement[\"name\"], father?: Pointer, persist: boolean = true): DClassifier {\r\n        Log.exx(\"DClassifier is abstract, cannot instantiate\");\r\n        return null as any;\r\n        // return new Constructors(new DClassifier('dwc'), father, persist, undefined).DPointerTargetable().DModelElement().DNamedElement(name).DClassifier().end();\r\n    }\r\n}\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LClassifier<Context extends LogicContext<DClassifier> = any> extends LNamedElement { // extends DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DClassifier;\r\n    id!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    // static singleton: LClassifier;\r\n    // static logic: typeof LClassifier;\r\n    // static structure: typeof DClassifier;\r\n\r\n    // inherit redefine\r\n    parent!: LPackage[];\r\n    father!: LPackage;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    // personal\r\n    instanceClassName!: string;\r\n    // instanceClass: EJavaClass // ?\r\n    defaultValue!: LObject[] | string[];\r\n    isPrimitive!: boolean;\r\n    isClass!: boolean;\r\n    isEnum!: boolean;\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n\r\n    protected get_instanceClassName(context: Context): this[\"instanceClassName\"] {\r\n        return context.data.instanceClassName;\r\n    }\r\n\r\n    protected set_instanceClassName(val: this[\"instanceClassName\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'instanceClassName', val, \"\", false);\r\n        return true;\r\n    }\r\n\r\n    protected set_isPrimitive(val: this[\"isPrimitive\"], context: Context): boolean {\r\n        return this.cannotSet(\"isPrimitive\");\r\n    }\r\n\r\n    protected set_isClass(val: this[\"isClass\"], context: Context): boolean {\r\n        return this.cannotSet(\"isClass\");\r\n    }\r\n\r\n    protected set_isEnum(val: this[\"isEnum\"], context: Context): boolean {\r\n        return this.cannotSet(\"isEnum\");\r\n    }\r\n\r\n    protected get_isPrimitive(context: Context): this[\"isPrimitive\"] {\r\n        return !!((context.data as DClass).isPrimitive as unknown);\r\n    }\r\n\r\n    protected get_isClass(context: Context): this[\"isClass\"] {\r\n        return (context.data as DClass).isPrimitive ? false : context.data.className === DClass.name;\r\n    }\r\n\r\n    protected get_isEnum(context: Context): this[\"isEnum\"] {\r\n        return context.data.className === DEnumerator.name;\r\n    }\r\n\r\n    protected set_defaultValue(val: this[\"defaultValue\"] | DClassifier[\"defaultValue\"], context: Context): boolean {\r\n        if (typeof val !== \"object\" && !Pointers.isPointer(val)) {\r\n            // primitive default value for enums\r\n            SetFieldAction.new(context.data, 'defaultValue', val, \"\", false);\r\n        } else {\r\n            SetFieldAction.new(context.data, 'defaultValue', Pointers.from(val as Pointer[]) || [], \"\", true);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    typeEcoreString!: string;\r\n    typeString!: string;\r\n\r\n    private get_typeEcoreString(context: Context) {\r\n        return EcoreParser.classTypePrefix + context.data.name;\r\n    }\r\n\r\n    private get_typeString(context: Context) {\r\n        return context.data.name;\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible export class _WClassifier extends _WNamedElement { }\r\n// export type WClassifier = DClassifier | LClassifier | _WClassifier;\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DClassifier);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LClassifier);\r\n@RuntimeAccessible\r\nexport class DPackage extends DPointerTargetable { // extends DNamedElement\r\n    // static _super = DNamedElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LPackage;\r\n    // static logic: typeof LPackage;\r\n    // static structure: typeof DPackage;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DPackage, 1, 1, LPackage>;\r\n    parent: Pointer<DPackage | DModel, 0, 'N', LPackage | LModel> = [];\r\n    father!: Pointer<DPackage | DModel, 1, 1, LPackage | LModel>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    // personal\r\n    classifiers: Pointer<DClassifier, 0, 'N', LClassifier> = [];\r\n    subpackages: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    uri!: string;\r\n    prefix!: string;\r\n\r\n    public static new(name?: DNamedElement[\"name\"], uri?: DPackage[\"uri\"], prefix?: DPackage[\"prefix\"], father?: Pointer, persist: boolean = true, fatherType?: Constructor): DPackage {\r\n        let dmodel: DModel | undefined;\r\n        if (!name) {\r\n            dmodel = father && DPointerTargetable.from(father);\r\n            name = this.defaultname(\"pkg_\", dmodel);\r\n        }\r\n        /*if (!uri) {\r\n            dmodel = dmodel || father && DPointerTargetable.from(father);\r\n            uri = ('org.jodel-react.') + (dmodel?.name || \"username\"); // (DPointerTargetable.from(DUser.current)).name) todo: when DUser is done\r\n        }*/\r\n        return new Constructors(new DPackage('dwc'), father, persist, fatherType).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DPackage(uri, prefix).end();\r\n    }/*\r\n    static new15(setter: (d: DPackage) => void, father: DPackage[\"father\"], fatherType: Constructor, name?: string): DPackage {\r\n        if (!name) name = this.defaultname(\"pkg_\", father);\r\n        return new Constructors(new DPackage('dwc'), father, true, fatherType).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DPackage().end(setter);\r\n    }*/\r\n    static new2(setter: Partial<ObjectWithoutPointers<DPackage>>, father: DPackage[\"father\"], fatherType: Constructor, name?: string): DPackage {\r\n        if (!name) name = this.defaultname(\"pkg_\", father);\r\n        return new Constructors(new DPackage('dwc'), father, true, fatherType).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DPackage().end((d)=> { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class LPackage<Context extends LogicContext<DPackage> = any, C extends Context = Context, D extends DPackage = DPackage> extends LNamedElement { // extends DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DPackage;\r\n    id!: Pointer<DPackage, 1, 1, LPackage>;\r\n    // static singleton: LPackage;\r\n    // static logic: typeof LPackage;\r\n    // static structure: typeof DPackage;\r\n    // inherit redefine\r\n    parent!: (LPackage| LModel)[];  // ype 'LPackage' is missing the following properties from type 'LModelElement': get_set_parent, set_parent\r\n    father!: LPackage | LModel;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    // personal\r\n    classifiers!: LClassifier[];\r\n    subpackages!: LPackage[];\r\n    uri!: string;\r\n    prefix: string = '';\r\n    // derived\r\n    classes!: LClass[];\r\n    enums!: LEnumerator[];\r\n    enumerators!: LEnumerator[];\r\n\r\n    // utilities to go down in the tree (plural names)\r\n    allSubPackages!: LPackage[];\r\n    allSubEnums!: LEnumerator[];\r\n    allSubClasses!: LClass[];\r\n    operations!: LOperation[];\r\n    parameters!: LParameter[];\r\n    exceptions!: LClassifier[];\r\n    attributes!: LAttribute[];\r\n    references!: LReference[];\r\n    literals!: LEnumLiteral[];\r\n\r\n    protected generateEcoreJson_impltemplate(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: GObject = {};\r\n        return json; }\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const model: GObject = {};\r\n        const d = context.data;\r\n        let classarr = context.proxyObject.classes.map( c => c.generateEcoreJson(loopDetectionObj));\r\n        let enumarr = context.proxyObject.enums.map(e => e.generateEcoreJson(loopDetectionObj));\r\n        const classifiers: Json[] = Array.prototype.concat.call(classarr, enumarr);\r\n        model[ECorePackage.xmiversion] = '2.0';\r\n        model[ECorePackage.xmlnsxmi] = 'http://www.omg.org/XMI';\r\n        model[ECorePackage.xmlnsxsi] = 'http://www.w3.org/2001/XMLSchema-instance';\r\n        model[ECorePackage.xmlnsecore] = 'http://www.eclipse.org/emf/2002/Ecore';\r\n        model[ECorePackage.namee] = d.name;\r\n        model[ECorePackage.nsURI] = d.uri;\r\n        model[ECorePackage.nsPrefix] = d.prefix;//getModelRoot().namespace();\r\n        model[ECorePackage.eClassifiers] = classifiers;\r\n        return model; }\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addPackage(context.data.name, context.data.uri, context.data.prefix) as D;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WPackage = le as any;\r\n            we.subpackages = deep ? context.proxyObject.subpackages.map( lchild => lchild.duplicate(deep).id) : context.data.subpackages;\r\n            we.classifiers = deep ? context.proxyObject.classifiers.map( lchild => lchild.duplicate(deep).id) : context.data.classifiers;\r\n            we.annotations = deep ? context.proxyObject.annotations.map( lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            END()\r\n            return le;\r\n        }\r\n    }\r\n\r\n    public addPackage(name?: D[\"name\"], uri?: D[\"uri\"], prefix?: D[\"prefix\"]): DPackage { return this.cannotCall(\"addPackage\"); }\r\n    protected get_addPackage(context: Context): this[\"addPackage\"] {\r\n        return (name?: D[\"name\"], uri?: D[\"uri\"], prefix?: D[\"prefix\"]) => {\r\n            const me = DPackage.new(name, uri, prefix, context.data.id, true, DPackage);\r\n            return me;\r\n        }\r\n    }\r\n\r\n    public addClass(name?: DClass[\"name\"], isInterface?: DClass[\"interface\"], isAbstract?: DClass[\"abstract\"], isPrimitive?: DClass[\"isPrimitive\"],\r\n                    isPartial?: DClass[\"partial\"], partialDefaultName?: DClass[\"partialdefaultname\"]): DClass {\r\n        return this.cannotCall(\"addClass\"); }\r\n    protected get_addClass(context: Context): this[\"addClass\"] {\r\n        return (name?: DClass[\"name\"], isInterface?: DClass[\"interface\"], isAbstract?: DClass[\"abstract\"], isPrimitive?: DClass[\"isPrimitive\"],\r\n                isPartial?: DClass[\"partial\"], partialDefaultName?: DClass[\"partialdefaultname\"]\r\n        ) => DClass.new(name, isInterface, isAbstract, isPrimitive, isPartial, partialDefaultName, context.data.id, true); }\r\n\r\n    public addEnum(...p:Parameters<this[\"addEnumerator\"]>): DEnumerator { return this.addEnumerator(...p); }\r\n    protected get_addEnum(context: Context): this[\"addEnumerator\"] { return this.get_addEnumerator(context); }\r\n    public addEnumerator(name?: DEnumerator[\"name\"]): DEnumerator { return this.cannotCall(\"addEnumerator\"); }\r\n    protected get_addEnumerator(context: Context): this[\"addEnumerator\"] {\r\n        return (name?: DEnumerator[\"name\"]) => DEnumerator.new(name, context.data.id, true); }\r\n\r\n    protected get_classes(context: Context): LClass[] {\r\n        let classifiers = DPointerTargetable.fromPointer(context.data.classifiers as Pointer<DClassifier, 1, 1, LClassifier>[]);\r\n        let enumerators = classifiers.filter(dc => dc?.className === DClass.name ) as DClass[];\r\n        return LPointerTargetable.from(enumerators.map(e=> e.id)); }\r\n    protected get_enums(context: Context): LEnumerator[] { return this.get_enumerators(context); }\r\n    protected get_enumerators(context: Context): LEnumerator[] {\r\n        let classifiers = DPointerTargetable.fromPointer(context.data.classifiers as Pointer<DClassifier, 1, 1, LClassifier>[]);\r\n        let enumerators = classifiers.filter(dc => dc?.className === DEnumerator.name ) as DEnumerator[];\r\n        return LPointerTargetable.from(enumerators.map(e=> e.id)); }\r\n\r\n    private get_allSubClasses(context: Context): LClass[] {\r\n        const s: DState = store.getState();\r\n        return this.get_allSubPackages(context, s).flatMap(p => p.classes || []); }\r\n    private get_allSubEnums(context: Context): LEnumerator[] { return this.get_allSubEnumerators(context); }\r\n    private get_allSubEnumerators(context: Context): LEnumerator[] {\r\n        const s: DState = store.getState();\r\n        return this.get_allSubPackages(context, s).flatMap(p => (p.enums || []));\r\n    }\r\n\r\n    private get_allSubPackages(context: Context, state?: DState): LPackage[] {\r\n        // return context.data.packages.map(p => LPointerTargetable.from(p));\r\n        state = state || store.getState();\r\n        let tocheck: Pointer<DPackage>[] = context.data.subpackages || [];\r\n        let checked: Dictionary<Pointer, true> = {};\r\n        checked[context.data.id] = true;\r\n        while (tocheck.length) {\r\n            let newtocheck: Pointer<DPackage>[] = [];\r\n            for (let ptr of tocheck) {\r\n                if (checked[ptr]) throw new Error(\"loop in packages containing themselves\");\r\n                checked[ptr] = true;\r\n                let dpackage: DPackage = DPointerTargetable.from(ptr, state);\r\n                U.arrayMergeInPlace(newtocheck, dpackage?.subpackages);\r\n            }\r\n            tocheck = newtocheck;\r\n        }\r\n        return LPointerTargetable.from(Object.keys(checked), state);\r\n    }\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DPackage | DClassifier, 1, 'N'> {\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | DPackage | DClassifier, 1, 'N'>, ...context.data.subpackages, ...context.data.classifiers]; }\r\n\r\n    protected get_classifiers(context: Context): this[\"classifiers\"] {\r\n        return context.data.classifiers.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_classifiers(val: PackArr<this[\"classifiers\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.classifiers;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'classifiers', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_subpackages(context: Context): this[\"subpackages\"] {\r\n        return context.data.subpackages.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_subpackages(val: PackArr<this[\"subpackages\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.subpackages;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'subpackages', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_uri(context: Context): this[\"uri\"] {\r\n        if (context.data.uri) return context.data.uri + \".\" + context.data.name;\r\n        return ('org.jodel-react.') + (context.proxyObject.model?.name || \"username\") + \".\" + context.data.name;\r\n    }\r\n    protected set_uri(val: this[\"uri\"], context: Context): boolean {\r\n        val = val || '';\r\n        let pos = val.lastIndexOf(context.data.name);\r\n        if (pos) val = val.substring(0, pos - 1); // removes final name and dot, to keep the name part dinamically added in the getter.\r\n        SetFieldAction.new(context.data, 'uri', val, \"\", false);\r\n        return true;\r\n    }\r\n    protected get_prefix(context: Context): this[\"uri\"] { return context.data.prefix; }\r\n    protected set_prefix(val: this[\"prefix\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'prefix', val, \"\", false);\r\n        return true;\r\n    }\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const l = context.proxyObject;\r\n        const ret = () => {\r\n            let canBeDeleted = true;\r\n            for(let me of l.classes) {\r\n                if(!canBeDeleted) break;\r\n                canBeDeleted = me.instances.length === 0;\r\n            }\r\n            if(canBeDeleted) {\r\n                // super.delete(context);\r\n                l.superDelete();\r\n            }\r\n            else { U.alert('error', 'Cannot delete the selected package since there are instances.'); }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n}\r\n// @RuntimeAccessible export class _WPackage extends _WNamedElement { }\r\n// export type WPackage = DPackage | LPackage | _WPackage;\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DPackage);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LPackage);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DOperation extends DPointerTargetable { // extends DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LOperation;\r\n    // static logic: typeof LOperation;\r\n    // static structure: typeof DOperation;\r\n\r\n    // inherit redefine\r\n    instances!: never[];\r\n    id!: Pointer<DOperation, 1, 1, LObject>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    parent: Pointer<DClass, 0, 'N', LClass> = [];\r\n    father!: Pointer<DClass, 1, 1, LClass>;\r\n    name!: string;\r\n    type!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    // personal\r\n    exceptions: Pointer<DClassifier, 0, 'N', LClassifier> = [];\r\n    parameters: Pointer<DParameter, 0, 'N', LParameter> = [];\r\n    visibility: AccessModifier = AccessModifier.private;\r\n    implementation!: string;\r\n\r\n    public static new(name?: DNamedElement[\"name\"], type?: DOperation[\"type\"], exceptions: DOperation[\"exceptions\"] = [], father?: DOperation[\"father\"], persist: boolean = true): DOperation {\r\n        if (!name) name = this.defaultname(\"fx_\", father);\r\n        if (!type) type = father;\r\n        return new Constructors(new DOperation('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DOperation(exceptions).end();\r\n    }\r\n\r\n    static new2(setter: Partial<ObjectWithoutPointers<DOperation>>, father: DOperation[\"father\"], type?: DOperation[\"type\"], name?: string): DOperation {\r\n        if (!name) name = this.defaultname((name || \"fx_\"), father);\r\n        if (!type) type = father;\r\n        return new Constructors(new DOperation('dwc'), father, true).DPointerTargetable().DModelElement().DTypedElement(type)\r\n            .DNamedElement(name).DTypedElement(type).DOperation().end((d)=> { Object.assign(d, setter); });\r\n    }\r\n\r\n}\r\n\r\n@Node\r\n@RuntimeAccessible\r\nexport class LOperation<Context extends LogicContext<DOperation> = any, C extends Context = Context, D extends DOperation = DOperation>  extends LTypedElement { // extends DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DOperation;\r\n    id!: Pointer<DOperation, 1, 1, LOperation>;\r\n    // static singleton: LOperation;\r\n    // static logic: typeof LOperation;\r\n    // static structure: typeof DOperation;\r\n\r\n    // inherit redefine\r\n    instances!: never[];\r\n    annotations!: LAnnotation[];\r\n    parent!: LClass[];\r\n    father!: LClass;\r\n    name!: string;\r\n    namespace!: string;\r\n    type!: LClassifier;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    // personal\r\n    implementation!: string;\r\n    signatureImplementation!: string; // (param1 /*type*/, param2 = value, ...) => /*return type*/\r\n    exceptions!: LClassifier[];\r\n    parameters!: LParameter[];\r\n    visibility!: AccessModifier;\r\n\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        json[ECoreOperation.eParameters] = context.proxyObject.parameters.map( par => par.generateEcoreJson(loopDetectionObj));\r\n        EcoreParser.write(json, ECoreOperation.namee, context.data.name);\r\n        EcoreParser.write(json, ECoreOperation.eType, context.proxyObject.type.typeEcoreString);\r\n        EcoreParser.write(json, ECoreOperation.lowerBound, '' + context.data.lowerBound);\r\n        EcoreParser.write(json, ECoreOperation.upperBound, '' + context.data.upperBound);\r\n        EcoreParser.write(json, ECoreOperation.eexceptions, context.proxyObject.exceptions.map( (l: LClassifier) => l.typeEcoreString).join(' ')); // todo: not really sure it's this format\r\n        EcoreParser.write(json, ECoreOperation.ordered, '' + context.data.ordered);\r\n        EcoreParser.write(json, ECoreOperation.unique, '' + context.data.unique);\r\n        return json; }\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addOperation(context.data.name, context.data.type) as D;\r\n            de.many = context.data.many;\r\n            de.lowerBound = context.data.lowerBound;\r\n            de.upperBound = context.data.upperBound;\r\n            de.ordered = context.data.ordered;\r\n            de.required = context.data.required;\r\n            de.unique = context.data.unique;\r\n            de.visibility = context.data.visibility;\r\n            de.exceptions = context.data.exceptions;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WOperation = le as any;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            we.parameters = deep ? context.proxyObject.parameters.map(lchild => lchild.duplicate(deep).id) : context.data.parameters;\r\n            we.exceptions = context.data.exceptions;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n    public addParameter(name?: DParameter[\"name\"], type?: DParameter[\"type\"]): DParameter { return this.cannotCall(\"addParameter\"); }\r\n    protected get_addParameter(context: Context): this[\"addParameter\"] {\r\n        return (name?: DParameter[\"name\"], type?: DParameter[\"type\"]) => DParameter.new(name, type, context.data.id, true); }\r\n\r\n    public execute(thiss: LObject, ...params: any): any { return this.cannotCall(\"execute\"); }\r\n    protected get_execute(context: Context): ((thiss: LObject, ...params: any[])=>any) {\r\n        return (thiss: LObject, ...params: any) => {\r\n            let func: Function = eval(this.get_signatureImplementation(context, true) + \" {\\n\"+ context.data.implementation + \"\\n}\");\r\n            func.apply(thiss, params);\r\n        };\r\n    }\r\n    public set_implementation(val: this[\"implementation\"], context: Context): boolean { return SetFieldAction.new(context.data.id, \"implementation\", val, undefined, false); }\r\n    public get_implementation(context: Context): this[\"implementation\"] { return context.data.implementation; }\r\n    public set_signatureImplementation(val: this[\"signatureImplementation\"], context: Context): boolean { return this.cannotSet(\"signatureImplementation\"); }\r\n    public get_signatureImplementation(context: Context, typedComments: boolean = true): this[\"signatureImplementation\"] {\r\n        let operation = context.proxyObject;\r\n        let typedcommentpre = typedComments ? \"/* :\" : ': ' ;\r\n        let typedcommentpost = typedComments ? \" */\" : '';\r\n        return \"(\" +\r\n            operation.parameters.map(\r\n                (p) => p.name + (p.defaultValue !== undefined ? \"=\" + p.defaultValue : typedcommentpre + p.typeToShortString() + typedcommentpost)\r\n            ).join(\", \")\r\n            + \") => \" +typedcommentpre.replace(\":\", \"\") + operation.type + typedcommentpost;\r\n    }\r\n    public get_signature(context: Context): this[\"signatureImplementation\"] { return this.get_signatureImplementation(context, false); }\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DClassifier | DParameter, 1, 'N'> {\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | DParameter | DClassifier, 1, 'N'>, ...context.data.exceptions, ...context.data.parameters]; }\r\n\r\n    protected get_exceptions(context: Context): this[\"exceptions\"] {\r\n        return context.data.exceptions.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_exceptions(val: PackArr<this[\"exceptions\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'exceptions', list, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_parameters(context: Context): this[\"parameters\"] {\r\n        return context.data.parameters.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_parameters(val: PackArr<this[\"parameters\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.parameters;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'parameters', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    // protected get_type(context: Context): this[\"type\"] { return context.proxyObject.parameters[0].type; }\r\n    // protected set_type(val: Pack1<this[\"type\"]>, context: Context): this[\"type\"] { return super.set_type(val, context); }\r\n\r\n    _mark(b: boolean, superchildren: LOperation, override: string) {\r\n\r\n    }\r\n\r\n    _canOverride(superchildren: LOperation) {\r\n        return undefined;\r\n    }\r\n\r\n    _canPolymorph(superchildren: LOperation) {\r\n        return undefined;\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DTypedElement, DOperation);\r\nRuntimeAccessibleClass.set_extend(LTypedElement, LOperation);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DParameter extends DPointerTargetable { // extends DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LParameter;\r\n    // static logic: typeof LParameter;\r\n    // static structure: typeof DParameter;\r\n\r\n    // inherit redefine\r\n    instances!: never[];\r\n    id!: Pointer<DParameter, 1, 1, LParameter>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    parent: Pointer<DOperation, 0, 'N', LOperation> = [];\r\n    father!: Pointer<DOperation, 1, 1, LOperation>;\r\n    name!: string;\r\n    type!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    defaultValue!: any;\r\n    // personal\r\n\r\n    public static new(name?: DNamedElement[\"name\"], type?: DTypedElement[\"type\"], father?: Pointer, persist: boolean = true): DParameter {\r\n        if (!type) type = LPointerTargetable.from(Selectors.getFirstPrimitiveTypes()).id; // default type as string\r\n        if (!name) name = this.defaultname(\"arg\", father);\r\n        return new Constructors(new DParameter('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DParameter().end();\r\n    }\r\n\r\n    static new2(setter: Partial<ObjectWithoutPointers<DParameter>>, father: DParameter[\"father\"], type?: DParameter[\"type\"], name?: DParameter[\"name\"]): DParameter {\r\n        if (!name) name = this.defaultname((name || \"arg\"), father);\r\n        return new Constructors(new DParameter('dwc'), father, true).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).end((d) => { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class LParameter<Context extends LogicContext<DParameter> = any, C extends Context = Context, D extends DParameter = DParameter>  extends LTypedElement { // extends DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DParameter;\r\n    id!: Pointer<DParameter, 1, 1, LParameter>;\r\n    // static singleton: LParameter;\r\n    // static logic: typeof LParameter;\r\n    // static structure: typeof DParameter;\r\n\r\n    // inherit redefine\r\n    instances!: never[];\r\n    annotations!: LAnnotation[];\r\n    parent!: LOperation[];\r\n    father!: LOperation;\r\n    name!: string;\r\n    namespace!: string;\r\n    type!: LClassifier;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    // personal\r\n    defaultValue!: any;\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        const l = context.proxyObject;\r\n        const d = context.data;\r\n        EcoreParser.write(json, ECoreOperation.lowerBound, '' + d.lowerBound);\r\n        EcoreParser.write(json, ECoreOperation.upperBound, '' + d.upperBound);\r\n        EcoreParser.write(json, ECoreOperation.ordered, '' + d.ordered);\r\n        EcoreParser.write(json, ECoreOperation.unique, '' + d.unique);\r\n        EcoreParser.write(json, ECoreOperation.eType, '' + l.type.typeEcoreString);\r\n        return json; }\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addParameter(context.data.name, context.data.type) as D;\r\n            de.many = context.data.many;\r\n            de.lowerBound = context.data.lowerBound;\r\n            de.upperBound = context.data.upperBound;\r\n            de.ordered = context.data.ordered;\r\n            de.required = context.data.required;\r\n            de.unique = context.data.unique;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WParameter = le as any;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n    /*\r\n        protected get_delete(context: LogicContext<DParameter>): () => void {\r\n            let ret = () => {};\r\n            const dParameter: DParameter = context.data;\r\n            const dOperation: DOperation = Selectors.getDElement<DOperation>(dParameter.father);\r\n            if (dOperation.parameters.indexOf(dParameter.id) !== 0) {\r\n                const dClassifier: DClassifier | undefined = Selectors.getDElement<DClass>(dParameter.type as string); //first parameter is return type so his type is undefined\r\n                ret = () => {\r\n                    SetFieldAction.new(dOperation,\"parameters\", U.removeFromList(dOperation.parameters, dParameter.id), '', true);\r\n                    if (dClassifier) {\r\n                        // SetFieldAction.new(dClassifier, \"pointedBy\", U.removeFromList(dClassifier.pointedBy, dParameter.id));\r\n                    }\r\n                    // SetRootFieldAction.new(\"parameters\", U.removeFromList(Selectors.getAllParameters(), dParameter.id), '', true);\r\n                    new DeleteElementAction(dParameter);\r\n                }\r\n            } else {\r\n                // when deleting return type (null = void)\r\n                ret = () => {\r\n                    SetFieldAction.new(dParameter, \"type\", null as any); // while reworking .delete(): null = void, questo setta void e deve essere tenuto come azione diversa dal default delete\r\n                };\r\n            }\r\n            ret();\r\n            return ret;\r\n        }\r\n        */\r\n}\r\nRuntimeAccessibleClass.set_extend(DTypedElement, DParameter);\r\nRuntimeAccessibleClass.set_extend(LTypedElement, LParameter);\r\n@RuntimeAccessible\r\nexport class DClass extends DPointerTargetable { // extends DClassifier\r\n    // static _super = DClassifier;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LClass;\r\n    // static logic: typeof LClass;\r\n    // static structure: typeof DClass;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    id!: Pointer<DClass, 1, 1, LClass>;\r\n    instanceClassName!: string;\r\n    parent: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    father!: Pointer<DPackage, 1, 1, LPackage>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    defaultValue!: Pointer<DObject, 1, 1, LObject>[];\r\n    // personal\r\n    // isSuperTypeOf(someClass: DClassifier): boolean { return todoret; }\r\n    // getEstructuralFeatureByID(featureID: number): DStructuralFeature { return todoret; }\r\n    // getEstructuralFeature(featureName: string): DStructuralFeature { return todoret; }\r\n    abstract: boolean = false;\r\n    interface: boolean = false;\r\n    instances: Pointer<DObject, 0, 'N', LObject> = [];\r\n    operations: Pointer<DOperation, 0, 'N', LOperation> = [];\r\n    features: Pointer<DStructuralFeature, 0, 'N', LStructuralFeature> = [];\r\n    references: Pointer<DReference, 0, 'N', LReference> = [];\r\n    attributes: Pointer<DAttribute, 0, 'N', LAttribute> = [];\r\n    referencedBy: Pointer<DReference, 0, 'N', LReference> = [];\r\n    extends: Pointer<DClass, 0, 'N', LClass> = [];\r\n    extendedBy: Pointer<DClass, 0, 'N', LClass> = [];\r\n\r\n    // mia aggiunta:\r\n    isPrimitive!: boolean;\r\n    implements: Pointer<DClass, 0, 'N', LClass> = [];\r\n    implementedBy: Pointer<DClass, 0, 'N', LClass> = [];\r\n    partial!: boolean;\r\n    partialdefaultname!: string;\r\n\r\n    // for m1:\r\n    // hideExcessFeatures: boolean = true; // isn't it like partial?? // old comment: se attivo questo e creo una DClass di sistema senza nessuna feature e di nome Object, ho creato lo schema di un oggetto schema-less a cui tutti sono conformi\r\n\r\n    public static new(name?: DNamedElement[\"name\"], isInterface: DClass[\"interface\"] = false, isAbstract: DClass[\"abstract\"] = false, isPrimitive: DClass[\"isPrimitive\"] = false, partial?: DClass[\"partial\"],\r\n                      partialDefaultName?: DClass[\"partialdefaultname\"], father?: Pointer, persist: boolean = true): DClass {\r\n        if (!name) name = this.defaultname(\"concept \", father);\r\n        return new Constructors(new DClass('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DClassifier().DClass(isInterface, isAbstract, isPrimitive, partial, partialDefaultName).end();\r\n    }\r\n\r\n    static new2(setter: Partial<ObjectWithoutPointers<DClass>>, father: DClass[\"father\"], name?: DClass[\"name\"]): DClass {\r\n        if (!name) name = this.defaultname((name || \"concept \"), father);\r\n        return new Constructors(new DClass('dwc'), father, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DClassifier().DClass().end((d) => { Object.assign(d, setter); });\r\n    }\r\n\r\n}\r\n\r\n@Instantiable // (LObject)\r\n@Node\r\n@RuntimeAccessible\r\nexport class LClass<D extends DClass = DClass, Context extends LogicContext<DClass> = any, C extends Context = Context>  extends LClassifier{ // extends DClassifier\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DClass;\r\n    id!: Pointer<DClass, 1, 1, LClass>;\r\n    // static singleton: LClass;\r\n    // static logic: typeof LClass;\r\n    // static structure: typeof DClass;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    instanceClassName!: string;\r\n    parent!: LPackage[];\r\n    father!: LPackage;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    defaultValue!: LObject[];\r\n    // personal\r\n    // isSuperTypeOf(someClass: DClassifier): boolean { return todoret; }\r\n    // getEstructuralFeatureByID(featureID: number): DStructuralFeature { return todoret; }\r\n    // getEstructuralFeature(featureName: string): DStructuralFeature { return todoret; }\r\n    abstract!: boolean;\r\n    interface!: boolean;\r\n    instances!: LObject[];\r\n    operations!: LOperation[];\r\n    features!: LStructuralFeature[];\r\n    references!: LReference[];\r\n    attributes!: LAttribute[];\r\n    referencedBy!: LReference[];\r\n    extends!: LClass[];\r\n    __info_of__extends: Info = {type:\"LClass[]\", txt: \"classes directly extended by this. check also: \\\"superclasses\\\".\"}\r\n    extendsChain!: LClass[];  // list of all super classes (father, father of father, ...)  todo: isn't this the same as \"superclasses\" ? check implementation differeces, eventually remove one.\r\n    extendedBy!: LClass[];\r\n    nodes!: LGraphElement[]; // ipotesi, non so se tenerlo\r\n\r\n    // fittizi:\r\n    public superclasses!: LClass[];\r\n    __info_of__superclasses: Info = {type:\"LClass[]\", txt: \"all classes directly and indirectly extended by this. same as check also: \\\"extends\\\".\"}\r\n    public allSubClasses!: LClass[];\r\n\r\n    partial!: boolean;\r\n    partialdefaultname!: string;\r\n    isPrimitive!: boolean;\r\n    isClass!: boolean; // false if it's primitive type\r\n    isEnum!: false;\r\n    implements: Pointer<DClass, 0, 'N', LClass> = [];  //todo: interface\r\n    implementedBy: Pointer<DClass, 0, 'N', LClass> = [];\r\n\r\n    ownAttributes!: LAttribute[];\r\n    ownReferences!: LReference[];\r\n    ownOperations!: LOperation[];\r\n    ownChildren!: (LStructuralFeature|LOperation)[];\r\n\r\n    inheritedAttributes!: LAttribute[];\r\n    inheritedReferences!: LReference[];\r\n    inheritedOperations!: LOperation[];\r\n    inheritedChildren!: (LStructuralFeature|LOperation)[];\r\n\r\n    allAttributes!: LAttribute[];\r\n    allReferences!: LReference[];\r\n    allOperations!: LOperation[];\r\n    allChildren!: (LStructuralFeature|LOperation)[];\r\n\r\n\r\n\r\n    // utilities to go down in the tree (plural names)\r\n    exceptions!: LClassifier[] | null;\r\n    parameters!: LParameter[] | null;\r\n    // [`@${string}`]: LModelElement; todo: try to put it\r\n\r\n    protected get_ownAttributes(context: Context): this['ownAttributes'] {\r\n        return LAttribute.fromPointer(context.data.attributes);\r\n    }\r\n    protected get_ownReferences(context: Context): this['ownReferences'] {\r\n        return LReference.fromPointer(context.data.references);\r\n    }\r\n    protected get_ownOperations(context: Context): this['ownOperations'] {\r\n        return LOperation.fromPointer(context.data.operations);\r\n    }\r\n    protected get_ownChildren(context: Context): this['ownChildren'] {\r\n        return U.arrayMergeInPlace<any>(this.get_ownAttributes(context), this.get_ownReferences(context),\r\n            this.get_ownOperations(context));\r\n    }\r\n\r\n    private get_extendsChain(context: Context): this['extendsChain'] {\r\n        let targets: LClass[] = LClass.fromArr(context.data.extends);\r\n        let alreadyParsed: Dictionary<Pointer, LClass> = {};\r\n        while(targets.length) {\r\n            let nextTargets = [];\r\n            for(let target of targets){\r\n                if(alreadyParsed[target.id]) continue;\r\n                alreadyParsed[target.id] = target;\r\n                for(let father of target.extends) nextTargets.push(father);\r\n            }\r\n            targets = nextTargets;\r\n        }\r\n        return [...new Set<LClass>(Object.values(alreadyParsed))];\r\n    }\r\n\r\n    protected get_inheritedAttributes(context: Context): this['inheritedAttributes'] {\r\n        return this.get_extendsChain(context).flatMap((superClass) => superClass.ownAttributes);\r\n    }\r\n    protected get_inheritedReferences(context: Context): this['inheritedReferences'] {\r\n        return this.get_extendsChain(context).flatMap((superClass) => superClass.ownReferences);\r\n    }\r\n    protected get_inheritedOperations(context: Context): this['inheritedOperations'] {\r\n        return this.get_extendsChain(context).flatMap((superClass) => superClass.ownOperations);\r\n    }\r\n    protected get_inheritedChildren(context: Context): this['inheritedChildren'] {\r\n        return U.arrayMergeInPlace<any>(this.get_inheritedAttributes(context), this.get_inheritedReferences(context),\r\n            this.get_inheritedOperations(context));\r\n    }\r\n\r\n    protected get_allAttributes(context: Context): this['allAttributes'] {\r\n        return U.arrayMergeInPlace<any>(this.get_ownAttributes(context), this.get_inheritedAttributes(context));\r\n    }\r\n    protected get_allReferences(context: Context): this['allReferences'] {\r\n        return U.arrayMergeInPlace<any>(this.get_ownReferences(context), this.get_inheritedReferences(context));\r\n    }\r\n    protected get_allOperations(context: Context): this['allOperations'] {\r\n        return U.arrayMergeInPlace<any>(this.get_ownOperations(context), this.get_inheritedOperations(context));\r\n    }\r\n    protected get_allChildren(context: Context): this['allChildren'] {\r\n        return U.arrayMergeInPlace<any>(this.get_ownChildren(context), this.get_inheritedChildren(context));\r\n    }\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: GObject = {};\r\n        const featurearr: Json[] = [];\r\n        const operationsarr: Json[] = [];\r\n        let supertypesstr = [];\r\n        const d = context.data;\r\n        const l = context.proxyObject;\r\n        for (let att of l.attributes) { featurearr.push(att.generateEcoreJson(loopDetectionObj)); }\r\n        for (let ref of l.references) { featurearr.push(ref.generateEcoreJson(loopDetectionObj)); }\r\n        for (let op of l.operations) { operationsarr.push(op.generateEcoreJson(loopDetectionObj)); }\r\n\r\n        json[ECoreClass.xsitype] = 'ecore:EClass';\r\n        json[ECoreClass.namee] = d.name;\r\n        json[ECoreClass.interface] = U.toBoolString(d.interface, false);\r\n        json[ECoreClass.abstract] = U.toBoolString(d.abstract, false);\r\n        if (d.instanceClassName) json[ECoreClass.instanceTypeName] = d.instanceClassName;\r\n        json[ECoreClass.eSuperTypes] = l.extends.map( superclass => superclass.typeEcoreString).join(\" \");\r\n        if (featurearr) json[ECoreClass.eStructuralFeatures] = featurearr;\r\n        if (operationsarr) json[ECoreClass.eOperations] = operationsarr;\r\n        return json; }\r\n\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addClass(context.data.name, context.data.interface, context.data.abstract, context.data.isPrimitive) as D;\r\n            // de.hideExcessFeatures = context.data.hideExcessFeatures;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WClass = le as any;\r\n            we.defaultValue = context.data.defaultValue;\r\n            we.extends = context.data.extends;\r\n            we.attributes = deep ? context.proxyObject.attributes.map(lchild => lchild.duplicate(deep).id) : context.data.attributes;\r\n            we.references = deep ? context.proxyObject.references.map(lchild => lchild.duplicate(deep).id) : context.data.references;\r\n            we.operations = deep ? context.proxyObject.operations.map(lchild => lchild.duplicate(deep).id) : context.data.operations;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DStructuralFeature | DOperation, 1, 'N'> {\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | DStructuralFeature, 1, 'N'>, ...context.data.attributes, ...context.data.references, ...context.data.operations];\r\n    }\r\n\r\n\r\n\r\n    protected set_partial(val: D[\"partial\"], context: Context): boolean { return SetFieldAction.new(context.data.id, \"partial\", val); }\r\n    protected get_partial(context: Context): D[\"partial\"] { return context.data.partial; }\r\n    protected set_partialdefaultname(val: D[\"partialdefaultname\"], context: Context): boolean { return SetFieldAction.new(context.data.id, \"partialdefaultname\", val, undefined, false); }\r\n    protected get_partialdefaultname(context: Context): D[\"partialdefaultname\"] { return context.data.partialdefaultname; }\r\n\r\n    public addAttribute(name?: DAttribute[\"name\"], type?: DAttribute[\"type\"]): DAttribute { return this.cannotCall(\"addAttribute\"); }\r\n    protected get_addAttribute(context: Context): this[\"addAttribute\"] {\r\n        return (name?: DAttribute[\"name\"], type?: DAttribute[\"type\"]) => DAttribute.new(name, type, context.data.id, true);\r\n\r\n    }\r\n\r\n    public addReference(name?: DReference[\"name\"], type?: DReference[\"type\"]): DReference { return this.cannotCall(\"addReference\"); }\r\n    protected get_addReference(context: Context): this[\"addReference\"] {\r\n        return (name?: DReference[\"name\"], type?: DReference[\"type\"]) => DReference.new(name, type, context.data.id, true);\r\n    }\r\n\r\n    public addOperation(name?: DOperation[\"name\"], type?: DOperation[\"type\"]): DOperation { return this.cannotCall(\"addOperation\"); }\r\n    protected get_addOperation(context: Context): this[\"addOperation\"] {\r\n        return (name?: DOperation[\"name\"], type?: DOperation[\"type\"]) => DOperation.new(name, type, [], context.data.id, true); }\r\n\r\n\r\n    protected get_abstract(context: Context): this[\"abstract\"] { return context.data.abstract; }\r\n    protected set_abstract(val: this[\"abstract\"], context: Context): boolean {\r\n        const data = context.data;\r\n        if(val && data.instances.length > 0) {\r\n            U.alert('error', 'Cannot change the abstraction level since there are instances.');\r\n        } else {\r\n            SetFieldAction.new(data, 'abstract', val);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected set_isPrimitive(val: this[\"isPrimitive\"], context: Context): boolean { SetFieldAction.new(context. data, 'isPrimitive', val); return true; }\r\n    // get is in classifier with all other \"type\"s getter and setter\r\n\r\n    protected get_interface(context: Context): this[\"interface\"] { return context.data.interface; }\r\n    protected set_interface(val: this[\"interface\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'interface', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_instances(context: Context): this[\"instances\"] {\r\n        return context.data.instances.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_instances(val: PackArr<this[\"instances\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'instances', list, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_operations(context: Context): this[\"operations\"] {\r\n        return context.data.operations.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_operations(val: PackArr<this[\"operations\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.operations;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'operations', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_features(context: Context): this[\"features\"] {\r\n        return context.data.features.map((pointer) => { return LPointerTargetable.from(pointer) });\r\n    }\r\n    protected set_features(val: PackArr<this[\"features\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.features;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'features', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_references(context: Context): this[\"references\"] {\r\n        return context.data.references.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_references(val: PackArr<this[\"references\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.references;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'references', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_attributes(context: Context): this[\"attributes\"] {\r\n        return context.data.attributes.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_attributes(val: PackArr<this[\"attributes\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.attributes;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'attributes', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_referencedBy(context: Context): this[\"referencedBy\"] {\r\n        return context.data.referencedBy.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_referencedBy(val: PackArr<this[\"referencedBy\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'referencedBy', list, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_extends(context: Context): this[\"extends\"] {\r\n        return context.data.extends.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_extends(val: PackArr<this[\"extends\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'extends', list, \"\", true);\r\n        return true;\r\n    }\r\n    protected add_extends(val: PackArr<this[\"extends\"]>, context: Context): void {\r\n        let ptrs: Pointer<DClass> = Pointers.from(val) as any;\r\n        SetFieldAction.new(context.data, 'extends', [...context.data.extends, ...ptrs], '', true);\r\n    }\r\n\r\n    protected remove_extends(val: PackArr<this[\"extends\"]> | number | number[], context: Context): void {\r\n        if (!Array.isArray(val)) val = [val];\r\n        if (!val.length) return;\r\n        let finalVal: D[\"extends\"];\r\n        if (typeof val[0] === \"number\") { finalVal = context.data.extends.filter((elem,index,arr)=> { return (val as any[]).includes(index); }); }\r\n        else {\r\n            finalVal = [...context.data.extends];\r\n            let ptrs: Pointer<DClass> = Pointers.from(val as PackArr<this[\"extends\"]>) as any;\r\n            for (let v of ptrs) { U.arrayRemoveAll(finalVal, v); }\r\n        }\r\n        SetFieldAction.new(context.data, 'extends', finalVal, '', true);\r\n    }\r\n\r\n    protected get_extendedBy(context: Context): this[\"extendedBy\"] {\r\n        return context.data.extendedBy.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_extendedBy(val: PackArr<this[\"extendedBy\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'extendedBy', list, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_implements(context: Context): this[\"implements\"] { return context.data.implements; }\r\n    protected set_implements(val: this[\"implements\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'implements', val, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_implementedBy(context: Context): this[\"implementedBy\"] { return context.data.implementedBy; }\r\n    protected set_implementedBy(val: this[\"implementedBy\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'implementedBy', val, \"\", true);\r\n        return true;\r\n    }\r\n\r\n\r\n    public canExtend(superclass: LClass, output: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}): boolean {\r\n        this.cannotCall(\"canExtend\"); return false;\r\n    }\r\n\r\n    private get_canExtend(context: Context): (superclass: LClass, output: {reason: string, allTargetSuperClasses: LClass[]}) => boolean {\r\n        return (superclass: LClass, output: {reason: string, allTargetSuperClasses: LClass[]} =\r\n            {reason: '', allTargetSuperClasses: []}) => this._canExtend(context, superclass, output);\r\n    }\r\n\r\n    public isExtending(superclass: LClassifier, output: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}): boolean {\r\n        return this.cannotCall(\"isExtending\");\r\n    }\r\n\r\n    private get_isExtending(context: Context): this[\"isExtending\"] {\r\n        return null as any; // todo\r\n    }\r\n\r\n    private get_superclasses(context: Context, plusThis: boolean = false): LClass[] {\r\n        let i: number;\r\n        const thiss: LClass = context.proxyObject;\r\n        const visited: Dictionary<Pointer, LClass> = {};\r\n        let queue: LClass[] = thiss.extends;\r\n        if (plusThis) queue = [thiss, ...queue];\r\n        const ret: LClass[] = [];\r\n        for (i = 0; i < queue.length; i++) {\r\n            let elem: LClass = queue[i];\r\n            if (visited[elem.id]) continue;\r\n            visited[elem.id] = elem;\r\n            ret.push(elem);\r\n            queue.push(...elem.extends);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private get_allSubClasses(context: Context, plusThis: boolean = false): LClass[] {\r\n        const thiss: LClass = context.proxyObject;\r\n        const set: Set<LClass> = plusThis ? new Set<LClass>([thiss]) : new Set();\r\n        for (let i = 0; i < thiss.extendedBy.length; i++) {\r\n            // todo: would this access get_extendedBy 2*N times?? verify and optimize\r\n            U.SetMerge(true, set, thiss.extendedBy[i].allSubClasses); }\r\n        return [...set]; }\r\n\r\n\r\n    private _canExtend(context: Context, superclass: LClass, output: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}): boolean {\r\n        if (!superclass) { output.reason = 'Invalid extend target: ' + superclass; return false; }\r\n        const thiss: LClass = context.proxyObject;\r\n        if (superclass.id === thiss.id) { output.reason = 'Classes cannot extend themselves.'; return false; }\r\n        // todo: se diversi proxy dello stesso oggetto sono considerati diversi questo fallisce, in tal caso fai thiss.extends.map( l => l.id).indexof(superclass.id)\r\n        if (thiss.extends.map(sc=>sc.id).indexOf(superclass.id) >= 0) { output.reason = 'Target class is already directly extended.'; return false; }\r\n        output.allTargetSuperClasses = superclass.superclasses;\r\n        if (thiss.superclasses.map(sc=> sc.id).indexOf(superclass.id) >= 0) { output.reason = 'Target class is already indirectly extended.'; return false; }\r\n        if (output.allTargetSuperClasses.map(sc=>sc.id).indexOf(thiss.id) >= 0) { output.reason = 'Cannot set this extend, it would cause a inheritance loop.'; return false; }\r\n        if (thiss.interface && !superclass.interface) { output.reason = 'An interface cannot extend a class.'; return false; }\r\n        // ora verifico se causa delle violazioni di override (attibuti omonimi string e boolean non possono overridarsi)\r\n        let i: number;\r\n        let j: number;\r\n        let children: LOperation[] =  thiss.operations; //[...thiss.getBasicOperations()];\r\n        let superchildren: LOperation[] = superclass.operations; //[...superclass.getBasicOperations()];\r\n        for (i = 0; i < children.length; i++) {\r\n            let op: LOperation = children[i];\r\n            for (j = 0; j < superchildren.length; j++){\r\n                let superchild: LOperation = superchildren[j];\r\n                if (op.name !== superchild.name) continue;\r\n                if (op._canOverride(superchild) || op._canPolymorph(superchild)) continue;\r\n                output.reason = 'Marked homonymous operations cannot override nor polymorph each others.';\r\n                setTimeout( () => {\r\n                    op._mark(true, superchild, 'override'); //  mark op && superchildren\r\n                    setTimeout( () => { op._mark(false, superchild, 'override'); }, 3000); // unmark\r\n                }, 1);\r\n                return false;\r\n            }\r\n        }\r\n        return true; }\r\n\r\n    private _isExtending(context: Context, superclass: LClass, orEqual: boolean = true): boolean {\r\n        if (!superclass) return false;\r\n        return this.get_superclasses(context, orEqual).includes(superclass); }\r\n\r\n    private add_Extends(context: Context, superclass: LClass, force: boolean = false): boolean {\r\n        let out: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []};\r\n        const thiss: LClass = context.proxyObject;\r\n        if (!force && !this._canExtend(context, superclass, out)) {  return false; }\r\n        SetFieldAction.new(thiss.__raw, 'extends', [superclass.id], '+=', true);\r\n        SetFieldAction.new(superclass.__raw, 'extendedBy', [thiss.id], '+=', true);\r\n        // const extendChildren: LClass[] =  [thiss, ...thiss.superclasses];\r\n        // console.log('calculateViolationsExtend children:'  + extendChildren, this);\r\n        // for (let extChild of extendChildren) { extChild._checkViolations(false); } // after instances have their meta-class changed, they might need to change shape or values.\r\n        return true; }\r\n\r\n    unsetExtends(context: Context, superclass: LClass): void {\r\n        if (!superclass) return;\r\n        console.log('UnsetExtend:', context);\r\n        // todo: when Object is loaded in m3, set him there for easy access.\r\n        //  if (superclass.id === LClass.genericObjectid) { Log.w(true, 'Cannot un-extend \"Object\"'); return; }\r\n        const thiss: LClass = context.proxyObject;\r\n        let index: number = thiss.extends.indexOf(superclass);\r\n        if (index < 0) return;\r\n\r\n        let newextends = thiss.extends.map(l => l.id);\r\n        let newextendedBy = superclass.extendedBy.map(l => l.id);\r\n        U.arrayRemoveAll(newextends, superclass.id)\r\n        U.arrayRemoveAll(newextendedBy, thiss.id)\r\n        SetFieldAction.new(thiss, 'extends', (newextends), '', true); // -=\r\n        SetFieldAction.new(superclass, 'extendedBy', (newextendedBy), '', true); // -=\r\n        // todo: update instances for (i = 0; i < thiss.instances.length; i++) { thiss.instances[i].unsetExtends(superclass); }\r\n        // todo: remove extend edge? here?\r\n\r\n        // todo: check violations\r\n        // const extendedby: LClass[] = [thiss, ...thiss.allSubClasses];\r\n        // for (i = 0; i < extendedby.length; i++) { extendedby[i].checkViolations(true); }\r\n    }\r\n\r\n    public instance(): DObject { return this.cannotCall('instance'); }\r\n    /*private get_instance_old(context: Context): () => DObject {\r\n        return () => {\r\n            const dClass: DClass = context.data;\r\n            const lClass: LClass = LClass.from(dClass);\r\n            const dObject = DObject.new(lClass.name.toLowerCase());\r\n            CreateElementAction.new(dObject);\r\n            BEGIN()\r\n            SetFieldAction.new(dObject, 'instanceof', dClass.id, '', true);\r\n            SetFieldAction.new(dClass, 'instances', dObject.id, '+=', true);\r\n\r\n            let father: LClass|undefined = lClass;\r\n            while(father) {\r\n                for(let dFeature of [...father.attributes, ...father.references]) {\r\n                    const dValue = DValue.new(dFeature.name); dValue.value = [U.initializeValue(dFeature.type)];\r\n                    CreateElementAction.new(dValue);\r\n\r\n                    SetFieldAction.new(dValue, 'father', dObject.id, '', true);\r\n                    SetFieldAction.new(dValue, 'instanceof', dFeature.id, '', true);\r\n                    SetFieldAction.new(dFeature, 'instances', dValue.id, '+=', true);\r\n                    SetFieldAction.new(dObject, 'features', dValue.id, '+=', true);\r\n\r\n                }\r\n                father = (father.extends.length > 0) ? father.extends[0] : undefined;\r\n            }\r\n            END()\r\n            return dObject;\r\n        };\r\n    }*/\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const ret = () => {\r\n            const canBeDeleted = data.instances.length === 0;\r\n            if(canBeDeleted) {\r\n                const pointedBy = U.filteredPointedBy(data, 'type');\r\n                for(let me of pointedBy) {\r\n                    if(me) {\r\n                        SetFieldAction.new(me.__raw as DReference, 'type', me.father.id, '', true);\r\n                    }\r\n                }\r\n                for(let me of data.extends) {\r\n                    SetFieldAction.new(me.__raw, 'extendedBy', me.__raw.extendedBy.indexOf(data.id), '-=', true);\r\n                }\r\n                for(let me of data.extendedBy) {\r\n                    SetFieldAction.new(me.__raw, 'extends', me.__raw.extends.indexOf(data.id), '-=', true);\r\n                }\r\n                data.superDelete();\r\n            } else { U.alert('error', 'Cannot delete the selected class since there are instances.'); }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DClassifier, DClass);\r\nRuntimeAccessibleClass.set_extend(LClassifier, LClass);\r\n@RuntimeAccessible\r\nexport class DDataType extends DPointerTargetable { // extends DClassifier\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LDataType;\r\n    // static logic: typeof LDataType;\r\n    // static structure: typeof DDataType;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    id!: Pointer<DDataType, 1, 1, LDataType>;\r\n    instanceClassName!: string;\r\n    parent: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    father!: Pointer<DPackage, 1, 1, LPackage>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    defaultValue!: Pointer<DObject, 1, 1, LObject>[] | string[];\r\n    // personal\r\n    serializable: boolean = true;\r\n    // usedBy: Pointer<DAttribute, 0, 'N', LAttribute> = [];\r\n\r\n\r\n    public static new(name?: DNamedElement[\"name\"], father?: Pointer, persist: boolean = true): DDataType {\r\n        Log.exx(\"DDataType is abstract, cannot instantiate\");\r\n        return null as any;\r\n        // if (!name) name = this.defaultname(\"datatype_\", father);\r\n        // return new Constructors(new DDataType('dwc'), father, persist, undefined).DPointerTargetable().DModelElement().DNamedElement(name).DClassifier().DDataType().end();\r\n    }\r\n}\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LDataType<Context extends LogicContext<DDataType> = any, C extends Context = Context> extends LClassifier { // extends DClassifier\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DDataType;\r\n    id!: Pointer<DDataType, 1, 1, LDataType>;\r\n    // static singleton: LDataType;\r\n    // static logic: typeof LDataType;\r\n    // static structure: typeof DDataType;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    instanceClassName!: string;\r\n    parent!: LPackage[];\r\n    father!: LPackage;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    defaultValue!: LObject[] | string[];\r\n    isPrimitive!: false;\r\n    isClass!: false;\r\n    isEnum!: true;\r\n    // personal\r\n    serializable!: boolean;\r\n\r\n\r\n    protected get_serializable(context: Context): this[\"serializable\"] { return context.data.serializable; }\r\n    protected set_serializable(val: this[\"serializable\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'serializable', val);\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DClassifier, DDataType);\r\nRuntimeAccessibleClass.set_extend(LClassifier, LDataType);\r\n@RuntimeAccessible\r\nexport class DStructuralFeature extends DPointerTargetable { // DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LStructuralFeature;\r\n    // static logic: typeof LStructuralFeature;\r\n    // static structure: typeof DStructuralFeature;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DStructuralFeature, 1, 1, LStructuralFeature>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    parent: Pointer<DClass, 0, 'N', LClass> = [];\r\n    father!: Pointer<DClass, 1, 1, LClass>;\r\n    name!: string;\r\n    type!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    // personal\r\n    instances: Pointer<DValue, 0, 'N', LValue> = [];\r\n    changeable: boolean = true;\r\n    volatile: boolean = true;\r\n    transient: boolean = false;\r\n    unsettable: boolean = false;\r\n    derived: boolean = false;\r\n    defaultValue!: (Pointer<DObject, 1, 1, LObject> | PrimitiveType)[];\r\n\r\n    public static new(name?: DNamedElement[\"name\"], type?: DTypedElement[\"type\"], father?: Pointer, persist: boolean = true): DStructuralFeature {\r\n        Log.exx(\"DStructuralFeature is abstract, cannot instantiate\");\r\n        return null as any;\r\n        // if (!name) name = this.defaultname(\"feature \", father);\r\n        // return new Constructors(new DStructuralFeature('dwc'), father, persist, undefined).DPointerTargetable().DModelElement().DNamedElement(name).DTypedElement(type).DStructuralFeature().end();\r\n    }\r\n    // getFeatureID(): number;\r\n    // getContainerClass(): EJavaClass\r\n}\r\n\r\n@Abstract\r\n@RuntimeAccessible\r\nexport class LStructuralFeature<Context extends LogicContext<DStructuralFeature> = any, C extends Context = Context>  extends LTypedElement { // DTypedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DStructuralFeature;\r\n    id!: Pointer<DStructuralFeature, 1, 1, LStructuralFeature>;\r\n    // static singleton: LStructuralFeature;\r\n    // static logic: typeof LStructuralFeature;\r\n    // static structure: typeof DStructuralFeature;\r\n\r\n    // inherit redefine\r\n    annotations!: LAnnotation[];\r\n    parent!: LClass[];\r\n    father!: LClass;\r\n    name!: string;\r\n    namespace!: string;\r\n    type!: LClassifier;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    // personal\r\n    instances!: LValue[];\r\n    changeable!: boolean;\r\n    volatile!: boolean;\r\n    transient!: boolean;\r\n    unsettable!: boolean;\r\n    derived!: boolean;\r\n    // defaultValueLiteral!: string;\r\n    defaultValue!: (LObject[] | PrimitiveType[]);\r\n    // getFeatureID(): number;\r\n    // getContainerClass(): EJavaClass\r\n\r\n    protected get_instances(context: Context): this[\"instances\"] {\r\n        return context.data.instances.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_instances(val: PackArr<this[\"instances\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'instances', list, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_changeable(context: Context): this[\"changeable\"] { return context.data.changeable; }\r\n    protected set_changeable(val: this[\"changeable\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'changeable', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_volatile(context: Context): this[\"volatile\"] { return context.data.volatile; }\r\n    protected set_volatile(val: this[\"volatile\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'volatile', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_transient(context: Context): this[\"transient\"] { return context.data.transient; }\r\n    protected set_transient(val: this[\"transient\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'transient', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_unsettable(context: Context): this[\"unsettable\"] { return context.data.unsettable; }\r\n    protected set_unsettable(val: this[\"unsettable\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'unsettable', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_derived(context: Context): this[\"derived\"] { return context.data.derived; }\r\n    protected set_derived(val: this[\"derived\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'derived', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const ret = () => {\r\n            for(let instance of data.instances) { instance.delete(); }\r\n            data.superDelete();\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n        protected get_defaultValueLiteral(context: Context): this[\"defaultValueLiteral\"] { return context.data.defaultValueLiteral; }\r\n        protected set_defaultValueLiteral(val: this[\"defaultValueLiteral\"], context: Context): boolean {\r\n            SetFieldAction.new(context.data, 'defaultValueLiteral', val, \"\", false);\r\n            return true;\r\n        }*/\r\n}\r\nRuntimeAccessibleClass.set_extend(DTypedElement, DStructuralFeature);\r\nRuntimeAccessibleClass.set_extend(LTypedElement, LStructuralFeature);\r\n@RuntimeAccessible\r\nexport class DReference extends DPointerTargetable { // DStructuralFeature\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LReference;\r\n    // static logic: typeof LReference;\r\n    // static structure: typeof DReference;\r\n\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DReference, 1, 1, LReference>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    type!: Pointer<DClass, 1, 1, LClass>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    changeable: boolean = true;\r\n    volatile: boolean = true;\r\n    transient: boolean = false;\r\n    unsettable: boolean = false;\r\n    derived: boolean = false;\r\n    defaultValueLiteral!: string;\r\n    parent: Pointer<DClass, 0, 'N', LClass> = [];\r\n    father!: Pointer<DClass, 1, 1, LClass>;\r\n    instances: Pointer<DValue, 0, 'N', LValue> = [];\r\n    defaultValue!: Pointer<DObject, 1, 1, LObject>[];\r\n\r\n    // personal\r\n    containment: boolean = false;\r\n    container: boolean = false; // ?\r\n    resolveProxies: boolean = true; // ?\r\n    opposite!: Pointer<DReference, 0, 1, LReference>;\r\n    target: Pointer<DClass, 0, 'N', LClass> = [];\r\n    edges: Pointer<DEdge, 0, 'N', LEdge> = [];\r\n\r\n    public static new(name?: DReference[\"name\"], type?: DReference[\"type\"], father?: DReference[\"father\"], persist: boolean = true): DReference {\r\n        if (!type) type = father // default type is self-reference\r\n        if (!name) name = this.defaultname(\"ref_\", father);\r\n        return new Constructors(new DReference('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DStructuralFeature().DReference().end();\r\n    }\r\n\r\n    static new2(setter: Partial<ObjectWithoutPointers<DReference>>, father: DReference[\"father\"], type?: DReference[\"type\"], name?: DReference[\"name\"]): DReference {\r\n        if (!name) name = this.defaultname((name || \"ref_\"), father);\r\n        return new Constructors(new DReference('dwc'), father, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DStructuralFeature().DReference()\r\n            .end((d) => { Object.assign(d, setter); });\r\n    }\r\n\r\n}\r\n\r\n@Instantiable // LValue\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class LReference<Context extends LogicContext<DReference> = any, C extends Context = Context, D extends DReference = DReference>  extends LStructuralFeature {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DReference;\r\n    id!: Pointer<DReference, 1, 1, LReference>;\r\n    // static singleton: LReference;\r\n    // static logic: typeof LReference;\r\n    // static structure: typeof DReference;\r\n\r\n    // inherit redefine\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    type!: LClass;\r\n    ordered!: boolean;\r\n    unique!: boolean;\r\n    lowerBound!: number;\r\n    upperBound!: number;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    changeable!: boolean;\r\n    volatile!: boolean;\r\n    transient!: boolean;\r\n    unsettable!: boolean;\r\n    derived!: boolean;\r\n    defaultValueLiteral!: string;\r\n    parent!: LClass[];\r\n    father!: LClass;\r\n    instances!: LValue[];\r\n    defaultValue!: LObject[];\r\n\r\n    // personal\r\n    containment!: boolean;\r\n    container!: boolean; //??\r\n    resolveProxies!: boolean;\r\n    opposite?: LReference;\r\n    // target!: LClass[]; replaced by type\r\n    edges!: LEdge[];\r\n\r\n\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const model: GObject = {};\r\n        const d = context.data;\r\n        const l = context.proxyObject;\r\n        model[ECoreReference.xsitype] = 'ecore:EReference';\r\n        model[ECoreReference.eType] = l.type.typeEcoreString;\r\n        model[ECoreReference.namee] = d.name;\r\n        if (d.lowerBound != null && !isNaN(+d.lowerBound)) { model[ECoreReference.lowerbound] = +d.lowerBound; }\r\n        if (d.upperBound != null && !isNaN(+d.upperBound)) { model[ECoreReference.upperbound] = +d.upperBound; }\r\n        if (d.containment != null) { model[ECoreReference.containment] = d.containment; }\r\n        return model; }\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addReference(context.data.name, context.data.type) as D;\r\n            de.many = context.data.many;\r\n            de.lowerBound = context.data.lowerBound;\r\n            de.upperBound = context.data.upperBound;\r\n            de.ordered = context.data.ordered;\r\n            de.required = context.data.required;\r\n            de.unique = context.data.unique;\r\n            de.changeable = context.data.changeable;\r\n            de.container = context.data.container;\r\n            de.containment = context.data.containment;\r\n            de.defaultValueLiteral = context.data.defaultValueLiteral;\r\n            de.derived = context.data.derived;\r\n            de.transient = context.data.transient;\r\n            de.unsettable = context.data.unsettable;\r\n            de.volatile = context.data.unsettable;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WReference = le as any;\r\n            we.opposite = context.data.opposite || undefined;\r\n            we.defaultValue = context.data.defaultValue;\r\n            we.type = context.data.type;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            // we.target = deep ? context.proxyObject.target.map(lchild => lchild.duplicate(deep).id) : context.data.target;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n    protected set_type(val: Pack1<this[\"type\"]>, context: Context): boolean { return super.set_type(val, context); }\r\n\r\n    public addClass(name?: DClass[\"name\"], isInterface?: DClass[\"interface\"], isAbstract?: DClass[\"abstract\"], isPrimitive?: DClass[\"isPrimitive\"],\r\n                    isPartial?: DClass[\"partial\"], partialDefaultName?: DClass[\"partialdefaultname\"]): DClass {\r\n        return this.cannotCall(\"LReference.addClass\"); }\r\n    protected get_addClass(context: Context): this[\"addClass\"] {\r\n        return (name?: DClass[\"name\"], isInterface?: DClass[\"interface\"], isAbstract?: DClass[\"abstract\"], isPrimitive?: DClass[\"isPrimitive\"],\r\n                isPartial?: DClass[\"partial\"], partialDefaultName?: DClass[\"partialdefaultname\"]) => {\r\n            BEGIN()\r\n            let dclass = DClass.new(name, isInterface, isAbstract, isPrimitive, isPartial, partialDefaultName, context.proxyObject.package!.id, true);\r\n            // SetFieldAction.new(context.data.id, \"type\", dclass.id);\r\n            this.set_type(dclass.id as any, context);\r\n            END();\r\n            return dclass;\r\n        } }\r\n\r\n\r\n    protected get_containment(context: Context): this[\"containment\"] { return context.data.containment; }\r\n    protected set_containment(val: this[\"containment\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'containment', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_container(context: Context): this[\"container\"] { return context.data.container; }\r\n    protected set_container(val: this[\"container\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'container', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_resolveProxies(context: Context): this[\"resolveProxies\"] { return context.data.resolveProxies; }\r\n    protected set_resolveProxies(val: this[\"resolveProxies\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'resolveProxies', val);\r\n        return true;\r\n    }\r\n\r\n    protected get_opposite(context: Context): this[\"opposite\"] { return LPointerTargetable.from(context.data.opposite); }\r\n    protected set_opposite(val: Pack<LReference | undefined>, context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'opposite', Pointers.from(val) as any as LAnnotation[\"id\"], \"\", true);\r\n        return true;\r\n    }\r\n    /*\r\n        /// todo: why this exist?  why not type?\r\n        protected get_target(context: Context): this[\"target\"] { return context.data.target.map(pointer => LPointerTargetable.from(pointer)); }\r\n        protected set_target(val: PackArr<this[\"target\"]>, context: Context): boolean {\r\n            const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n            SetFieldAction.new(context.data, 'target', list, \"\", true);\r\n            return true;\r\n        }*/\r\n\r\n    protected get_defaultValue(context: Context): this[\"defaultValue\"] { return LPointerTargetable.fromPointer(context.data.defaultValue); }\r\n    protected set_defaultValue(val: PackArr<this[\"defaultValue\"]>, context: Context): boolean {\r\n        // @ts-ignore\r\n        if (!val) (val) = []; else if (!Array.isArray(val)) val = [val];\r\n        let ptrs = Pointers.from(val);\r\n        SetFieldAction.new(context.data, 'defaultValue', ptrs, '', false);\r\n        return true; }\r\n\r\n    protected get_edges(context: Context): this[\"edges\"] {\r\n        return context.data.edges.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n    protected set_edges(val: PackArr<this[\"edges\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        SetFieldAction.new(context.data, 'edges', list, \"\", true);\r\n        return true;\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DStructuralFeature, DReference);\r\nRuntimeAccessibleClass.set_extend(LStructuralFeature, LReference);\r\nfunction has_opposite(oppositename: string, ...comments: string[]): any {\r\n    // return (c:Constructor, key:string, ):any =>{}\r\n}\r\nfunction obsolete_attribute(...comments: string[]) {\r\n    return undefined as any; // function(c:Constructor, key:string,): any {}\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class DAttribute extends DPointerTargetable { // DStructuralFeature\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LAttribute;\r\n    // static logic: typeof LAttribute;\r\n    // static structure: typeof DAttribute;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DAttribute, 1, 1, LAttribute>;\r\n    // @has_opposite(\"father\")\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    type!: Pointer<DClassifier, 1, 1, LClassifier>;\r\n    ordered: boolean = true;\r\n    unique: boolean = true;\r\n    lowerBound: number = 0;\r\n    upperBound: number = 1;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    changeable: boolean = true;\r\n    volatile: boolean = true;\r\n    transient: boolean = false;\r\n    unsettable: boolean = false;\r\n    derived: boolean = false;\r\n    defaultValueLiteral!: string;\r\n    //@obsolete_attribute()\r\n    parent: Pointer<DClass, 0, 'N', LClass> = [];\r\n\r\n    //@has_opposite(\"attributes\")\r\n    father!: Pointer<DClass, 1, 1, LClass>;\r\n\r\n    //@has_opposite(\"instanceof\")\r\n    instances: Pointer<DValue, 0, 'N', LValue> = [];\r\n    defaultValue!: PrimitiveType[];\r\n\r\n    // personal\r\n    isID: boolean = false; // ? exist in ecore as \"iD\" ?\r\n\r\n    public static new(name?: DAttribute[\"name\"], type?: DAttribute[\"type\"], father?: DAttribute[\"father\"], persist: boolean = true): DAttribute {\r\n        if (!name) name = this.defaultname(\"attr_\", father);\r\n        if (!type) type = LPointerTargetable.from(Selectors.getFirstPrimitiveTypes()).id; // default type as string\r\n        return new Constructors(new DAttribute('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DStructuralFeature().DAttribute().end();\r\n    }\r\n    static new2(setter: Partial<ObjectWithoutPointers<DReference>>, father: DAttribute[\"father\"], type?: DAttribute[\"type\"], name?: DAttribute[\"name\"]): DAttribute {\r\n        if (!name) name = this.defaultname((name || \"ref_\"), father);\r\n        return new Constructors(new DAttribute('dwc'), father, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DTypedElement(type).DStructuralFeature().DReference()\r\n            .end((d) => { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n@Leaf\r\n@Instantiable // (LValue)\r\n@RuntimeAccessible\r\nexport class LAttribute <Context extends LogicContext<DAttribute> = any, C extends Context = Context, D extends DAttribute = DAttribute> extends LStructuralFeature { // DStructuralFeature\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DAttribute;\r\n    id!: Pointer<DAttribute, 1, 1, LAttribute>;\r\n    // static singleton: LAttribute;\r\n    // static logic: typeof LAttribute;\r\n    // static structure: typeof DAttribute;\r\n\r\n    // inherit redefine\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    type!: LClassifier;\r\n    ordered!: boolean;\r\n    unique!: boolean;\r\n    lowerBound!: number;\r\n    upperBound!: number;\r\n    many!: boolean;\r\n    required!: boolean;\r\n    changeable!: boolean;\r\n    volatile!: boolean;\r\n    transient!: boolean;\r\n    unsettable!: boolean;\r\n    derived!: boolean;\r\n    // defaultValueLiteral!: string;\r\n    defaultValue!: PrimitiveType[];\r\n    parent!: LClass[];\r\n    father!: LClass;\r\n    instances!: LValue[];\r\n\r\n    // personal\r\n    isID: boolean = false; // ? exist in ecore as \"iD\" ?\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const model = {};\r\n        const d = context.data;\r\n        const l = context.proxyObject;\r\n        EcoreParser.write(model, ECoreAttribute.xsitype, 'ecore:EAttribute');\r\n        EcoreParser.write(model, ECoreAttribute.eType, l.type.typeEcoreString);\r\n        EcoreParser.write(model, ECoreAttribute.namee, d.name);\r\n        EcoreParser.write(model, ECoreAttribute.lowerbound, '' + d.lowerBound);\r\n        EcoreParser.write(model, ECoreAttribute.upperbound, '' + d.upperBound);\r\n        return model; }\r\n\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addAttribute(context.data.name, context.data.type) as D;\r\n            de.many = context.data.many;\r\n            de.lowerBound = context.data.lowerBound;\r\n            de.upperBound = context.data.upperBound;\r\n            de.ordered = context.data.ordered;\r\n            de.required = context.data.required;\r\n            de.unique = context.data.unique;\r\n            de.changeable = context.data.changeable;\r\n            de.defaultValue = context.data.defaultValue;\r\n            de.defaultValueLiteral = context.data.defaultValueLiteral;\r\n            de.derived = context.data.derived;\r\n            de.transient = context.data.transient;\r\n            de.unsettable = context.data.unsettable;\r\n            de.volatile = context.data.volatile;\r\n            de.isID = context.data.isID\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WAttribute = le as any;\r\n            we.type = context.data.type;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n    public addEnum(...p:Parameters<this[\"addEnumerator\"]>): DEnumerator { return this.addEnumerator(...p); }\r\n    protected get_addEnum(context: Context): this[\"addEnumerator\"] { return this.get_addEnumerator(context); }\r\n    public addEnumerator(name?: DEnumerator[\"name\"], father?: DEnumerator[\"father\"]): DEnumerator { return this.cannotCall(\"Attribute.addEnumerator\"); }\r\n    protected get_addEnumerator(context: Context): this[\"addEnumerator\"] {\r\n        return (name?: DEnumerator[\"name\"], father?: DEnumerator[\"father\"]) => DEnumerator.new(name, context.proxyObject.package?.id, true); }\r\n\r\n    protected get_ID(context: Context): this[\"isID\"] { return context.data.isID; }\r\n    protected set_ID(val: this[\"isID\"], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'isID', val);\r\n        return true;\r\n    }\r\n    protected get_defaultValue(context: Context): this[\"defaultValue\"] { return context.data.defaultValue; }\r\n    protected set_defaultValue(val: unArr<this[\"defaultValue\"]>, context: Context): boolean {\r\n        // @ts-ignore\r\n        if (!val) (val) = []; else if (!Array.isArray(val)) val = [val];\r\n        SetFieldAction.new(context.data, 'defaultValue', val, '', false);\r\n        return true; }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DStructuralFeature, DAttribute);\r\nRuntimeAccessibleClass.set_extend(LStructuralFeature, LAttribute);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DEnumLiteral extends DPointerTargetable { // DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LAttribute;\r\n    // static logic: typeof LAttribute;\r\n    // static structure: typeof DAttribute;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DEnumLiteral, 1, 1, LEnumLiteral>;\r\n    parent: Pointer<DEnumerator, 0, 'N', LEnumerator> = [];\r\n    father!: Pointer<DEnumerator, 1, 1, LEnumerator>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    // personal\r\n    value!: number;\r\n    // ordinal: number=1; replaced by value\r\n    literal!: string;\r\n\r\n    public static new(name?: DNamedElement[\"name\"], value?: DEnumLiteral[\"value\"], father?: Pointer, persist: boolean = true): DEnumLiteral { //vv4\r\n        if (!name) name = this.defaultname(\"literal \", father);\r\n        return new Constructors(new DEnumLiteral('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DEnumLiteral(value).end();\r\n    }\r\n    static new2(setter: Partial<ObjectWithoutPointers<DEnumLiteral>>, father: DEnumLiteral[\"father\"], name?: DEnumLiteral[\"name\"]): DEnumLiteral {\r\n        if (!name) name = this.defaultname(\"literal \", father);\r\n        return new Constructors(new DEnumLiteral('dwc'), father, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DEnumLiteral()\r\n            .end((d) => { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class LEnumLiteral<Context extends LogicContext<DEnumLiteral> = any, C extends Context = Context, D extends DEnumLiteral = DEnumLiteral>  extends LNamedElement { // DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DEnumLiteral;\r\n    id!: Pointer<DEnumLiteral, 1, 1, LEnumLiteral>;\r\n    // static singleton: LAttribute;\r\n    // static logic: typeof LAttribute;\r\n    // static structure: typeof DAttribute;\r\n\r\n    // inherit redefine\r\n    parent!: LEnumerator[];\r\n    father!: LEnumerator;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    // personal\r\n    value!: this[\"ordinal\"];\r\n    ordinal!: number;\r\n    literal!: string;\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        const d = context.data;\r\n        json[EcoreLiteral.value] = d.value;\r\n        json[EcoreLiteral.literal] = d.literal;\r\n        json[EcoreLiteral.namee] = d.name;\r\n        return json; }\r\n\r\n    public generateEcoreJsonM1(): this[\"ordinal\"] { return this.cannotCall(\"GenerateEcoreJsonM1\"); }\r\n    protected get_generateEcoreJsonM1(context: Context): () => this[\"ordinal\"] { return this.impl_generateEcoreJsonM1(context); }\r\n    protected impl_generateEcoreJsonM1(context: Context): () => this[\"ordinal\"] {\r\n        // loopDetectionObj[context.data.id] = context.data; no loop detection here, the same literal can be exported multiple times in m1\r\n        // return context.data.literal;\r\n        // return context.data.name;\r\n        return () => context.data.value; }\r\n\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addLiteral(context.data.name, context.data.value) as D;\r\n            de.literal = context.data.literal;\r\n            de.value = context.data.value;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WEnumLiteral = le as any;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n\r\n    protected get_ordinal(context: Context): this[\"ordinal\"] { return this.get_value(context); }\r\n    protected set_ordinal(val: this[\"ordinal\"], context: Context): boolean { return this.set_value(val, context); }\r\n\r\n    protected get_value(context: Context): this[\"value\"] {\r\n        let ordinalAssumedByPosition = true; // per ottimizzazione forse è disattivabile\r\n        if (!ordinalAssumedByPosition) return context.data.value || 0;\r\n        return context.proxyObject.father.ordinals.map( o => o?.id).indexOf(context.data.id);\r\n    }\r\n    protected set_value(val: this[\"value\"], context: Context): boolean {\r\n        if (val === context.data.value) return true;\r\n        let ordinals = context.proxyObject.father.ordinals;\r\n        if (ordinals[val]) {\r\n            Log.e(\"that ordinal place is already taken by \" + ordinals[val].name, {sameOrdinalLit:ordinals[val], ordinals, thiss:context.data});\r\n            return false; }\r\n        return SetFieldAction.new(context.data, 'value', val); }\r\n\r\n    protected get_literal(context: Context): this[\"literal\"] { return context.data.literal; }\r\n    protected set_literal(val: this[\"literal\"], context: Context): boolean {\r\n        return SetFieldAction.new(context.data, 'literal', val, '', false); }\r\n\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DEnumLiteral);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LEnumLiteral);\r\n@Leaf\r\n@RuntimeAccessible\r\nexport class DEnumerator extends DPointerTargetable { // DDataType\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LEnumerator;\r\n    // static logic: typeof LEnumerator;\r\n    // static structure: typeof DEnumerator;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    id!: Pointer<DEnumerator, 1, 1, LEnumerator>;\r\n    instanceClassName!: string;\r\n    parent: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    father!: Pointer<DPackage, 1, 1, LPackage>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    defaultValue!: string[];\r\n    serializable: boolean = true;\r\n    // usedBy: Pointer<DAttribute, 0, 'N', LAttribute> = []; obsolete?\r\n    // personal\r\n    literals: Pointer<DEnumLiteral, 0, 'N', LEnumLiteral> = [];\r\n\r\n    public static new(name?: DNamedElement[\"name\"], father?: DEnumerator[\"father\"], persist: boolean = true): DEnumerator {\r\n        if (!name) name = this.defaultname(\"enum \", father);\r\n        return new Constructors(new DEnumerator('dwc'), father, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DEnumerator().end();\r\n    }\r\n    static new2(setter: Partial<ObjectWithoutPointers<DEnumerator>>, father: DEnumerator[\"father\"], name?: DEnumerator[\"name\"]): DEnumerator {\r\n        if (!name) name = this.defaultname(\"enum \", father);\r\n        return new Constructors(new DEnumerator('dwc'), father, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DEnumerator().end((d) => { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n@Node\r\n@RuntimeAccessible\r\nexport class LEnumerator<Context extends LogicContext<DEnumerator> = any, C extends Context = Context, D extends DEnumerator = DEnumerator> extends LDataType { // DDataType\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DEnumerator;\r\n    id!: Pointer<DEnumerator, 1, 1, LEnumerator>;\r\n    // static singleton: LEnumerator;\r\n    // static logic: typeof LEnumerator;\r\n    // static structure: typeof DEnumerator;\r\n\r\n    // inherit redefine\r\n    // instanceClass: EJavaClass // ?\r\n    // isInstance(object: EJavaObject): boolean; ?\r\n    // getClassifierID(): number;\r\n    instanceClassName!: string;\r\n    parent!: LPackage [];\r\n    father!: LPackage;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    defaultValue!:string[];\r\n    serializable!: boolean;\r\n    // usedBy!: LAttribute[];\r\n    isPrimitive!: false;\r\n    isClass!: false;\r\n    isEnum!: true;\r\n    // personal\r\n    literals!: LEnumLiteral[];\r\n    ordinals!: LEnumLiteral[]; // literal array ordered by ordinal number\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: Json = {};\r\n        let d = context.data;\r\n        if (d.instanceClassName) json[ECoreEnum.instanceTypeName] = d.instanceClassName;\r\n        json[ECoreEnum.xsitype] = 'ecore:EEnum';\r\n        json[ECoreEnum.namee] = d.name;\r\n        json[ECoreEnum.serializable] = d.serializable ? \"true\" : \"false\";\r\n        json[ECoreEnum.eLiterals] = context.proxyObject.literals.map(l => l.generateEcoreJson(loopDetectionObj));\r\n        return json; }\r\n\r\n    public duplicate(deep: boolean = true): this { return this.cannotCall( this.constructor.name + \"duplicate()\"); }\r\n    protected get_duplicate(context: Context): ((deep?: boolean) => this) {\r\n        return (deep: boolean = false) => {\r\n            BEGIN()\r\n            let de: D = context.proxyObject.father.addEnumerator(context.data.name) as D;\r\n            de.defaultValue = context.data.defaultValue;\r\n            de.serializable = context.data.serializable;\r\n            let le: this = LPointerTargetable.fromD(de);\r\n            let we: WEnumerator = le as any;\r\n            we.annotations = deep ? context.proxyObject.annotations.map(lchild => lchild.duplicate(deep).id) : context.data.annotations;\r\n            we.literals = deep ? context.proxyObject.literals.map(lchild => lchild.duplicate(deep).id) : context.data.literals;\r\n            END()\r\n            return le; }\r\n    }\r\n\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DEnumLiteral, 1, 'N'> {\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | DEnumLiteral, 1, 'N'>, ...context.data.literals]; }\r\n\r\n    public addLiteral(name?: DEnumLiteral[\"name\"], value?: DEnumLiteral[\"value\"]): DEnumLiteral { return this.cannotCall(\"addLiteral\"); }\r\n    protected get_addLiteral(context: Context): this[\"addLiteral\"] {\r\n        return (name?: DEnumLiteral[\"name\"], value?: DEnumLiteral[\"value\"]) => DEnumLiteral.new(name, value, context.data.id, true); }\r\n\r\n    protected get_literals(context: Context): this[\"literals\"] {\r\n        return context.data.literals.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        }); }\r\n\r\n    protected set_literals(val: PackArr<this[\"literals\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.literals;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'literals', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true; }\r\n\r\n    protected get_ordinals(context: Context): this[\"ordinals\"]{\r\n        let ret: LEnumLiteral[] = [];\r\n        let literals: LEnumLiteral[] = context.proxyObject.father.literals;\r\n        let dliterals: DEnumLiteral[] = literals.map(d => d.__raw);\r\n        /*\r\n        if it happens like:   second=2, third, fourth=4, fifth=3, sixth.(six would be 4 but 4 already exist)\r\n        there are 2 problems:\r\n        1) [3] is already occupied by third, but fith is correctly being the only one explicitly declaring his ordinal 3.\r\n           fixed by first assigning all known ordinals, then starting with the assumed ordinals.\r\n        2) sixth would get in position fourth, but that is already occupied\r\n         */\r\n\r\n        // adressing 1)\r\n        for (let i = 0; i < dliterals.length; i++) {\r\n            let v = dliterals[i].value;\r\n            if (v) { ret[v] = literals[i]; }\r\n        }\r\n\r\n        // setting assumed literals\r\n        let currentOrdinal = 0;\r\n        for (let i = 0; i < dliterals.length; i++) {\r\n            let v = dliterals[i].value;\r\n            if (v) { currentOrdinal = v; continue; }\r\n            while (ret[currentOrdinal]) currentOrdinal++; // adressing 2)\r\n            ret[currentOrdinal] = literals[i];\r\n        }\r\n        return ret; }\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const ret = () => {\r\n            const pointedBy = U.filteredPointedBy(data, 'type');\r\n            for(let me of pointedBy) {\r\n                if (me) {\r\n                    const dString = Selectors.getFirstPrimitiveTypes();\r\n                    SetFieldAction.new(me.__raw as DAttribute, 'type', dString.id, '', true);\r\n                }\r\n            }\r\n            data.superDelete();\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DDataType, DEnumerator);\r\nRuntimeAccessibleClass.set_extend(LDataType, LEnumerator);\r\n@RuntimeAccessible\r\nexport class DModelM1 extends DNamedElement{\r\n    name!: string;\r\n    roots!: Pointer<DObject, 1, 'N', LObject> // no package ma LObjects[] (solo quelli isRoot)\r\n    children!: DModelM1[\"roots\"];\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LModelM1 extends LNamedElement{\r\n    name!: string;\r\n    roots!: LObject[];\r\n    children!: LModelM1[\"roots\"];\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DModelM1, DNamedElement);\r\nRuntimeAccessibleClass.set_extend(LModelM1, LNamedElement);\r\ntype DPrimitiveType = DClass;\r\ntype LPrimitiveType = LClass;\r\n\r\n\r\n// problema: o costringo l'utente a fare sempre .value per ricevere il valore invece dei metadati\r\n// oppure ritorno il valore da subito ma dal valore non posso accedere ai metadati (upperbound...) a meno che non trovi un altor sistema.\r\n\r\n// possibile fix: LValue.toString() che ritorna il .value\r\n\r\n\r\n\r\n\r\n\r\n@RuntimeAccessible\r\nexport class DModel extends DNamedElement { // DNamedElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LModel;\r\n    // static logic: typeof LModel;\r\n    // static structure: typeof DModel;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DModel, 1, 1, LModel>;\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n    // personal\r\n    packages: Pointer<DPackage, 0, 'N', LPackage> = [];\r\n    isMetamodel: boolean = true;\r\n    objects: Pointer<DObject, 0, 'N', LObject> = [];\r\n    models: Pointer<DModel, 0, 'N', LModel> = [];\r\n    instanceof!: Pointer<DModel, 0, 1, LModel>;\r\n\r\n    public static new(name?: DNamedElement[\"name\"], instanceoff?: DModel[\"instanceof\"], isMetamodel?: DModel[\"isMetamodel\"], persist: boolean = true): DModel {\r\n        let dmodels: DModel[] = Selectors.getAll(DModel, undefined, undefined, true, false);\r\n        let dmodelnames: string[] = dmodels.map((d: DModel) => d.name);\r\n        if (!name) name = this.defaultname(\"model_\", ((name: string) => dmodelnames.includes(name)));\r\n        return new Constructors(new DModel('dwc'), undefined, persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DModel(instanceoff, isMetamodel).end();\r\n    }\r\n    static new2(setter: Partial<ObjectWithoutPointers<DModel>>, name?: DModel[\"name\"], instanceoff?: DModel[\"instanceof\"]): DModel {\r\n        let dmodels: DModel[] = Selectors.getAll(DModel, undefined, undefined, true, false);\r\n        let dmodelnames: string[] = dmodels.map((d: DModel) => d.name);\r\n        if (!name) name = this.defaultname(\"model_\", ((name: string) => dmodelnames.includes(name)));\r\n        return new Constructors(new DModel('dwc'), undefined, true, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DModel(instanceoff).end((d) => { Object.assign(d, setter); });\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class EdgeStarter<T1=any, T2=any>{ // <T1 extends LPointerTargetable = LPointerTargetable, T2 extends LPointerTargetable = LPointerTargetable>{\r\n    start: LModelElement;\r\n    end: LModelElement;\r\n    startNode: LGraphElement;\r\n    endNode: LGraphElement;\r\n    startVertex: LVoidVertex;\r\n    endVertex: LVoidVertex;\r\n    startSize: GraphSize;\r\n    endSize: GraphSize;\r\n    startVertexSize: GraphSize;\r\n    endVertexSize: GraphSize;\r\n    otherEnds: LGraphElement[];\r\n    overlaps: boolean;\r\n    vertexOverlaps: boolean;\r\n    constructor(start: LModelElement, end: LModelElement, sn: LGraphElement, en: LGraphElement, otherPossibleEnds: LGraphElement[] = []) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.startNode = sn;\r\n        this.endNode = en;\r\n        this.otherEnds = otherPossibleEnds || end.nodes;\r\n        this.startSize = sn.size;\r\n        this.endSize = en.size;\r\n        this.startVertex = sn.vertex as any;\r\n        this.endVertex = en.vertex as any;\r\n        this.startVertexSize = this.startVertex === sn ? this.startSize : this.startVertex.size;\r\n        this.endVertexSize = this.endVertex === en ? this.endSize : this.endVertex.size;\r\n        this.overlaps = this.startSize?.isOverlapping(this.endSize);\r\n        this.vertexOverlaps = this.startVertexSize?.isOverlapping(this.endVertexSize);\r\n    }\r\n    static oneToMany<T1 extends LModelElement = LModelElement, T2 extends LModelElement = LModelElement>(start: T1, ends:T2[]): EdgeStarter<T1, T2>[] {\r\n        let sn = start.node;\r\n        if (!sn) return [];\r\n        let rett: (EdgeStarter | undefined)[] = ends.map( (e) => {\r\n            if(!e) return undefined;\r\n            let en = e.node;\r\n            return en ? new EdgeStarter(start, e, sn as LGraphElement, en) : undefined;\r\n        });\r\n        let ret: (EdgeStarter)[] = rett.filter<EdgeStarter>(function(e: EdgeStarter|undefined): e is EdgeStarter { return !!e });\r\n        // let ret: (EdgeStarter)[] = rett.filter<EdgeStarter>((e): (e is EdgeStarter) => { return !!e });\r\n        return ret;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LModel<Context extends LogicContext<DModel> = any, C extends Context = Context, D extends DModel = DModel> extends LNamedElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DModel;\r\n    id!: Pointer<DModel, 1, 1, LModel>;\r\n    // static singleton: LModel;\r\n    // static logic: typeof LModel;\r\n    // static structure: typeof DModel;\r\n\r\n    // inherit redefine\r\n    parent!: LModel[];\r\n    father!: LModel;\r\n    annotations!: LAnnotation[];\r\n    name!: string;\r\n    namespace!: string;\r\n    // personal\r\n    isMetamodel!: boolean;\r\n\r\n    // Metamodel\r\n    packages!: LPackage[];\r\n    models!: LModel[];\r\n\r\n    // Model\r\n    instanceof?: LModel;\r\n    objects!: LObject[];\r\n    roots!: LObject[];\r\n\r\n    // utilities to go down in the tree (plural names)\r\n    enums!: LEnumerator[];\r\n    classes!: LClass[];\r\n    operations!: LOperation[];\r\n    parameters!: LParameter[];\r\n    exceptions!: LClassifier[];\r\n    attributes!: LAttribute[];\r\n    references!: LReference[];\r\n    literals!: LEnumLiteral[];\r\n    allSubAnnotations!: LAnnotation[];\r\n    allSubPackages!: LPackage[];\r\n    allSubObjects!: LObject[];\r\n    suggestedEdges!: {extend: EdgeStarter[], reference:EdgeStarter[], packageDependencies: EdgeStarter[]}; //, model: EdgeStarter[], package:EdgeStarter[], class:EdgeStarter[]};\r\n    __info_of__suggestedEdges: Info = {type: 'Dictionary<\"extend\" | \"reference\" | \"packageDependencies\" | DmodelName, EdgeStarter[]>', txt: \"A map to access all possible kind of edges based on model data.\" +\r\n            \"<br/>extend and reference are the most commonly used for horizontal references (outside the containment tree schema).\" +\r\n            \"<br/>packageDependencies links packages using classes from other packages.\" +\r\n            // \"<br/>other keys are the names of container data types (mode, package, class, object...) from them to their childrens rendered as Nodes (vertical tree schema).\" +\r\n            // todo: implement the commented part as LGrahElement.vertexs.map(v=>{start:v.parentnode.isVertex ? v.parentnode.id : undefined, end:v.id}).filter(e=>e.start) instead. it's a thing of graph more than model.\r\n            \"<br/> EdgeStarter is a collection of data useful to start a &lt;Edge /&gt; in JSX.\"}\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        const json: GObject = {};\r\n\r\n        // if it's M2 metamodel\r\n        if (context.data.isMetamodel) {\r\n            const packageArr: Json[] = [];\r\n            for (let pkg of context.proxyObject.packages) { packageArr.push(pkg.generateEcoreJson(loopDetectionObj)); }\r\n            // return (context.proxyObject.packages[0])?.generateEcoreJson(loopDetectionObj);\r\n            json[ECoreRoot.ecoreEPackage] = packageArr;\r\n            return json;\r\n        }\r\n\r\n        // if it's M1 model\r\n        // let serializeasroot = context.proxyObject.isRoot && loopDetectionObj.length; // if rootobj is nested because you started the serialization from another node, i prevent it generating root content\r\n        for (let obj of context.proxyObject.roots) { json[obj.ecoreRootName] = obj.generateEcoreJson(loopDetectionObj); }\r\n\r\n        return json; }\r\n\r\n    public addPackage(name?: DPackage[\"name\"], uri?: DPackage[\"uri\"], prefix?: DPackage[\"prefix\"]): DPackage { return this.cannotCall(\"addPackage\"); }\r\n    public get_addPackage(context: Context): ((name?: DPackage[\"name\"], uri?: DPackage[\"uri\"], prefix?: DPackage[\"prefix\"]) => DPackage) {\r\n        return (name?: DPackage[\"name\"], uri?: DPackage[\"uri\"], prefix?: DPackage[\"prefix\"]) => {\r\n            const me = DPackage.new(name, uri, prefix, context.data.id, true, DModel);\r\n            return me;\r\n        }\r\n    }\r\n\r\n    public addObject(instanceoff?:DObject[\"instanceof\"], name?: DObject[\"name\"]): DObject { return this.cannotCall(\"addObject\"); }\r\n    protected get_addObject(context: Context): this[\"addObject\"] {\r\n        return (instanceoff?:DObject[\"instanceof\"], name?: DObject[\"name\"]) => {\r\n            const dObject = DObject.new(instanceoff, context.data.id, DModel, undefined, true);\r\n            /*\r\n            if(!instanceoff) return dObject;\r\n            let father: LClass|undefined = LClass.fromPointer(instanceoff)?.extends?.[0];\r\n            while(father) {\r\n                for(let lFeature of [...father.attributes, ...father.references])\r\n                    DValue.new(lFeature.name, lFeature.id, undefined, dObject.id);\r\n                father = (father.extends.length > 0) ? father.extends[0] : undefined;\r\n            }\r\n            */\r\n            return dObject;\r\n        }\r\n    }\r\n\r\n    public get_suggestedEdges(context: Context): this[\"suggestedEdges\"]{\r\n        let ret: this[\"suggestedEdges\"];\r\n        if (context.data.isMetamodel) ret = this.get_suggestedEdgesM2(context);\r\n        else ret = this.get_suggestedEdgesM1(context);\r\n        /*\r\n        ret.extend = ret.extend || [];\r\n        ret.packageDependencies = ret.packageDependencies || [];\r\n        ret.reference = ret.reference || [];\r\n\r\n        console.log(\"suggested edges, pre filter\", {...ret});\r\n        ret.extend = ret.extend.filter( r => !r.startNode.size.isOverlapping(r.endNode.size));\r\n        ret.packageDependencies = ret.packageDependencies.filter( r => !r.startNode.size.isOverlapping(r.endNode.size));\r\n        ret.reference = ret.reference.filter( r => !r.startNode.size.isOverlapping(r.endNode.size));\r\n\r\n        console.log(\"suggested edges, post filter\", {...ret});*/\r\n        return ret;\r\n    }\r\n    private get_suggestedEdgesM2(context: Context): this[\"suggestedEdges\"]{\r\n        let ret: this[\"suggestedEdges\"] = {} as any;\r\n        let s: DState = store.getState();\r\n        let classes: LClass[] = this.get_classes(context, s);\r\n        let references: LReference[] = classes.flatMap(c=>c.references);\r\n        ret.reference = references.map( (r) => {\r\n            let sn = r.node;\r\n            if (!sn) return undefined;\r\n            let end = r.type;\r\n            if (end.id === r.id) return undefined;\r\n            let en = end.node;\r\n            if (!en) return undefined;\r\n            return new EdgeStarter(r, end, sn, en);\r\n        }).filter<EdgeStarter>(function(e):e is EdgeStarter{ return !!e});\r\n        // ret.extend = classes.flatMap( c => EdgeStarter.oneToMany(c, c.extends));\r\n\r\n        let alreadyAdded: Dictionary<Pointer, LClass> = {};\r\n        // if A extends B1, B2;    B1 extends C1, C2;    and node B1 is hidden. instead of edge from A to B, i display edge from A~C1, A~C2, A~B2\r\n        function SkipExtendNodeHidden(start: LClass, end: LClass[], rootCall: boolean = true): ({start: LClass, end: LClass, sn: LGraphElement, en: LGraphElement})[] {\r\n            let ret: {start: LClass, end: LClass, sn: LGraphElement, en: LGraphElement}[] = [] as any;\r\n            if (rootCall) { alreadyAdded = {}; alreadyAdded[start.id] = start; } // end classes can get added twice if from a different starting subclass path (in classes.flatMap -> each one should have his own dict).\r\n            // ret.start = start;\r\n            let sn = start.node;\r\n            if (!sn) return [];\r\n            //  let end: LClass[] = start.extends;\r\n            for (let e of end) {\r\n                let eid = e.id;\r\n                if (alreadyAdded[eid]) continue; // without this there might be duplicates if A extends B1, B2;  and both B1 & B2 extends C\r\n                alreadyAdded[eid] = e;\r\n                let en = e.node;\r\n                if (en) { ret.push({start, end:e, sn, en}); continue; } // continue;\r\n                let secondTierExtends = e.extends;\r\n                // for (let eend of secondTierExtends) {\r\n                ret.push(...SkipExtendNodeHidden(start, secondTierExtends, false));\r\n                //}\r\n            }\r\n            return ret;\r\n        }\r\n        ret.extend = classes.flatMap(c => SkipExtendNodeHidden(c, c.extends, true)).map( (es) => new EdgeStarter(es.start, es.end, es.sn, es.en));\r\n\r\n        let dependencies: {src:LModelElement, ends: LModelElement[]}[] = [...(classes.map(c=>{ return {src:c, ends:c.superclasses}})), ...(references.map(r=> { return {src:r, ends:[r.type]}}))]\r\n        let pkgdependencies: {src: LPackage, sn: LGraphElement, ends: Dictionary<Pointer, {end:LPackage, en:LGraphElement}>}[] = []; // transform form in dictionary to prevent duplicates\r\n        //dependencies.map( d=> { let end = d.end.package; return {src:d.src.package, end, endid:end.id}})\r\n\r\n        for (let d of dependencies) {\r\n            let src: LPackage | null = d.src.package;\r\n            if (!src) continue;\r\n            let srcnode: LGraphElement | undefined = src.node;\r\n            if (!srcnode) continue;\r\n            let ends: Dictionary<Pointer, {end:LPackage, en:LGraphElement}> = {};\r\n            for (let end of d.ends) {\r\n                let ep: LPackage|null = end.package;\r\n                if (!ep) continue;\r\n                let epnode: LGraphElement | undefined = ep.node;\r\n                if (!epnode) continue;\r\n                ends[ep.id] = {end:ep, en:epnode};\r\n            }\r\n            pkgdependencies.push( {src, sn:srcnode, ends});\r\n        }\r\n        ret.packageDependencies = pkgdependencies.flatMap( pd => ( Object.values(pd.ends).map((end) => new EdgeStarter(pd.src, end.end, pd.sn, end.en)))); // todo: check\r\n        return ret; }\r\n\r\n    private get_suggestedEdgesM1(context: Context): this[\"suggestedEdges\"]{\r\n        let ret: this[\"suggestedEdges\"] = {todo:true} as any;\r\n        return ret;// todo\r\n    }\r\n\r\n    protected get_models(context: Context): LModel[] {\r\n        return LModel.fromPointer(context.data.models);\r\n    }\r\n    protected set_models(val: PackArr<this['models']>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.models;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'models', list, '', true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    public duplicate(deep: boolean = true): this { throw new Error(\"Model.duplicate(): use export/import ecore instead.\"); }\r\n\r\n    protected set_instanceof(val: Pack1<this[\"instanceof\"]>, context: Context): boolean {\r\n        let ptr = Pointers.from(val);\r\n        SetFieldAction.new(context.data.id, \"instanceof\", ptr, undefined, true);\r\n        // update father's collections (pointedby's here are set automatically)\r\n        // todo: ptr && SetFieldAction.new(ptr, \"instances\", context.data.id, '+=', true);\r\n        return true; }\r\n    protected get_instanceof(context: Context): this[\"instanceof\"] { return context.data.instanceof ? LPointerTargetable.fromPointer(context.data.instanceof) : undefined; }\r\n\r\n    protected set_name(val: this['name'], context: Context): boolean {\r\n        const models: LModel[] = LModel.fromPointer(store.getState()['models']);\r\n        if(models.filter((model) => { return model.name === val }).length > 0) {\r\n            U.alert('error', 'Cannot rename the selected element since this name is already taken.');\r\n        } else {\r\n            SetFieldAction.new(context.data, 'name', val, '', false);\r\n        }\r\n        return true;\r\n    }\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | (DPackage|DObject), 1, 'N'> {\r\n        let children: Pointer<(DPackage|DObject), 0, 'N', (LPackage|LObject)>;\r\n        if(context.data.isMetamodel) children = context.data.packages;\r\n        else children = context.data.objects;\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | (DPackage|DObject), 1, 'N'>,\r\n            ...children];\r\n    }\r\n\r\n    protected get_isMetamodel(context: Context): this['isMetamodel'] {\r\n        return context.data.isMetamodel;\r\n    }\r\n    protected set_isMetamodel(val: this['isMetamodel'], context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'isMetamodel', val, '', false);\r\n        return true;\r\n    }\r\n\r\n    protected get_objects(context: Context): this['objects'] {\r\n        return context.data.objects.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n\r\n    protected get_packages(context: Context): this[\"packages\"] {\r\n        return context.data.packages.map((pointer) => {\r\n            return LPointerTargetable.from(pointer)\r\n        });\r\n    }\r\n\r\n    protected set_packages(val: PackArr<this[\"packages\"]>, context: Context): boolean {\r\n        const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        const oldList = context.data.packages;\r\n        const diff = U.arrayDifference(oldList, list);\r\n        BEGIN();\r\n        SetFieldAction.new(context.data, 'packages', list, \"\", true);\r\n        for (let id of diff.added) {\r\n            SetFieldAction.new(id, 'father', context.data.id, '', true);\r\n            SetFieldAction.new(id, 'parent', context.data.id, '+=', true);\r\n        }\r\n        for (let id of diff.removed as Pointer<DModelElement>[]) {\r\n            SetFieldAction.new(id, 'father', undefined, '', true);\r\n            const parent = DPointerTargetable.from(id).parent;\r\n            U.arrayRemoveAll(parent, context.data.id);\r\n            SetFieldAction.new(id, 'parent', parent, '', true);\r\n        }\r\n        END();\r\n        return true;\r\n    }\r\n\r\n    protected get_roots(context: Context): this[\"roots\"] {\r\n        return this.get_objects(context).filter( o => o.isRoot);\r\n    }\r\n    protected get_classes(context: Context, s?: DState): this[\"classes\"] {\r\n        s = s||store.getState();\r\n        return this.get_allSubPackages(context, s).flatMap(p => p.classes || []);\r\n    }\r\n    protected get_references(context: Context, s?: DState): this[\"references\"] {\r\n        s = s||store.getState();\r\n        return this.get_classes(context, s).flatMap(p => p.references || []);\r\n    }\r\n\r\n    protected get_enums(context: Context): this[\"enums\"] {\r\n        return this.get_enumerators(context);\r\n    }\r\n\r\n    protected get_enumerators(context: Context, s?: DState): this[\"enums\"] {\r\n        s = s||store.getState();\r\n        return this.get_allSubPackages(context, s).flatMap(p => (p.enums || []));\r\n    }\r\n\r\n    protected get_allSubPackages(context: Context, state?: DState): this[\"allSubPackages\"] {\r\n        state = state || store.getState();\r\n        let tocheck: Pointer<DPackage>[] = context.data.packages || [];\r\n        let checked: Dictionary<Pointer, true> = {};\r\n        while (tocheck.length) {\r\n            let newtocheck: Pointer<DPackage>[] = [];\r\n            for (let ptr of tocheck) {\r\n                if (checked[ptr]) throw new Error(\"loop in packages containing themselves\");\r\n                checked[ptr] = true;\r\n                let dpackage: DPackage = DPointerTargetable.from(ptr, state);\r\n                U.arrayMergeInPlace(newtocheck, dpackage?.subpackages);\r\n            }\r\n            tocheck = newtocheck;\r\n        }\r\n        return LPointerTargetable.from(Object.keys(checked), state);\r\n    }\r\n    protected get_allSubObjects(context: Context, state?: DState): this[\"allSubObjects\"] {\r\n        state = state || store.getState();\r\n        return (Selectors.getAll(DObject, undefined, state, true, true) as LObject[]).filter( (o: LObject) => o.model.id === context.data.id);\r\n        /*\r\n        let tocheck: Pointer<DObject>[] = context.data.objects || [];\r\n        let checked: Dictionary<DObject, true> = {};\r\n        while (tocheck.length) {\r\n            let newtocheck: Pointer<DObject>[] = [];\r\n            for (let ptr of tocheck) {\r\n                if (checked[ptr]) throw new Error(\"loop in packages containing themselves\");\r\n                checked[ptr] = true;\r\n                let dpackage: DObject = DPointerTargetable.from(ptr, state);\r\n                U.arrayMergeInPlace(newtocheck, dpackage?.values.... it's a mess, filter subobjects here);\r\n            }\r\n            tocheck = newtocheck;\r\n        }\r\n        return LPointerTargetable.from(Object.keys(checked), state);*/\r\n    }\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const ret = () => { U.alert('error', 'In this version of the tool models cannot be deleted.'); }\r\n        return ret;\r\n    }\r\n\r\n    public getClassByNameSpace(namespacedclass: string): LClass | undefined { return this.cannotCall(\"getClassByNameSpace\"); }\r\n    protected get_getClassByNameSpace(context: Context): this[\"getClassByNameSpace\"] {\r\n        return (namespacedclass: string): LClass | undefined => {\r\n            let pos = namespacedclass.lastIndexOf(\":\");\r\n            let pkguri = namespacedclass.substring(0, pos);\r\n            let classname = namespacedclass.substring(pos+1);\r\n            let pkg: LPackage | undefined = this.get_getPackageByUri(context)(pkguri);\r\n            if (!pkg) return undefined;\r\n            // return pkg[\"@\" + classname];\r\n            return pkg.classes.filter((c) => c.name === classname)[0];\r\n        }; }\r\n    public getPackageByUri(uri: string): LPackage | undefined { return this.cannotCall(\"getPackageByUri\"); }\r\n    protected get_getPackageByUri(context: Context): this[\"getPackageByUri\"] {\r\n        return (uri: string)=>context.proxyObject.allSubPackages.filter((p)=>p.uri === uri)[0]; }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DModel);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LModel);\r\n\r\n\r\n@RuntimeAccessible\r\nexport abstract class DFactory_useless_ extends DPointerTargetable { // DModelElement\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LFactory_useless_;\r\n    // static logic: typeof LFactory_useless_;\r\n    // static structure: typeof DFactory_useless_;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DFactory_useless_, 1, 1, LFactory_useless_>;\r\n    parent: Pointer<DModelElement, 0, 'N', LModelElement> = [];\r\n    father!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    // personal\r\n    ePackage: Pointer<DPackage, 1, 1, LPackage> = '';\r\n    abstract create(DClass: DClass): DObject;\r\n    abstract createFromString(eDataType: DDataType, literalValue: string): EJavaObject;\r\n    abstract convertFromString(eDataType: DDataType, instanceValue: EJavaObject): string;\r\n    // ********************** my additions inherited ********************* //\r\n    // ********************** my additions personal ********************** //\r\n}\r\n@RuntimeAccessible\r\nexport abstract class LFactory_useless_<Context extends LogicContext<DFactory_useless_> = any, C extends Context = Context>  extends LModelElement {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DFactory_useless_;\r\n    id!: Pointer<DFactory_useless_, 1, 1, LFactory_useless_>;\r\n    // static singleton: LFactory_useless_;\r\n    // static logic: typeof LFactory_useless_;\r\n    // static structure: typeof DFactory_useless_;\r\n\r\n    // inherit redefine\r\n    parent!: LModelElement[];\r\n    father!: LModelElement;\r\n    annotations!: LAnnotation[];\r\n    // personal\r\n    ePackage!: LPackage;\r\n    abstract create(DClass: DClass): DObject;\r\n    abstract createFromString(eDataType: DDataType, literalValue: string): EJavaObject;\r\n    abstract convertFromString(eDataType: DDataType, instanceValue: EJavaObject): string;\r\n    // ********************** my additions inherited ********************* //\r\n    // ********************** my additions personal ********************** //\r\n}\r\n\r\n// DModelElement.subclasses.push('DFactory_useless_'); // because it's abstract and cannot be used as a value, it's pure type definition\r\n// DModelElement.subclasses.push('LFactory_useless_'); // because it's abstract and cannot be used as a value, it's pure type definition\r\n// RuntimeAccessibleClass.set_extend(DModelElement, DFactory_useless_);\r\n// RuntimeAccessibleClass.set_extend(LModelElement, LFactory_useless_);\r\n\r\n@RuntimeAccessible\r\nexport class EJavaObject{\r\n\r\n}// ??? EDataType instance?\r\n\r\n\r\n@RuntimeAccessible\r\nexport class DMap extends Object { // DPointerTargetable\r\n    // static logic: typeof LModelElement;\r\n    // static structure: typeof DModelElement;\r\n    // static singleton: LModelElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    __isDMap!: true;\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    // id!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LMap<Context extends LogicContext<DMap> = any, C extends Context = Context>  extends LPointerTargetable {\r\n    // static logic: typeof LModelElement;\r\n    // static structure: typeof DModelElement;\r\n    // static singleton: LModelElement;\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    __isLMap!: true;\r\n    // id!: Pointer<DModelElement, 1, 1, LModelElement>;\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DMap as any);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LMap);\r\n@RuntimeAccessible\r\nexport class DObject extends DPointerTargetable { // extends DNamedElement, m1 class instance\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n\r\n    // inherit redefine\r\n    annotations!: never[];\r\n    id!: Pointer<DObject, 1, 1, LObject>;\r\n    parent: Pointer<DModel | DValue, 0, 'N', LModel | LValue> = [];\r\n    father!: Pointer<DModel, 1, 1, LModel> |  Pointer<DValue, 1, 1, LValue>;\r\n    // annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name!: string;\r\n\r\n    // personal\r\n    instanceof!: Pointer<DClass, 0, 1, LClass>;\r\n    features: Pointer<DValue, 0, 'N', LValue> = [];\r\n\r\n\r\n    public static new(instanceoff?: DObject[\"instanceof\"], father?: DObject[\"father\"], fatherType?: typeof DModel | typeof DValue, name?: DNamedElement[\"name\"], persist: boolean = true): DObject {\r\n        // if (!name) name = this.defaultname(((meta: LNamedElement) => meta.name + \" \"), father);\r\n        if (!name) name = this.defaultname(((meta: LNamedElement) => (meta?.name || \"obj\") + \"_\"), father, instanceoff);\r\n        let ret = new Constructors(new DObject('dwc'), father, persist, fatherType).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name).DObject(instanceoff).end();\r\n        return ret;\r\n    }\r\n\r\n\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LObject<Context extends LogicContext<DObject> = any, C extends Context = Context, D extends DObject = DObject> extends LNamedElement { // extends DNamedElement, m1 class instance\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DObject;\r\n    id!: Pointer<DObject, 1, 1, LObject>;\r\n\r\n    // inherit redefine\r\n    annotations!: never[];\r\n    children!: LValue[];\r\n    allchildren!: LValue[]; // including hidden values\r\n    truechildren!: LValue[]; // real shape without \"mirage\" values\r\n    parent!: (LModel | LValue)[];\r\n    father!: LModel | LValue;\r\n    model!: LModel;\r\n    // annotations!: LAnnotation[];\r\n    // from LClass\r\n\r\n    name!: string;\r\n    ecoreRootName!: string;\r\n    namespace!: string;\r\n    fullname!:string;\r\n    defaultValue!: DClass[\"defaultValue\"];\r\n    // abstract!: boolean;\r\n    // interface!: boolean;\r\n    // references!: LReference[];\r\n    // attributes!: LAttribute[];\r\n    // operations!: LOperation[];\r\n\r\n    // personal\r\n    deepSubObjects!: LObject[]; // todo: itera features (lvalue[]) deep e vitando di inserire doppioni (salva una mappatura di di già aggiunti e skip se ricompaiono)\r\n    subObjects!: LObject[];\r\n    referenceFeatures!: LValue[]; // subset of features that are references.\r\n    attributeFeatures!: LValue[]; // subset of features that are attributes.\r\n    shapelessFeatures!: LValue[]; // subset of features that are not mapped and can have any kind of values.\r\n    // + tutte le funzioni di comodità navigazionale del modello, trattarlo un pò come se fosse un modello (e quasi può esserlo)\r\n    instanceof!: LClass;\r\n    features!: LValue[];\r\n    referencedBy!: LObject[];\r\n    isRoot!: boolean;\r\n    readonly partial!: boolean;\r\n\r\n    protected get_truechildren(context: Context): this[\"children\"] {\r\n        let childs: LValue[] = super.get_children(context);\r\n        if (!context.data.instanceof) return childs;\r\n        return childs.filter( (c) => !c.isMirage);\r\n    }\r\n\r\n    protected get_allchildren(context: Context): this[\"children\"] { return super.get_children(context); }\r\n\r\n    protected get_children(context: Context, sort: boolean = true): this[\"children\"] {\r\n        let childs: LValue[] = super.get_children(context);\r\n        let meta: LClass = context.proxyObject.instanceof;\r\n        // if (!sort && (!meta || meta.partial)) return childs;\r\n        let conformchildren: undefined | Pointer[] = meta && !meta.partial ? meta.allChildren.map(c => c.id) : undefined;\r\n        if (!sort) {\r\n            // console.log(\"return get features:\", {context, meta, childs, conformchildren, ret:childs.filter((c) => (c.instanceof?.id) && conformchildren!.includes(c.instanceof?.id))});\r\n            if (!conformchildren) return childs;\r\n            return childs.filter((c) => (c.instanceof?.id) && conformchildren!.includes(c.instanceof?.id));\r\n        }\r\n\r\n        let bymetaparent: Dictionary<DocString<\"metaparent pointer\">, LValue[]> = {};\r\n        for (let v of childs) {\r\n            let vmeta = v.instanceof;\r\n            // console.log(\"get features filtering:\", {context, meta, vmeta, v, childs, conformchildren});\r\n\r\n            if (conformchildren && (!vmeta || !conformchildren.includes(vmeta.id))) continue;\r\n            let vmetaid: string = vmeta?.id as string; // undef as key is fine even if compiler complains, so i cast it\r\n            if (!bymetaparent[vmetaid]) bymetaparent[vmetaid] = [v]; else bymetaparent[vmetaid as any].push(v);\r\n        }\r\n        // console.log(\"return get features:\", {context, meta, childs, conformchildren, ret:Object.values(bymetaparent).flat()});\r\n        return Object.values(bymetaparent).flat();\r\n    }\r\n\r\n\r\n    // protected get_fromlclass<T extends keyof (LClass)>(meta: LClass, key: T): LClass[T] { return meta[key]; }\r\n    protected get_model(context: Context): LModelElement[\"model\"] {\r\n        let l: LValue | LObject | LModel = context.proxyObject;\r\n        while (l && l.className !== DModel.name) l = l.father;\r\n        return l as LModel; }\r\n    // protected set_name(val: string, context: Context): boolean { return this.cannotSet(\"name\"); }\r\n    protected get_name(context: Context): LClass[\"name\"] { return context.data.name || context.proxyObject.instanceof.name; }\r\n    protected set_namespace(val: string, context: Context): boolean { return this.cannotSet(\"namespace\"); }\r\n    // protected get_namespace(context: Context): LClass[\"namespace\"] { return context.proxyObject.instanceof.namespace; }\r\n    protected set_fullname(val: string, context: Context): boolean { return this.cannotSet(\"fullname\"); }\r\n    protected get_fullname(context: Context): LClass[\"fullname\"] { return context.proxyObject.instanceof.fullname; }\r\n    protected set_ecoreRootName(val: string, context: Context): boolean { return this.cannotSet(\"ecoreRootName\"); }\r\n    protected get_ecoreRootName(context: Context): LObject[\"ecoreRootName\"] {\r\n        let instanceoff: LClass = context.proxyObject.instanceof;\r\n        if (!instanceoff) return \"schemaless:Object\";\r\n        return this.get_uri(context) + \":\" + instanceoff.name; // optimize later in instanceoff.namespace + \":\" + instanceoff.name; and implement namespace all around\r\n    }\r\n    protected set_partialdefaultname(val: DClass[\"partialdefaultname\"], context: Context): boolean { return this.cannotSet(\"DObject.partialdefaultname()\"); }\r\n    protected get_partialdefaultname(context: Context): DClass[\"partialdefaultname\"] { return context.data.instanceof ? context.proxyObject.instanceof.partialdefaultname : \"val_\"; }\r\n    protected set_partial(val: DClass[\"partial\"], context: Context): boolean { return this.cannotSet(\"DObject.set_partial()\"); }\r\n    protected get_partial(context: Context): DClass[\"partial\"] { return context.data.instanceof ? context.proxyObject.instanceof?.partial : true; }\r\n\r\n    /*    protected set_abstract(val: string, context: Context): boolean { return this.cannotSet(\"abstract\"); }\r\n        protected get_abstract(context: Context): LClass[\"abstract\"] { return context.proxyObject.instanceof.abstract; }\r\n        protected set_interface(val: string, context: Context): boolean { return this.cannotSet(\"interface\"); }\r\n        protected get_interface(context: Context): LClass[\"interface\"] { return context.proxyObject.instanceof.interface; }*/\r\n    protected set_defaultValue(val: string, context: Context): boolean { return this.cannotSet(\"defaultValue\"); }\r\n    protected get_defaultValue(context: Context): LClass[\"defaultValue\"] { return context.proxyObject.instanceof.defaultValue; }\r\n    protected set_referencedBy(val: string, context: Context): boolean { return this.wrongAccessMessage(\"referencedBy cannot be set directly. It should be updated automatically as side effect\"); }\r\n    protected get_referencedBy(context: Context): LObject[\"referencedBy\"] {\r\n        let state: DState = store.getState();\r\n        let targeting: LObject[] = LPointerTargetable.fromArr(context.data.pointedBy.map( p => {\r\n            let s: GObject = state;\r\n            for (let key of PointedBy.getPathArr(p)) {\r\n                s = s[key];\r\n                if (!s) return null;\r\n                if (s.className === DObject.name) return s.id;\r\n            }\r\n        }));\r\n        return targeting; }\r\n\r\n    protected get_subObjects(context: Context): this[\"subObjects\"] {\r\n        let ref_features: LValue[] = this.get_referenceFeatures(context, false).filter( (f) => (f.instanceof as LReference)!.containment );\r\n        let shapeless_features: LValue[] = this.get_shapelessFeatures(context);\r\n        let vals: LObject[] = [\r\n            ...ref_features.flatMap((f) => (f.values as LObject[])).filter((val)=>!!val),\r\n            ...shapeless_features.flatMap((f) => (f.values as any))\r\n                .filter((val)=>(!!val && val.className === DObject.name)) as LObject[]\r\n        ];\r\n        return vals;\r\n    }\r\n\r\n    protected get_deepSubObjects(context: Context): this[\"deepSubObjects\"] {\r\n        let alreadyparsed: Dictionary<Pointer, LObject> = {};\r\n        let arr: LObject[] = this.get_subObjects(context);\r\n        while(arr.length) {\r\n            let next: LObject[] = [];\r\n            for (let obj of arr) {\r\n                if (alreadyparsed[obj.id]) continue;\r\n                alreadyparsed[obj.id] = obj;\r\n                next.push(...obj.subObjects);\r\n            }\r\n            arr = next;\r\n        }\r\n        return Object.values(alreadyparsed) || [];\r\n    }\r\n\r\n    protected get_referenceFeatures(context: Context, includeshapeless: boolean = false): this[\"referenceFeatures\"] {\r\n        return context.proxyObject.features.filter((f) => (!f.instanceof ? includeshapeless : f.instanceof.className === DReference.name));\r\n    }\r\n    protected get_attributeFeatures(context: Context, includeshapeless: boolean = false): this[\"attributeFeatures\"] {\r\n        return context.proxyObject.features.filter((f) => (!f.instanceof ? includeshapeless : f.instanceof.className === DAttribute.name));\r\n    }\r\n\r\n    protected get_shapelessFeatures(context: Context): this[\"shapelessFeatures\"] {\r\n        return context.proxyObject.features.filter((f) => (!f.instanceof));\r\n    }\r\n\r\n    protected get_isRoot(context: Context): LObject[\"isRoot\"] { return context.proxyObject.father.className === DModel.name; }\r\n    protected set_isRoot(val: never, context: Context): boolean { return this.wrongAccessMessage(\"isRoot cannot be set directly, change father element instead.\"); }\r\n\r\n    public feature(name: string): (PrimitiveType|LObject)|(PrimitiveType|LObject)[] { this.cannotCall('feature'); return null; }\r\n    private get_feature(context: Context): (name: string) => LValue[\"value\"] | LValue[\"values\"] {\r\n        return (name: string) => {\r\n            const lObject = context.proxyObject;\r\n            const features = lObject.features.filter((value) => {\r\n                return value.instanceof?.name === name\r\n            });\r\n            if(features.length > 0) {\r\n                const matchedFeature = features[0];\r\n                switch(matchedFeature.values.length) {\r\n                    case 0: return '';\r\n                    case 1: return matchedFeature.value;\r\n                    default: return matchedFeature.values;\r\n                }\r\n            } return '';\r\n        }\r\n    }\r\n\r\n    public addValue(name?: DValue[\"name\"], instanceoff?: DValue[\"instanceof\"], value?: DValue[\"values\"], isMirage?: boolean): DValue { return this.cannotCall(\"addValue\"); }\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        let asEcoreRoot = (context.proxyObject.isRoot);\r\n        // todo: actually use this loopdetectionobj\r\n        const json: GObject = {};\r\n        if (asEcoreRoot) {\r\n            console.log(\"generate object ecore\", {context, asEcoreRoot, json});\r\n            const lc: LClass = context.proxyObject.instanceof;\r\n            json[ECorePackage.xmiversion] = '2.0';\r\n            json[ECorePackage.xmlnsxmi] = 'http://www.omg.org/XMI';\r\n            // json[ECorePackage.xmlnsxsi] = 'http://www.w3.org/2001/XMLSchema-instance';\r\n            json[\"xmlns:\" + ( lc ? (lc.father.uri + \".\" +lc.father.name) : \"shapeless.model.uri\")] = 'http://www.eclipse.org/emf/2002/Ecore';\r\n        }\r\n\r\n        let features = context.proxyObject.features || [];\r\n        console.log(\"features\", {features});\r\n        for (let f of features){\r\n            json[f.name] = f.generateEcoreJson(loopDetectionObj);\r\n        }\r\n\r\n\r\n        return json; }\r\n    protected get_addValue(context: Context): this[\"addValue\"] {\r\n        return (name?: DValue[\"name\"], instanceoff?: DValue[\"instanceof\"], value?: DValue[\"values\"], isMirage?: boolean) => DValue.new(name, instanceoff, value, context.data.id, true, isMirage); }\r\n\r\n    protected get_namespace(context: Context): string {\r\n        return context.data.instanceof ? context.proxyObject.instanceof.father.prefix : \"schemaless\"; }\r\n    protected get_uri(context: Context): string {\r\n        if (!context.data.instanceof) return \"schemaless\";\r\n        let pkg = context.proxyObject.instanceof.father;\r\n        return pkg.uri;// + \".\" + pkg.name;\r\n    }\r\n    // protected get_namespace(context: Context): string { if (!context.data.instanceof) return \"schemaless\"; return context.proxyObject.instanceof.namespace; }\r\n\r\n    protected get_children_idlist(context: Context): Pointer<DAnnotation | DValue, 1, 'N'> {\r\n        return [...super.get_children_idlist(context) as Pointer<DAnnotation | DValue, 1, 'N'>,\r\n            ...context.data.features];\r\n    }\r\n\r\n    protected get_instanceof(context: Context): this[\"instanceof\"] {\r\n        const pointer = context.data.instanceof;\r\n        return LPointerTargetable.from(pointer)\r\n    }\r\n    protected set_instanceof(val: Pack1<this[\"instanceof\"]>, context: Context): boolean {\r\n        const metaptr: D[\"instanceof\"] = Pointers.from(val);\r\n        this._removeConformity(context);\r\n        SetFieldAction.new(context.data.id, \"instanceof\", metaptr, undefined, true);\r\n        // update father's collections (pointedby's here are set automatically)\r\n        metaptr && SetFieldAction.new(metaptr as Pointer<DClass>, \"instances\", context.data.id, '+=', true);\r\n        if (metaptr) this._forceConformity(context, metaptr);\r\n        return true;\r\n    }\r\n\r\n    private forceConformity(context: Context, meta: D[\"instanceof\"]): void {\r\n        let oldinstanceof = context.data.instanceof;\r\n        // context.data.instanceof = meta;\r\n        let ret = this._forceConformity(context, meta);\r\n        // context.data.instanceof = oldinstanceof;\r\n        return ret;\r\n    }\r\n    private _forceConformity(context: Context, meta: D[\"instanceof\"]): void {\r\n        let lmeta = meta && LPointerTargetable.wrap(meta) as this[\"instanceof\"];\r\n        if (!lmeta) return;\r\n        let attrs = lmeta.allAttributes;\r\n        let refs = lmeta.allReferences;\r\n        let values = context.proxyObject.allchildren;\r\n        let idmap: Dictionary<string, LAttribute | LReference> = {};\r\n        for (let a of attrs) { idmap[a.id] = a; }\r\n        for (let a of refs) { idmap[a.id] = a; }\r\n        console.log({values, data: context.data, l:context.proxyObject});\r\n        // damiano: todo quando viene cancellato una feature il puntatore in features e values rimane. use pointedby's\r\n        // then remove \"v &&\" \"filter in if\r\n        for (let v of values) { if(v && v.__raw.instanceof) delete idmap[v.__raw.instanceof]; }\r\n        console.log(\"forceconformity\", {attrs, refs, values: values.map(v=> v && v.__raw.instanceof), idmap});\r\n        for (let id in idmap) {\r\n            // let l = idmap[id];\r\n            context.proxyObject.addValue(undefined, id, [],true);\r\n        }\r\n    }\r\n    private _removeConformity(context: Context): void {\r\n        let childs = context.proxyObject.features;\r\n        for (let child of childs) if (child.isMirage) child.delete();\r\n    }\r\n\r\n    protected get_features(context: Context): this['features'] {\r\n        return this.get_children(context);\r\n        // return context.data.features.map((feature) => { return LPointerTargetable.from(feature) });\r\n    }\r\n\r\n    protected get_delete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const ret = () => {\r\n            const pointedBy = U.filteredPointedBy(data, 'values');\r\n            for(let me of pointedBy) {\r\n                if (me) {\r\n                    const lValue = me as LValue;\r\n                    const dFather = lValue.father.__raw as DObject;\r\n                    SetFieldAction.new(lValue.__raw, 'values', dFather.features.indexOf(data.id as string), '-=', true);\r\n                }\r\n            }\r\n            const me = data.instanceof;\r\n            SetFieldAction.new(me.__raw, 'instances', me.__raw.instances.indexOf(data.id), '-=', true);\r\n            data.superDelete();\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public ecorePointer(): string { return this.cannotCall(\"ecorePointer\"); }\r\n    protected get_ecorePointer(context: Context): () => string {\r\n        let lastvisited: Pointer<DObject, 1, 1, LObject> = context.data.id;\r\n        return () => \"@//\" + this.get_fatherList(context).map( (f: LModelElement | LObject | LValue) => {\r\n            if (f.className === DObject.name) { lastvisited = (f as LObject).id; return ''; }\r\n            if (f.className === DModel.name) { return ''; }\r\n            console.log(\"get_ecorepointer\", f, f.__raw, lastvisited);\r\n            return (f as LValue).name + \".\" + ((f as LValue).__raw.values.indexOf(lastvisited));\r\n        }).filter(v=>!!v).join(\"@/\");\r\n    }\r\n\r\n}\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DObject);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LObject);\r\n@RuntimeAccessible\r\nexport class DValue extends DModelElement { // extends DModelElement, m1 value (attribute | reference)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LValue;\r\n    // static logic: typeof LModelElement;\r\n    // static structure: typeof DValue;\r\n\r\n    // inherit redefine\r\n    id!: Pointer<DValue, 1, 1, LValue>;\r\n    parent: Pointer<DObject, 0, 'N', LObject> = [];\r\n    father!: Pointer<DObject, 1, 1, LObject>;\r\n    annotations: Pointer<DAnnotation, 0, 'N', LAnnotation> = [];\r\n    name?: string; // nome opzionale solo per modelli schema-less\r\n\r\n    // personal\r\n    // value: PrimitiveType | Pointer<DObject, 1, 1, LObject>; // vv4\r\n    // values: PrimitiveType[] | Pointer<DObject, 1, 'N', LObject> | Pointer<DEnumLiteral, 1, 'N', LEnumLiteral> = []; // vv4\r\n    values: PrimitiveType[] | Pointer<DObject|DEnumLiteral, 1, 'N', LObject|LEnumLiteral> = [];\r\n    instanceof!: Pointer<DAttribute, 1, 1, LAttribute > | Pointer<DReference, 1, 1, LReference> | undefined; // todo: maybe min lowerbound 0 if you want to allow free shape objects chiedere prof\r\n    edges!: Pointer<DEdge, 0, 'N', LEdge>;\r\n    // conformsTo!: Pointer<DStructuralFeature, 0, 'N', LStructuralFeature>; // low priority to do: attributo fittizio controlla a quali elementi m2 è conforme quando viene richiesto\r\n    isMirage!: boolean;\r\n    // IoT Section\r\n    topic: string = '';\r\n\r\n    public static new(name?: DNamedElement[\"name\"], instanceoff?: DValue[\"instanceof\"], val?: DValue[\"values\"],\r\n                      father?: DValue[\"father\"] | DObject, persist: boolean = true, isMirage: boolean = false): DValue {\r\n        if (!name) name = this.defaultname(\"property_\", father);\r\n        return new Constructors(new DValue('dwc'), (typeof father === \"string\" ? father : (father as DObject)?.id), persist, undefined).DPointerTargetable().DModelElement()\r\n            .DNamedElement(name)\r\n            .DValue(instanceoff, val, isMirage).end();\r\n    }\r\n}\r\n@RuntimeAccessible\r\nexport class LValue<Context extends LogicContext<DValue> = any, C extends Context = Context, D extends DValue = DValue> extends LModelElement { // extends DModelElement, m1 value (attribute | reference)\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DValue;\r\n    id!: Pointer<DValue, 1, 1, LValue>;\r\n\r\n    // inherit redefine\r\n    parent!: (LObject | LModel)[];\r\n    father!: LObject | LModel;\r\n    model!: LModel;\r\n    // from namedelement\r\n    name!: string;\r\n    namespace!: string;\r\n    fullname!:string;\r\n    type!: LClassifier; // Classifiers describing PrimitiveTypes or the classes that can be pointed.\r\n    primitiveType!: LClass;\r\n    classType!: LClass;\r\n    enumType!: LEnumerator;\r\n// from structuralfeature (ref + attr)\r\n    ordered!: boolean;\r\n    unique!: boolean;\r\n    lowerBound!: number;\r\n    upperBound!: number;\r\n    many!: boolean;\r\n    required!: boolean;\r\n\r\n    changeable!: boolean;\r\n    volatile!: boolean;\r\n    transient!: boolean;\r\n    unsettable!: boolean;\r\n    derived!: boolean;\r\n    defaultValue!: DStructuralFeature[\"defaultValue\"];\r\n    // defaultValueLiteral!: string;\r\n// from reference\r\n    containment!: boolean;\r\n    container!: boolean;\r\n    // resolveProxies!: boolean;\r\n    opposite?: LValue; // if DRef have opposite DRef, when you set a value ref you also set a opposite value ref from target to this src. they are always mirroring.\r\n    // target!: LClass[]; is value[]\r\n    edges!: LEdge[];\r\n    // IoT Section\r\n    topic!: string;\r\n\r\n\r\n    // personal\r\n    value!: PrimitiveType | LObject | LEnumLiteral;\r\n    isMirage!: boolean;\r\n    // value!: PrimitiveType | LObject;\r\n    values!: PrimitiveType[] | LObject[] | LEnumLiteral[];\r\n    instanceof!: LAttribute | LReference | undefined;\r\n    conformsTo!:( LAttribute | LReference)[]; // low priority to do: attributo fittizio controlla a quali elementi m2 è conforme quando viene richiesto\r\n\r\n    protected get_edges(context: Context): this[\"edges\"] { return LPointerTargetable.fromPointer(context.data.edges) || []; }\r\n    protected get_fromlfeature<C, T extends keyof (NonNullable<C>)>(meta: C, key: T): NonNullable<C>[T] { return meta ? (meta as any)[key] : undefined; }\r\n    protected get_opposite(context: Context): LReference[\"opposite\"] { return this.get_fromlfeature(context.proxyObject.instanceof as LReference, \"opposite\"); }\r\n    protected get_container(context: Context): LReference[\"container\"] { return this.get_fromlfeature(context.proxyObject.instanceof as LReference, \"container\"); }\r\n    protected get_containment(context: Context): LReference[\"containment\"] {\r\n        let iof = context.proxyObject.instanceof;\r\n        if (!iof) return true; // shapeless\r\n        return this.get_fromlfeature(iof as LReference, \"containment\"); }\r\n    // protected get_defaultValueLiteral(context: Context): LStructuralFeature[\"defaultValueLiteral\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"defaultValueLiteral\"); }\r\n    protected get_defaultValue(context: Context): LStructuralFeature[\"defaultValue\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"defaultValue\"); }\r\n    protected get_defaultderived(context: Context): LStructuralFeature[\"derived\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"derived\"); }\r\n    protected get_defaultunsettable(context: Context): LStructuralFeature[\"unsettable\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"unsettable\"); }\r\n    protected get_defaulttransient(context: Context): LStructuralFeature[\"transient\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"transient\"); }\r\n    protected get_volatile(context: Context): LStructuralFeature[\"volatile\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"volatile\"); }\r\n    protected get_changeable(context: Context): LStructuralFeature[\"changeable\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"changeable\"); }\r\n    protected get_required(context: Context): LStructuralFeature[\"required\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"required\"); }\r\n    protected get_unique(context: Context): LStructuralFeature[\"unique\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"unique\"); }\r\n    protected get_many(context: Context): LStructuralFeature[\"many\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"many\"); }\r\n    protected get_upperBound(context: Context): LStructuralFeature[\"upperBound\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"upperBound\"); }\r\n    protected get_lowerBound(context: Context): LStructuralFeature[\"lowerBound\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"lowerBound\"); }\r\n    protected get_ordered(context: Context): LStructuralFeature[\"ordered\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"ordered\"); }\r\n    protected get_enumType(context: Context): LStructuralFeature[\"enumType\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"enumType\"); }\r\n    protected get_classType(context: Context): LStructuralFeature[\"classType\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"classType\"); }\r\n    protected get_primitiveType(context: Context): LStructuralFeature[\"primitiveType\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"primitiveType\"); }\r\n    protected get_type(context: Context): LStructuralFeature[\"type\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"type\"); }\r\n    protected get_fullname(context: Context): LStructuralFeature[\"fullname\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"fullname\"); }\r\n    protected get_namespace(context: Context): LStructuralFeature[\"namespace\"] { return this.get_fromlfeature(context.proxyObject.instanceof, \"namespace\"); }\r\n    protected get_name(context: Context): LStructuralFeature[\"name\"] { return context.data.instanceof ? this.get_fromlfeature(context.proxyObject.instanceof, \"name\") : context.data.name || ''; }\r\n\r\n    protected get_instanceof(context: Context): this[\"instanceof\"] {\r\n        const pointer = context.data.instanceof;\r\n        if (!pointer) return undefined;\r\n        return LPointerTargetable.from(pointer)\r\n    }\r\n    protected set_instanceof(val: Pack1<this[\"instanceof\"]>, context: Context): boolean {\r\n        // const list = val.map((lItem) => { return Pointers.from(lItem) });\r\n        let ptr = Pointers.from(val);\r\n        SetFieldAction.new(context.data, 'instanceof', ptr, \"\", true);\r\n        return true;\r\n    }\r\n\r\n    protected get_isMirage(context: Context): this[\"isMirage\"] { return context.data.isMirage; }\r\n    protected set_isMirage(val: this[\"isMirage\"], context: Context): boolean { SetFieldAction.new(context.data, 'isMirage', val, \"\", false); return true; }\r\n\r\n    // individual value getters\r\n    protected get_value<T extends boolean>(context: Context, namedPointers: boolean = false, ecorePointers: boolean = false,\r\n                                           shapeless: boolean = false, keepempties: boolean = true, withmetainfo: T = false as T): T extends true ? ValueDetail : this[\"value\"]{\r\n        return this.get_values(context, true, namedPointers, ecorePointers, shapeless, keepempties, withmetainfo, 1)[0] as any;\r\n    }\r\n    public getValue<T extends boolean>(namedPointers: boolean = false, ecorePointers: boolean = false, shapeless: boolean = false, keepempties: boolean = true,\r\n                                       withmetainfo: T = false as T): T extends true ? ValueDetail : this[\"value\"]{ return this.cannotCall(\"getValue\"); }\r\n    protected get_getValue(context: Context): this[\"getValue\"] {\r\n        return function (namedPointers: boolean = false, ecorePointers: boolean = false, shapeless: boolean = false,\r\n                         keepempties: boolean = true, withmetainfo: boolean = false) {\r\n            return LValue.prototype.get_value(context, namedPointers, ecorePointers, shapeless, keepempties, withmetainfo) as any;\r\n        }\r\n    }\r\n\r\n    // multiple value getters\r\n    protected get_values<T extends boolean>(context: Context, fitSize: boolean = true, namedPointers: boolean = false, ecorePointers: boolean = false,\r\n                                            shapeless: boolean = false, keepempties: boolean = true, withmetainfo?: T, maxlimit?: number)\r\n        : (T extends undefined ? this[\"values\"] : T extends false ? this[\"values\"] : ValueDetail[]) & {type?: string}  {\r\n\r\n        let ret: any[] = [...context.data.values] as [];\r\n        let meta: LAttribute | LReference | undefined = shapeless ? undefined : context.proxyObject.instanceof;\r\n        let dmeta: undefined | DAttribute | DReference = meta?.__raw;\r\n\r\n        // if (meta && meta.className === DReference.name) ret = LPointerTargetable.fromArr(ret as DObject[]);\r\n        let typestr: string = meta ? meta.typeToShortString() : \"shapeless\";\r\n        if (!Array.isArray(ret)) ret = [];\r\n        if (dmeta && fitSize && ret.length < dmeta.lowerBound && dmeta.lowerBound > 0) {\r\n            let times = dmeta.lowerBound - ret.length;\r\n            while (times-- > 0) ret.push(undefined);\r\n            // ret.length = meta.lowerBound; not really working for expanding, it says \"emptyx10\" or so. doing .map() only iterates \"existing\" elements. behaves like as it's smaller.\r\n        }\r\n        if (maxlimit !== undefined) ret.length = maxlimit;\r\n        else if (dmeta && fitSize && ret.length > dmeta.upperBound && dmeta.upperBound >= 0) ret.length = dmeta.upperBound;\r\n\r\n        // console.log(\"get_values sizefixed\", {fitSize, arguments, upperbound:dmeta?.upperBound, lowerbound: dmeta?.lowerBound, len: ret.length, len0: context.data.values.length});\r\n        let numbermax = 0, numbermin = 0, round = true;\r\n        // ret is always an array of raw values before this point, eventually padded with lowerbound or trimmed at upperbound\r\n\r\n        let index = 0;\r\n        if (withmetainfo) { ret = ret.map(r => {return {value:r, rawValue: r, index: index++, hidden: false} as ValueDetail}); }\r\n        let mapperfunc: (a:any)=>any = undefined as any;\r\n        let numbercasting = (v: any): number => {\r\n            if (typeof v !== \"number\") {\r\n                if (!v) v = 0;\r\n                else if (v === \"true\") v = 1;\r\n                else if (v.constructor?.name=== \"Date\") v = v.getTime();\r\n                else if (typeof v === \"string\") {\r\n                    console.log(\"number casting:\", v,  U.getFirstNumber(v+'', true), {numbermax, numbermin});\r\n                    v = U.getFirstNumber(v+'', !round);\r\n                } else return NaN;\r\n            }\r\n            v = Math.min(numbermax, Math.max(numbermin, v));\r\n            return round ? Math.round(v) : v;\r\n        };\r\n        switch (typestr) {\r\n            case \"shapeless\":\r\n                let state: DState = store.getState();\r\n                mapperfunc = (val: any) => {\r\n                    if (!val || typeof val !== \"string\") return val;\r\n                    let l: any = LPointerTargetable.fromPointer(val, state);\r\n                    if (!l) return val;\r\n                    if (l.className === DEnumLiteral.name) { l = (l as DEnumLiteral).literal; } else\r\n                    if (namedPointers) { l = (l.name ? (\"@\" + l.name) : (l as GObject)[\"@\"+l.name]?.__raw?.values?.[0] || (\"#\" + l.className));}\r\n                    else if (ecorePointers){ l = l.ecorePointer(); }\r\n                    return l;\r\n                };\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail) => { struct.value = mapperfunc(struct.value); });\r\n                else ret = ret.map(mapperfunc);\r\n                break;\r\n            default: // it's a reference or enum\r\n                mapperfunc = (r:any) => r && LPointerTargetable.wrap(r);\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail) => { struct.value = mapperfunc(struct.value); });\r\n                else ret = ret.map(mapperfunc);\r\n\r\n                // now ret is pointed DEnumLiteral or DObject or MetaInfoStructure<>\r\n                if ((meta as LAttribute)?.type?.className === DEnumerator.name) {\r\n                    // replace numeric literals, mapped to literal ordinal. can happen with type switches\r\n                    if (true) {\r\n                        mapperfunc = (lit: LEnumLiteral|number) => {\r\n                            numbermax = Number.POSITIVE_INFINITY;\r\n                            numbermin = 0;\r\n                            let ordinal = numbercasting(lit);\r\n                            return isNaN(ordinal) ? lit : (meta!.type as LEnumerator).ordinals[ordinal];\r\n                        }\r\n                        if (withmetainfo) ret.forEach((struct: ValueDetail) => { struct.value = mapperfunc(struct.value); });\r\n                        else ret = ret.map(mapperfunc);\r\n                    }\r\n                    let filterfunc = (l: LEnumLiteral) => { if (!l) return keepempties; return l.father?.id === (meta as LAttribute).type.id; };\r\n                    if (withmetainfo) for(let struct of ret as ValueDetail[]) { struct.hidden = !filterfunc(struct.value as LEnumLiteral); } // && 'literal target is not of the correct type requested by metamodel'; }\r\n                    else ret = ret.filter(filterfunc);\r\n                    // todo: questo comportamento implica che quando importo un literal come testo da .ecore, devo assegnargli\r\n                    //  il puntatore al suo literal se trovato, altrimenti resta val[i] di tipo string/shapeless\r\n\r\n                    if (namedPointers) {\r\n                        mapperfunc = (lit?: LEnumLiteral) => lit?.name;\r\n                        if (withmetainfo) ret.forEach((struct: ValueDetail) => { struct.value = mapperfunc(struct.value); });\r\n                        else ret = ret.map(mapperfunc);\r\n                    }\r\n                    break;\r\n                }\r\n                // is reference with assigned shape (and type) -> filter correct typed targets\r\n                if (meta) {\r\n                    let filterfunc = (l: LObject) => {\r\n                        // hide values with a value that is not a pointer to correct type (but keep empties if requested)\r\n                        //let isExtending = l.instanceof?.isExtending((meta as LReference).type); // damiano: todo test & debug isextending\r\n                        let isExtending = true;\r\n                        return keepempties && !l ? true : isExtending;\r\n                    };\r\n                    if (withmetainfo) for(let struct of ret as ValueDetail[]) { struct.hidden = !filterfunc(struct.value as LObject); } // && \"ref target is not of correct type\"; }\r\n                    else ret = ret.filter(filterfunc);\r\n                }\r\n                // shaped (with m2-reference) but pointing to a shapeless object. can happen\r\n                if (namedPointers) {\r\n                    let mapperfunc = (l:LObject) => l && (l.name ? (\"@\" + l.name) : (l as GObject)[\"@\"+l.name]?.__raw?.values?.[0] || (\"#\" + l.className));\r\n                    if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = mapperfunc(struct.value as LObject); });\r\n                    else ret = ret.map(mapperfunc);\r\n                }\r\n                else if (ecorePointers && !(meta as LReference).containment){\r\n                    mapperfunc = (lval: LObject) => lval && lval.ecorePointer();\r\n                    if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = mapperfunc(struct.value as LObject); });\r\n                    else ret = ret.map(mapperfunc);\r\n                    // throw new Error(\"values as EcorePointers: todo. for containment do nothing, just nest the obj. for non-containment put the ecore reference string in array vals\")\r\n                }\r\n                break;\r\n            case ShortAttribETypes.EByte:\r\n                numbermin = -128;\r\n                numbermax = 127;\r\n                break;\r\n            case ShortAttribETypes.EShort:\r\n                numbermin = -32768;\r\n                numbermax = 32767;\r\n                break;\r\n            case ShortAttribETypes.EInt:\r\n                numbermin = -2147483648;\r\n                numbermax = 2147483647;\r\n                break\r\n            case ShortAttribETypes.ELong:\r\n                numbermin = -9223372036854775808;\r\n                numbermax = 9223372036854775807;\r\n                break;\r\n            case ShortAttribETypes.EFloat:\r\n            case ShortAttribETypes.EDouble:\r\n                numbermin = Number.NEGATIVE_INFINITY;\r\n                numbermax = Number.POSITIVE_INFINITY;\r\n                round = false;\r\n                break;\r\n            case ShortAttribETypes.EString:\r\n            case ShortAttribETypes.EDate:\r\n                mapperfunc = v => v ? v + '' : ''\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = mapperfunc(struct.value); });\r\n                else ret = ret.map(mapperfunc);\r\n                break;\r\n            case ShortAttribETypes.EChar:\r\n                mapperfunc = v => v ? (v + '')[0] : 'A';\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = mapperfunc(struct.value); });\r\n                else ret = ret.map(mapperfunc);\r\n                break;\r\n            case ShortAttribETypes.EBoolean:\r\n                mapperfunc = v => typeof v === \"boolean\" ? v : U.fromBoolString(v+'', v?.length>0, false);\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = mapperfunc(struct.value); });\r\n                else ret = ret.map(mapperfunc);\r\n                break;\r\n            case ShortAttribETypes.void:\r\n                if (withmetainfo) ret.forEach((struct: ValueDetail)=>struct.hidden = true);\r\n                else ret = [];\r\n                break;\r\n        }\r\n        // some kind of numeric type\r\n        if (numbermax !== 0) {\r\n            if (withmetainfo) ret.forEach((struct: ValueDetail)=>{ struct.value = numbercasting(struct.value); });\r\n            else ret = ret.map(numbercasting);\r\n        }\r\n        (ret as GObject).type = typestr;\r\n        // console.error(\"type value:\", {ret, typestr, meta, fitSize});\r\n        return ret as any;\r\n    }\r\n\r\n    public getValues<T extends boolean>(fitSize: boolean = true, namedPointers: boolean = false, ecorePointers: boolean = false, shapeless: boolean = false,\r\n                                        keepempties: boolean = true, withmetainfo?: T, maxlimit?: number)\r\n        : (T extends undefined ? this[\"values\"] : T extends false ? this[\"values\"] : ValueDetail[]) & {type?: string} {\r\n        return this.cannotCall(\"getValues\"); }\r\n    protected get_getValues(context: Context): this[\"getValues\"] {\r\n        return function (fitSize: boolean = true, namedPointers: boolean = true, ecorePointers: boolean = false,\r\n                         shapeless: boolean = false, keepempties: boolean = false, withmetainfo: any = false, limit?: number) {\r\n            return LValue.prototype.get_values(context, fitSize, namedPointers, ecorePointers, shapeless, keepempties, withmetainfo, limit) as any;\r\n        }\r\n    }\r\n    // stringified value getters\r\n    public valuestring(keepemptyquotes?: boolean): string { return this.cannotCall(\"valuestring\"); }\r\n    private get_valuestring(context: Context): this[\"valuestring\"] { return (keepemptyquotes?: boolean) => this.valuestring_impl(context, keepemptyquotes); }\r\n    private valuestring_impl(context: Context, keepemptyquotes?: boolean): string {\r\n        // console.error(\"valuestring_impl\", {context, data:context.data});\r\n        let val = this.get_values(context, true, true, false, false, true);\r\n        // console.log(\"valuestring_impl\", {val});\r\n        let ret: any;\r\n        switch (val.length) {\r\n            case 0: ret = ''; break;\r\n            case 1: ret = val[0]; break;\r\n            default:\r\n                let havestrings: boolean = val.type === ShortAttribETypes.EString;\r\n                let havechars: boolean = val.type === ShortAttribETypes.EChar;\r\n                let havepointers: boolean = false;\r\n                let haveLelements: boolean = false;\r\n                for (let vall of [val[0]]) {\r\n                    if ((vall as any)?.__isProxy) haveLelements = true;\r\n                    /*else if (typeof vall === \"string\") { havestrings = true; havepointers = havepointers || vall.includes(\"Pointer\"); }}\r\n                     */\r\n                }\r\n                /*if (havepointers) {\r\n                    val = LPointerTargetable.wrapAll(val);\r\n                    haveLelements = true;\r\n                }*//*\r\n                if (haveLelements) {\r\n                    val = val.map( l => l && (l.name ? (\"@\" + l.name) : (\"#\" + l.className)));\r\n                }*/\r\n                if (havestrings || havechars) {\r\n                    let valstr = JSON.stringify(val);\r\n                    if (!keepemptyquotes) valstr = U.replaceAll(valstr, \"\\\"\\\"\", \"\");\r\n                    ret = valstr.substring(1, valstr.length-1);\r\n                    break;\r\n                }\r\n                else ret = val.join(', ');\r\n        }\r\n        // console.error(\"valuestring_impl()\", {ret, context, data:context.data});\r\n        return (ret === undefined || ret === null ? '' : ret) + '';\r\n    }\r\n\r\n    public setValueAtPosition(index: number, val: this[\"values\"][0], info?: Partial<SetValueAtPoisitionInfoType>): {success: boolean, reason?: string} {\r\n        return this.cannotCall(\"setValueAtPosition\"); }\r\n\r\n    // only use through setValueAtPosition\r\n    protected _clearValueAtPosition(context: Context, index: number, info0?: Partial<SetValueAtPoisitionInfoType>, skipSettingUndefined: boolean = false) {\r\n        let info = (info0 || {}) as any as SetValueAtPoisitionInfoType;\r\n        let oldVal = context.data.values[index];\r\n        let oldTarget: LObject | undefined = typeof oldVal === \"string\" ? LObject.fromPointer(oldVal) : undefined;\r\n        /////////////////////// if oldTarget is LObject, update his pointedBy\r\n        // if (oldTarget) SetFieldAction.new(oldTarget, \"pointedBy\" '-=\", ... no need? reducer should do this)\r\n\r\n        /////////////////////// if ref is containment assign oldTarget father to DModel\r\n\r\n        if (info.isContainment === undefined) {\r\n            if (info.instanceof === undefined) info.instanceof = context.proxyObject.instanceof;\r\n            info.isContainment = !info.instanceof || (info.instanceof as LReference).containment;\r\n        }\r\n        if (info.isContainment && oldTarget?.className === \"DObject\") {\r\n            SetFieldAction.new(oldVal as Pointer<DObject>, \"father\", context.proxyObject.model.id, undefined, true);\r\n        }\r\n        if (!skipSettingUndefined) SetFieldAction.new(context.data, 'values.' + index as any, undefined, '', info.isPtr);\r\n    }\r\n    protected get_setValueAtPosition(context: Context): ((index: number, val: this[\"values\"][0], info?: Partial<SetValueAtPoisitionInfoType>) => {success: boolean, reason?: string}) {\r\n        return (index: number, val: this[\"values\"][0] | any, info0?: Partial<SetValueAtPoisitionInfoType>): { success: boolean, reason?: string } => {\r\n            let isPtr: boolean = undefined as any;\r\n            let lval: LObject | LEnumLiteral = undefined as any;\r\n            if (val === null) val = undefined;\r\n            if (context.data.values[index] === val) return { success: false, reason: \"identical assignment\" };\r\n            if ((val as any)?.id && (val as any)?.className) {\r\n                lval = (val.__isProxy ? val : LPointerTargetable.wrap<DObject>(val));\r\n                isPtr = !!lval;\r\n                val = (val as any).id;\r\n            }\r\n            let info = (info0 || {}) as any as SetValueAtPoisitionInfoType;\r\n            if (isPtr === undefined) isPtr = (info.isPtr === undefined ? Pointers.isPointer(val) : info.isPtr);\r\n\r\n            // set sideeffect part\r\n            if ((val !== undefined)) {\r\n                if (isPtr) {\r\n                    if (info.type === undefined) info.type = context.proxyObject.type;\r\n                    if (info.instanceof === undefined) info.instanceof = context.proxyObject.instanceof;\r\n                    if (info.isContainment === undefined) {\r\n                        info.isContainment = !info.instanceof || (info.instanceof.className === DReference.name && (info.instanceof as LReference).containment);\r\n                    }\r\n                    lval = LPointerTargetable.fromPointer(val);\r\n                    if (!lval) return {success: false, reason: \"invalid pointer: \" + lval};\r\n                    // is enum\r\n                    if (lval.className === DEnumLiteral.name) {\r\n                        let lvale: LEnumLiteral = lval as LEnumLiteral;\r\n                        if (info.instanceof && info.type && (lvale.father.id !== info.type.id)) return {success: false, reason: \"target is not of correct literal type\"};\r\n                        // no need to do checks / other sideeffects other than pointedBy i think.\r\n                    }\r\n                    // is ref\r\n                    if (lval.className === DObject.name){\r\n                        let lvalo = lval as LObject;\r\n                        let lvalmeta: LClassifier | undefined = lvalo.instanceof;\r\n                        // if (info.instanceof && info.type && (!(lvalmeta as LClass)?.isExtending(info.type))) return {success: false, reason: \"target is not of correct type\"}; damiano todo: enable and implement isExtending\r\n                        if (info.fatherList === undefined) info.fatherList = context.proxyObject.fatherList;\r\n                        if (info.isContainment) {\r\n                            if ((info.fatherList as LPointerTargetable[]).map(father => father.id).includes(val))\r\n                                return {success: false, reason: \"cannot create a containment loop\"}; // todo: in LReference.set_containment need to forbid setting to true if there is a loop\r\n                            let oldContainer: LValue | LModel = lvalo.father;\r\n                            let oldContainerValue: LValue = (oldContainer.className === DModel.name) ? undefined as any : (oldContainer as LValue);\r\n                            // detach contaied object from old parent\r\n                            if (oldContainerValue) {\r\n                                let valarr: any[] = oldContainerValue.__raw.values;\r\n                                for (let i = 0; i < valarr.length; i++) {\r\n                                    let v = valarr[i];\r\n                                    if (v === val) oldContainerValue.setValueAtPosition(i, undefined as any, undefined);\r\n                                }\r\n                            }\r\n                            SetFieldAction.new(val as Pointer<DObject>, \"father\", context.data.id, undefined, true);\r\n                        }\r\n                    }\r\n                    // automatic? SetFieldAction.new(val as Pointer<DObject>, \"pointedBy\", PointedBy.fromID(context.data.id, \"values.\" + index as any), \"+=\");\r\n                } else {\r\n                    // loose checks, i can assign any primitive to any primitive (will cast on get)\r\n                    if (info.instanceof === undefined) info.instanceof = context.proxyObject.instanceof;\r\n                    let metatype: string = (info.instanceof as LAttribute)?.typeToShortString() || \"shapeless\";\r\n                    if (typeof val === \"object\") {\r\n                        if (val.constructor === Date && (metatype !== \"EString\" && metatype !== \"EDate\" && metatype !== \"shapeless\"))\r\n                            return {\r\n                                success: false,\r\n                                reason: \"dates can only be assigned to values of type string or Date\"\r\n                            };\r\n                        // return {success: false, reason: \"objects are not assignable except for dates\"}; maybe i allow this instead\r\n                    }\r\n                }\r\n            }\r\n\r\n            // clear sideeffect part\r\n            this._clearValueAtPosition(context, index, info, true);\r\n\r\n            // actual set\r\n            SetFieldAction.new(context.data, 'values.' + index as any, val, '', isPtr);\r\n            if (info.setMirage !== false) SetFieldAction.new(context.data, 'isMirage', false, '', false);\r\n\r\n            // assegnato a giordano todo: wrap this and set toaster with failure message if it fails or better launch Log.w and bind toasts of different colors to Log funcs\r\n            return {success: true};\r\n        }\r\n    }\r\n    protected set_values(val: orArr<D[\"values\"]>, context: Context): boolean {\r\n        const list: D[\"values\"] = ((Array.isArray(val)) ? val : [val]) as D[\"values\"];\r\n        let modified = false;\r\n        for (let i = 0; i < list.length; i++) {\r\n            modified = modified || this.get_setValueAtPosition(context)(i, list[i], {setMirage: false} as any).success;\r\n        }\r\n        if (modified) context.data.isMirage && SetFieldAction.new(context.data, 'isMirage', false, '', false);\r\n        return true;\r\n\r\n        // old implementation\r\n        let l = context.proxyObject;\r\n        let instanceoff: LReference | LAttribute | undefined = l.instanceof;\r\n        let isRef: boolean | undefined = (!instanceoff ? undefined : instanceoff?.className === DReference.name);\r\n        SetFieldAction.new(context.data, 'values', list as any, '', false);\r\n        // console.log(\"pre set_values actions\", l, list, val, context);\r\n\r\n        if (!l.instanceof || isRef && (instanceoff as LReference).containment) {\r\n            let i = 0;\r\n\r\n            for (let v0 of list) {\r\n                // console.log(\"loop set_value actions\", v, context.data, isRef, instanceoff, Pointers.isPointer(v));\r\n                i++;\r\n                if ((isRef || instanceoff === undefined) && Pointers.isPointer(v0)) { // if shapeless obj need to check val by val\r\n                    let v = v0 as Pointer<DModelElement> //Pointer<DObject> | Pointer<DEnumLiteral>;\r\n                    // console.log(\"loop set_value actions SET\", {v, data:context.data, isRef, instanceoff, isPtr:Pointers.isPointer(v)});\r\n                    let lval: LObject = LPointerTargetable.fromPointer(v);\r\n                    let oldContainer: LValue | LModel = lval.father;\r\n                    SetFieldAction.new(v, \"pointedBy\", PointedBy.fromID(context.data.id, \"values.\" + i as any), \"+=\");\r\n                    SetFieldAction.new(v, \"father\", context.data.id, undefined, true);\r\n                    if (oldContainer.className === DModel.name) continue;\r\n                    let containerValue = (oldContainer as LValue);\r\n                    // let oldContainerValues = [...containerValue.__raw.value]; U.arrayRemoveAll(oldContainerValues, v);\r\n                    let oldContainerValues: Pointer[] = containerValue.__raw.values.map( va => va===v ? undefined as any : va);\r\n                    SetFieldAction.new(containerValue.id, \"values\", oldContainerValues, \"\", true);\r\n\r\n                    // todo: verify if works: remove val from old container\r\n                    let oldv = context.data.values[i];\r\n                    // if (Pointers.isPointer(oldv)) SetFieldAction.new(context.data.id, \"contains\", U.arrayRemoveAll([...context.data.contains], oldv), '', true);\r\n                    // SetFieldAction.new(context.data.id, \"contains\", oldv as DObject[\"id\"], undefined, true);\r\n\r\n                }\r\n            }\r\n        }\r\n        context.data.isMirage && SetFieldAction.new(context.data, 'isMirage', false, '', false);\r\n        return true;\r\n    }\r\n\r\n    protected set_value(val: D[\"values\"][0], context: Context): boolean {\r\n        let v: ValueDetail = this.get_value(context, false, false, false, true, true);\r\n        let r = this.setValueAtPosition(v?.index || 0, val);\r\n        Log.e(!r.success,  r.reason);\r\n        return r.success;\r\n    }\r\n\r\n    protected generateEcoreJson_impl(context: Context, loopDetectionObj: Dictionary<Pointer, DModelElement> = {}): Json {\r\n        loopDetectionObj[context.data.id] = context.data;\r\n        let values = this.get_values(context, true, false, true, false, false);\r\n        delete values[\"type\"];\r\n        let ret: any = [];\r\n        the_loop: for (let v of values){\r\n            let l: LObject | LEnumLiteral = v as any;\r\n            if (!l?.__isProxy) { ret.push(l); continue; }\r\n            switch (l.className){\r\n                case \"DOperation\": continue the_loop;\r\n                case \"DEnumLiteral\": ret.push((l as LEnumLiteral).generateEcoreJsonM1()); break;\r\n                default: ret.push(l.generateEcoreJson(loopDetectionObj)); break;\r\n            }\r\n        }\r\n        // ret = ret.filter((j: any) => (j !== undefined || j !== ''));\r\n        return (ret.length <= 1) ? ret[0] : ret; }\r\n\r\n    protected get_toString(context: Context): () => string { return () => this._toString(context); }\r\n    protected _toString(context: Context): string {\r\n        let val: any = this.get_values(context, true, true, false, false, true);\r\n        if (!val) return val + '';\r\n        if (!Array.isArray(val)) val = [val];\r\n        // if (!context.proxyObject.instanceof) val = val.map( (e: GObject) => { return  e.name ? \"@\" + e.name : e; });\r\n        // else if (context.proxyObject.instanceof?.className === DReference.name) val = val.map( (e: GObject) => { return e.name ? \"@\" + e.name : e; });\r\n        switch(val.length) {\r\n            case 0: return '';\r\n            case 1: return val[0] + '';\r\n            default: return val + '';\r\n        }\r\n    }\r\n\r\n    public rawValues(): void { super.cannotCall('rawValues'); }\r\n    public get_rawValues(context: Context): this[\"values\"]{\r\n        return (this.get_getValues(context))(false, false, false, true, true, false, undefined);\r\n    }\r\n    protected get_delete(context: Context): () => void {\r\n        const data = context.proxyObject;\r\n        const ret = () => {\r\n            const me = data.instanceof;\r\n            me && SetFieldAction.new(me.__raw, 'instances', me.__raw.instances.indexOf(data.id), '-=', true);\r\n            data.superDelete();\r\n            // super.get_delete(context);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected get_topic(context: Context): this[\"topic\"] {\r\n        return context.data.topic;\r\n    }\r\n    protected set_topic(val: string, context: Context): boolean {\r\n        SetFieldAction.new(context.data, 'topic', val, '', false);\r\n        return true;\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DNamedElement, DValue);\r\nRuntimeAccessibleClass.set_extend(LNamedElement, LValue);\r\nexport type ValueDetail = {\r\n    value: LValue[\"value\"];\r\n    rawValue: DValue[\"values\"][0]; // PrimitiveType | Pointer<DObject> | Pointer<DEnumLiteral>\r\n    index: number;\r\n    hidden: boolean;\r\n};\r\nexport type SetValueAtPoisitionInfoType = {setMirage: boolean, isPtr: boolean, type: LValue[\"type\"], instanceof: LValue[\"instanceof\"], isContainment: boolean, fatherList: LValue[\"fatherList\"]};\r\n\r\n\r\nexport type WModelElement = getWParams<LModelElement, DModelElement>;\r\nexport type WModel = getWParams<LModel, DModel>;\r\nexport type WValue = getWParams<LValue, DValue>;\r\nexport type WNamedElement = getWParams<LNamedElement, DNamedElement>;\r\nexport type WObject = getWParams<LObject, DObject>;\r\nexport type WEnumerator = getWParams<LEnumerator, DEnumerator>;\r\nexport type WEnumLiteral = getWParams<LEnumLiteral, DEnumLiteral>;\r\nexport type WAttribute = getWParams<LAttribute, DAttribute>;\r\nexport type WReference = getWParams<LReference, DReference>;\r\nexport type WStructuralFeature = getWParams<LStructuralFeature, DStructuralFeature>;\r\nexport type WClassifier = getWParams<LClassifier, DClassifier>;\r\nexport type WDataType = getWParams<LDataType, DDataType>;\r\nexport type WClass = getWParams<LClass, DClass>;\r\nexport type WParameter = getWParams<LParameter, DParameter>;\r\nexport type WOperation = getWParams<LOperation, DOperation>;\r\nexport type WPackage = getWParams<LPackage, DPackage>;\r\nexport type WTypedElement = getWParams<LTypedElement, DTypedElement>;\r\nexport type WAnnotation = getWParams<LAnnotation, DAnnotation>;\r\n// export type WJavaObject = getWParams<LJavaObject, DJavaObject>;\r\nexport type WMap = getWParams<LMap, DMap>;\r\nexport type WFactory_useless_ = getWParams<LFactory_useless_, DFactory_useless_>;\r\n\r\n\r\n/*\r\nlet alld: GObject = {\r\n    DModelElement,\r\n    DModel,\r\n    DValue,\r\n    DNamedElement,\r\n    DObject,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DAttribute,\r\n    DReference,\r\n    DStructuralFeature,\r\n    DClassifier,\r\n    DDataType,\r\n    DClass,\r\n    DParameter,\r\n    DOperation,\r\n    DPackage,\r\n    DTypedElement,\r\n    DAnnotation,\r\n    DFactory_useless_, DMap};\r\nlet alll: GObject = {\r\n    LModelElement,\r\n    LModel,\r\n    LValue,\r\n    LNamedElement,\r\n    LObject,\r\n    LEnumerator,\r\n    LEnumLiteral,\r\n    LAttribute,\r\n    LReference,\r\n    LStructuralFeature,\r\n    LClassifier,\r\n    LDataType,\r\n    LClass,\r\n    LParameter,\r\n    LOperation,\r\n    LPackage,\r\n    LTypedElement,\r\n    LAnnotation,\r\n    LFactory_useless_, LMap};\r\n*/\r\n","import {\r\n    Dictionary,\r\n    DocString,\r\n    DPointerTargetable, DUser,\r\n    DState, Json,\r\n    Log,\r\n    LPointerTargetable,\r\n    orArr,\r\n    Pack1,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    store,\r\n    U,\r\n    unArr,\r\n    windoww\r\n} from \"../../joiner\";\r\n\r\n// transactional-like start of storage modification\r\n// todo: nested transaction che conti quanti begin hai effettuato e crei una matrice di pendingActions una per ogni livello nested?\r\n\r\n/*\r\n// let nestedlevel: number = 0;\r\nclass NestedLevel{\r\n    level: number;\r\n    actions: Action[] = [];\r\n    up:NestedLevel[] = [];\r\n    down?:NestedLevel;\r\n\r\n    constructor(prevLevel?: NestedLevel, actions: Action[] = []) {\r\n        // this.prev = prev;\r\n        this.down = prevLevel;\r\n        this.actions = actions;\r\n        this.level = prevLevel ? prevLevel.level + 1 : 0;\r\n    }\r\n\r\n    add1(a:Action){ this.actions.push(a); }\r\n    add(a:Action[]){ this.actions.push(...a); }\r\n    push(actions:Action[]=[]){\r\n        this.up.push(new NestedLevel(this, actions));\r\n    }\r\n}\r\n// @Singleton\r\nclass NestedTransactionManager{\r\n    // private levels: NestedLevel[] = [];\r\n    public currentLevel?: NestedLevel;\r\n    // simple array is not good i can have spikes as russian mountains going up and down in deepness it's kinda a matrix or a pile of dishes like below'\r\n\r\n\r\n    /*\r\n    todo: to debug missing END paired with a begin, seve stack trace of begins and ends\r\n    * every level must have his own array?\r\n    * Begin0, Begin1, Begin2, End2, End1, Begin1.1 Begin 1.2....\r\n    it's a tree!\r\n    *\r\n    *\r\n    * ______begin lv2                              _______Begin1.2\r\n    * _________________________begin lv1           ___________________Begin1.1\r\n    * ____________________________________________________________________________________________________ a begin lv0\r\n    * * /\r\n    constructor() {}\r\n    begin(actions: Action[]=[]): void { this.pushLevel(actions); }\r\n    pushLevel(actions: Action[]=[]): void {\r\n        if (!this.currentLevel) { this.currentLevel = new NestedLevel(undefined, actions); return; }\r\n        this.currentLevel.push(actions); }\r\n    end(){\r\n        if (!this.currentLevel) return this.finalEnd();\r\n        this.currentLevel = this.currentLevel?.down; }\r\n    finalEnd(){\r\n\r\n    }\r\n    // current(): NestedLevel { return this.currentLevel; }\r\n    addActions(a:Action[]): void { this.currentLevel!.add(a); }\r\n    addAction(a:Action): void { this.currentLevel!.add1(a); }\r\n}\r\nlet transactionmanager = new NestedTransactionManager();\r\nfunction BEGIN2(){\r\n    transactionmanager.pushLevel();\r\n}\r\nfunction ABORT2(){\r\n    transactionmanager.end();\r\n}\r\nfunction END2(){\r\n\r\n}*/\r\n\r\nexport function BEGIN_OLD() {\r\n    pendingActions = [];\r\n    hasBegun = true;\r\n}\r\nexport function ABORT_OLD() {\r\n    hasBegun = false;\r\n    pendingActions = [];\r\n}\r\nexport function END_OLD(actionstoPrepend: Action[] = []): boolean | DState {\r\n    hasBegun = false;\r\n    // for (let action of pendingActions) { }\r\n    const ca: CompositeAction = new CompositeAction( actionstoPrepend?.length ? [...actionstoPrepend, ...pendingActions] : pendingActions, false);\r\n    pendingActions = [];\r\n    return ca.fire();\r\n}\r\n\r\nlet pendingActions: Action[] = [];\r\nlet hasBegun = false;\r\nlet deepnessLevel = 0;\r\n\r\nexport function BEGIN() {\r\n    hasBegun = true; // redundant but actions are reading this, minimize changes\r\n    deepnessLevel++;\r\n}\r\nexport function ABORT() {\r\n    deepnessLevel--;\r\n    pendingActions = [];\r\n}\r\nexport function END(actionstoPrepend: Action[] = []): boolean {\r\n    deepnessLevel--;\r\n    if (actionstoPrepend.length) pendingActions = [...actionstoPrepend, ...pendingActions];\r\n\r\n    if (deepnessLevel < 0) { console.error(\"mismatching END()\"); deepnessLevel = 0; }\r\n    if (deepnessLevel === 0) return FINAL_END();\r\n    return false;\r\n}\r\nexport function FINAL_END(): boolean{\r\n    hasBegun = false;\r\n    const ca: CompositeAction = new CompositeAction(pendingActions, false);\r\n    pendingActions = [];\r\n    return ca.fire();\r\n}\r\n\r\n// make class isinstorage e mettici il path studia annotazioni per annotare gli oggett in modo che vengano rwappati prima di farli ritornare se sono annotati\r\n// minor todo: type as (...args: infer P) => any) ?\r\nexport function TRANSACTION<F extends ((...args: any) => any)>(func: F, ...params: Parameters<F>): boolean | DState {\r\n    BEGIN();\r\n    // minor todo: potrei fare l'override di Error() per fare in modo che gli errori vengano presi anche se non uso TRANSACTION o try-catch ?\r\n    try { func(...params); } catch(e) { Log.ee('Transaction failed:', e); ABORT(); return false; }\r\n    return END();\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class Action extends RuntimeAccessibleClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static type = 'ACTION';\r\n    static SubType: {\r\n        vertexSubElements: 'vertexSubElements',\r\n        vertexSize: 'vertexSize'\r\n    };\r\n    id: Pointer;\r\n    sender: Pointer<DUser>;\r\n    token: Pointer<DUser>;\r\n    hasFired: number = 0;\r\n    // targetID: string | undefined;\r\n    // target: IClass = null as any;\r\n    consoleTargetSelector: string = '';\r\n    // field: string = ''; // es: ID_58\r\n    // value: any; // es: lowerbound, name, namespace, values (for attrib-ref)...\r\n    type: string;\r\n    public field: string;\r\n    public value: any;\r\n    // private src?: string[];\r\n    private stack?: string[];\r\n    subType?: string; //?\r\n    protected constructor(field: string, value: any, subType?: string){\r\n        super();\r\n        this.id = 'Pointer_' + Date.now();\r\n        this.sender = DUser.current;\r\n        this.token = DUser.token;\r\n        this.field = field;\r\n        this.value = value;\r\n        this.type = (this.constructor as any).type;\r\n        // this.src = new Error().stack?.split('\\n').splice( 4);\r\n        this.subType = subType;\r\n        this.className = this.constructor.name;\r\n    }\r\n\r\n    fire(forceRelaunch: boolean = false): boolean {\r\n        if (this.hasFired && !forceRelaunch) return false;\r\n        if (hasBegun) {\r\n            pendingActions.push(this);\r\n        } else {\r\n            this.hasFired++;\r\n            let storee = store || windoww.store;\r\n            console.log('firing action:', {\r\n                field: this.field,\r\n                val: this.value,\r\n                // stack:this.src,\r\n                thiss:this\r\n            });\r\n            storee.dispatch({...this});\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static possibleInconsistencies: Dictionary<DocString<'subtype'>, Pointer[]> = {};\r\n    private static parse1(action: Action): ParsedAction {\r\n        const ret: ParsedAction = action as any;\r\n        ret.path = action.field; // normalize the path\r\n        ret.pathArray = ret.path.split('.');\r\n        ret.executionCount = 0;\r\n        if (!action.subType) return ret;\r\n        if (!Action.possibleInconsistencies[action.subType]) Action.possibleInconsistencies[action.subType] = [ action.value ];\r\n        else Action.possibleInconsistencies[action.subType].push(action.value);\r\n        return ret;\r\n    }\r\n\r\n    static parse<T extends Action | Action[], RET extends T extends any[] ? ParsedAction[] : ParsedAction>(actions: T): RET {\r\n        if ((actions as Action).className === CompositeAction.name) throw new Error(\"Composite action cannot be parsed directly, parse composite.actions instead\");\r\n        if (!Array.isArray(actions)) return Action.parse1(actions) as RET;\r\n        return actions.map( Action.parse1 ) as RET;\r\n    }\r\n\r\n    static fromJson(json: Json): Action{\r\n        let action = new Action('dummy', 'dummy');\r\n        for(let key in json) (action as any)[key] = json[key];\r\n        return action;\r\n    }\r\n}\r\n@RuntimeAccessible\r\nexport class LoadAction extends Action {\r\n    static type = 'LOAD';\r\n    static new(state: DState): boolean {  return state && new LoadAction(state).fire(); }\r\n    constructor(state: DState, fire: boolean = true) {\r\n        super('', state, '');\r\n        this.className = this.constructor.name;\r\n        if (fire) this.fire();\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class SetRootFieldAction extends Action {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static type = 'SET_ROOT_FIELD';\r\n    isPointer: boolean;\r\n\r\n\r\n\r\n    static new(fullpath: string, val: string | string[], accessModifier: AccessModifier | undefined, isPointer: boolean): boolean;\r\n    static new<\r\n        VAL extends any,\r\n        PATH extends VAL extends string | string[] ? 'must specify \"isPointer\" parameter' : string,\r\n        // VAL extends (AM extends undefined | '' ? D[T] : (AM extends '-=' ? number[] : (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<D[T]> | D[T] | D[T][] : '_error_'))),\r\n        /*VAL extends (AM extends undefined | '' ? (D[T] extends any[] ? StrictExclude<D[T], string[]> : StrictExclude<D[T], string>) :\r\n            (AM extends '-=' ?\r\n                number[] :\r\n                (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<StrictExclude<D[T], string>> | StrictExclude<D[T], string> | (StrictExclude<D[T], string>)[] : '_error_'))),\r\n        */\r\n        ISPOINTER extends boolean,\r\n        AM extends AccessModifier | undefined = undefined,\r\n        // T extends arrayFieldNameTypes<D> = any\r\n        >(fullpath: PATH, val: VAL, accessModifier?: AM | undefined, isPointer?: ISPOINTER): boolean;\r\n    static new<\r\n        T extends string,\r\n        VAL extends any,\r\n        ISPOINTER extends boolean,\r\n        AM extends AccessModifier | undefined = undefined,\r\n        // T extends arrayFieldNameTypes<D> = any\r\n        >(fullpath: T, val: VAL, accessModifier: AM | undefined = undefined, isPointer?: ISPOINTER): boolean {\r\n        if (accessModifier) (fullpath as any) += accessModifier;\r\n        return new SetRootFieldAction(fullpath, val, false, isPointer).fire();\r\n    }\r\n\r\n    protected constructor(fullpath: string, value: any = undefined, fire: boolean = true, isPointer: boolean = false) {\r\n        super(fullpath, value, undefined);\r\n        this.className = this.constructor.name;\r\n        this.isPointer = isPointer;\r\n        if (fire) this.fire();\r\n    }\r\n\r\n    static create<\r\n        T extends string,\r\n        VAL extends any,\r\n        ISPOINTER extends boolean,\r\n        AM extends AccessModifier | undefined = undefined,\r\n        // T extends arrayFieldNameTypes<D> = any\r\n        >(fullpath: T, val: VAL, accessModifier: AM | undefined = undefined, isPointer?: ISPOINTER): SetRootFieldAction {\r\n        return new SetRootFieldAction(fullpath + (accessModifier || ''), val, false, isPointer);\r\n    }\r\n}\r\n\r\n\r\n// todo: ma non so come, fare in modo che [], +=, -=, siano disponibili solo se la chiave è il nome di un attributo di tipo array\r\ntype arrayFieldNameTypes<D> = keyof D | `${string & keyof D}[]` | `${string & keyof D}+=` | `${string & keyof D}-=` | `${string & keyof D}.${number}` | `${string & keyof D}[${number}]`;\r\ntype AccessModifier = '' | '[]' | '+=' | '-=' | `.${number}` | `[${number}]` | undefined;\r\n\r\n\r\ntype StrictExclude<T, U> = T extends U ? U extends T ? never : T : T;\r\n\r\n@RuntimeAccessible\r\nexport class SetFieldAction extends SetRootFieldAction {\r\n    static type = 'SET_ME_FIELD';\r\n    /*\r\n        static new<\r\n            D extends DPointerTargetable,\r\n            T extends (keyof D),\r\n            AM extends AccessModifier | undefined = ''\r\n            >(me: D | Pointer<D>,\r\n              field: T,\r\n              val: string | string[],\r\n              accessModifier: AM | undefined,\r\n              isPointer: boolean): boolean;*/\r\n    static new<\r\n        D extends DPointerTargetable,\r\n        T extends (keyof D),\r\n        VAL extends\r\n            D[T] extends string | string[] ? 'must specify \"isPointer\" parameter' :\r\n                (AM extends undefined | '' ? D[T] : (AM extends '-=' ? number[] : (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<D[T]> | D[T] | D[T][] : '_error_'))),\r\n        // VAL extends (AM extends undefined | '' ? D[T] : (AM extends '-=' ? number[] : (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<D[T]> | D[T] | D[T][] : '_error_'))),\r\n        /*VAL extends (AM extends undefined | '' ? (D[T] extends any[] ? StrictExclude<D[T], string[]> : StrictExclude<D[T], string>) :\r\n            (AM extends '-=' ?\r\n                number[] :\r\n                (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<StrictExclude<D[T], string>> | StrictExclude<D[T], string> | (StrictExclude<D[T], string>)[] : '_error_'))),\r\n        */\r\n        ISPOINTER extends boolean | \"todo: ISPOINTER type = boolean but required only if val is UnArr< string > = string | string[], maybe do with override\",\r\n        AM extends AccessModifier | undefined = undefined,\r\n        // T extends arrayFieldNameTypes<D> = any\r\n        >(me: D | Pointer<D>,\r\n          field: T,\r\n          val: VAL,\r\n          accessModifier?: AM | undefined,\r\n          isPointer?: ISPOINTER): boolean;\r\n    static new<\r\n        D extends DPointerTargetable,\r\n        T extends (keyof D),\r\n        VAL extends AM extends '' | undefined ? orArr<string | null | undefined> :\r\n            (AM extends '-=' ? orArr<number> :\r\n                (AM extends '+=' ? orArr<string | null | undefined> : '_am_typeerror_')),\r\n        AM extends AccessModifier | undefined = undefined,\r\n        >(me: D | Pointer<D>, field: T,\r\n          val: VAL,\r\n          accessModifier: AM,\r\n          isPointer: boolean): boolean;\r\n\r\n    static new<\r\n        D extends DPointerTargetable,\r\n        T extends string & (keyof D),\r\n        VAL extends (AM extends undefined | '' ? D[T] : (AM extends '-=' ? number[] : (AM extends '+=' | '[]' | `[${number}]` | `.${number}` ? unArr<D[T]> | D[T] | D[T][] : '_error_'))),\r\n        ISPOINTER extends boolean | \"todo: ISPOINTER type = boolean but required only if val is UnArr< string > = string | string[], maybe do with override\",\r\n        AM extends AccessModifier | undefined = undefined,\r\n        // T extends arrayFieldNameTypes<D> = any\r\n        >(me: D | Pointer<D>, field: T, val: VAL, accessModifier: AM | undefined = undefined, isPointer?: ISPOINTER): boolean {\r\n        if (accessModifier) (field as any) += accessModifier;\r\n        return new SetFieldAction(me, field, val, false, isPointer as boolean).fire();\r\n    }\r\n\r\n\r\n    // field can end with \"+=\", \"[]\", or \"-1\" if it's array\r\n    protected constructor(me: DPointerTargetable | Pointer, field: string, val: any, fire: boolean = true, isPointer: boolean = false) {\r\n        Log.exDev(!me, 'BaseObject missing in SetFieldAction', {me, field, val});\r\n        super('idlookup.' + ((me as DPointerTargetable).id || me) + ( field ? '.' + field : ''), val, false, isPointer);\r\n        this.className = this.constructor.name;\r\n        if (fire) this.fire();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\ntodo: showcase this\r\nlet dclass: DClass = null as any;\r\nSetFieldAction.new(dclass, 'namek', '') // non è un attributo di \"DCLass\"\r\nSetFieldAction.new(dclass, 'parent', '') // val (stringa) non è assegnabile a parent (array di puntatori)\r\nSetFieldAction.new(dclass, 'name.5k', '') // non è un indice array valido\r\nSetFieldAction.new(dclass, 'name[4k]', '') // non è un indice array valido\r\nSetFieldAction.new(dclass, 'name[4]', '') // ok, anche se non dovrebbe accettare la dicitura array per name che è un primitivo (check non implementato, troppo difficile)\r\nSetFieldAction.new(dclass, 'name.5', '') // ok, equivale a dicitura array\r\n*/\r\n\r\n@RuntimeAccessible\r\nexport class RedoAction extends Action {\r\n    static type = 'RedoAction';\r\n    public static new<F extends boolean = true>(amount: number = 1, notfire?: F): (F extends false ? boolean : RedoAction) {\r\n        let act = new RedoAction(amount);\r\n        if (!notfire) return act.fire() as any;\r\n        return act as any;\r\n    }\r\n    private constructor(amount: number = 1) {\r\n        super('', amount);\r\n        this.className = this.constructor.name;\r\n    }\r\n}\r\n@RuntimeAccessible\r\nexport class UndoAction extends Action {\r\n    static type = 'UndoAction';\r\n    public static new<F extends boolean = true>(amount: number = 1, notfire?: F): (F extends false ? boolean : UndoAction) {\r\n        let act = new UndoAction(amount);\r\n        if (!notfire) return act.fire() as any;\r\n        return act as any;\r\n    }\r\n    private constructor(amount: number = 1) {\r\n        super('', amount);\r\n        this.className = this.constructor.name;\r\n    }\r\n}\r\n@RuntimeAccessible\r\nexport class CombineHistoryAction extends Action {\r\n    static type = 'CombineHistoryAction';\r\n    public static new<F extends boolean = true>(notfire?: F): (F extends false ? boolean : CombineHistoryAction) {\r\n        let act = new CombineHistoryAction();\r\n        if (!notfire) return act.fire() as any;\r\n        return act as any;\r\n    }\r\n    private constructor() {\r\n        super('', '');\r\n        this.className = this.constructor.name;\r\n    }\r\n}\r\n\r\n\r\n\r\n@RuntimeAccessible\r\nexport class CreateElementAction extends Action {\r\n    static type = 'CREATE_ELEMENT';\r\n    value!: DPointerTargetable;\r\n    public static newBatch<F extends boolean = true>(me: DPointerTargetable[], notfire?: F): (F extends false ? boolean : CreateElementAction)[]{\r\n        return me.map( (e) => CreateElementAction.new(e, notfire));\r\n    }\r\n\r\n    public static new<F extends boolean = true>(me: DPointerTargetable , notfire?: F): (F extends false ? boolean : CreateElementAction) {\r\n        if ((me as LPointerTargetable).__raw) me = (me as LPointerTargetable).__raw;\r\n        let act = new CreateElementAction(me, !notfire);\r\n        if (!notfire) return act.fire() as any;\r\n        return act as any;\r\n    }\r\n    private constructor(me: DPointerTargetable, fire: boolean = true) {\r\n        super('idlookup.' + me.id, me);\r\n        this.className = this.constructor.name;\r\n        this.value = me;\r\n        if (fire) this.fire();\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class DeleteElementAction extends SetFieldAction {\r\n    static type = 'DELETE_ELEMENT';\r\n    public static new(me: Pack1<LPointerTargetable>): boolean {\r\n        return new DeleteElementAction(me as any).fire(); }\r\n    constructor(me: DPointerTargetable | Pointer) {\r\n        super((me as DPointerTargetable).id || me, '', undefined);\r\n        this.className = this.constructor.name;\r\n        this.fire();\r\n    }\r\n}\r\n\r\n\r\n/*\r\n\r\n@RuntimeAccessible\r\nexport class IDLinkAction extends Action{\r\n    constructor() {\r\n        super(IDLinkAction.name,\r\n    }\r\n    nope, uso un proxy\r\n}*/\r\n\r\n@RuntimeAccessible\r\nexport class CompositeAction extends Action {\r\n    static type: string = 'COMPOSITE_ACTION';\r\n    actions: Action[] = [];\r\n\r\n    public static new(actions: Action[], launch: boolean = true): CompositeAction { return new CompositeAction(actions, launch); }\r\n    constructor(actions: Action[], launch: boolean = false) {\r\n        super('', '');\r\n        this.actions = actions;\r\n        this.className = this.constructor.name;\r\n        if (launch) this.fire();\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class ParsedAction extends SetRootFieldAction {\r\n    path!: string; // path to a property in the store \"something.like.this\"\r\n    pathArray!: string[]; // path splitted \"like.1.this\"\r\n    executionCount!: number;\r\n\r\n}\r\n\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, Action);\r\nRuntimeAccessibleClass.set_extend(Action, LoadAction);\r\nRuntimeAccessibleClass.set_extend(Action, SetRootFieldAction);\r\nRuntimeAccessibleClass.set_extend(SetRootFieldAction, SetFieldAction);\r\nRuntimeAccessibleClass.set_extend(SetFieldAction, DeleteElementAction);\r\nRuntimeAccessibleClass.set_extend(Action, RedoAction as any);\r\nRuntimeAccessibleClass.set_extend(Action, UndoAction as any);\r\nRuntimeAccessibleClass.set_extend(Action, CreateElementAction as any);\r\nRuntimeAccessibleClass.set_extend(Action, CombineHistoryAction as any);\r\nRuntimeAccessibleClass.set_extend(Action, CompositeAction as any);\r\nRuntimeAccessibleClass.set_extend(SetRootFieldAction, ParsedAction as any);\r\n","// export type Class = { new(...args: any[]): any; };\r\nimport type {ShortAttribETypes, Pointer, RuntimeAccessibleClass, EdgeSegment} from \"../joiner\";\r\nimport type React from \"react\";\r\nimport {LEdgePoint, LGraphElement, LVoidEdge, LVoidVertex} from \"../joiner\";\r\n\r\nexport declare type Class<CtorArgs extends any[] = any[], InstanceType = {}, StaticType = {}, IsAbstract = false> = (abstract new (...args: any[]) => InstanceType) & StaticType;\r\nexport declare type CClass<CtorArgs extends any[] = any[], InstanceType = {}, StaticType = {}, IsAbstract = false> = (new (...args: any[]) => InstanceType) & StaticType;\r\ninterface Caller { caller: any; }\r\ninterface Bind { bind: any; }\r\ninterface Apply { apply: any; }\r\ninterface Call { call: any; }\r\nexport type Function =  Caller | Bind | Apply | Call;\r\nexport type Function2 =  (...a: any) => any;\r\nexport type Constructor<InstanceType = any> = (new (...a: any) => InstanceType) & {__proto__?: Constructor<InstanceType> & GObject};\r\nexport type AbstractConstructor<InstanceType = any> = (GObject | (new (...a: any) => InstanceType)) & {__proto__?: Constructor<InstanceType> & GObject};\r\nexport type Temporary = any;\r\nexport type Nullable<T> = T | null\r\nexport type UnixTimestamp = number;\r\ninterface NoCaller { caller?: never; }\r\ninterface NoBind { bind?: never; }\r\ninterface NoApply { apply?: never; }\r\ninterface NoCall { call?: never; }\r\n\r\n\r\nexport type orArr<T> = T | T[];\r\nexport type unArr<T extends any[] | any> = T extends any[] ? T[0] : T;\r\n\r\n// type primitiveType = string | number | boolean | symbol | null | undefined;\r\nexport type PrimitiveType = string | number | boolean | null | undefined;\r\ntype NotAFunction = NoCaller | NoBind | NoApply | NoCall;\r\ntype NotFunction = GObject & NotAFunction | PrimitiveType;\r\nexport type Info = {\r\n    type?: ShortAttribETypes | string | typeof RuntimeAccessibleClass,\r\n    readType?: ShortAttribETypes | string | typeof RuntimeAccessibleClass,\r\n    writeType?: ShortAttribETypes | string | typeof RuntimeAccessibleClass,\r\n    txt: string | React.ReactElement};\r\n\r\n\r\nexport type Empty = any;\r\nexport type UObject = { [key: string]: unknown; }\r\nexport type GObject<DocSubType = ''> = DocSubType extends object ? { [key: string]: any; } & DocSubType : { [key: string]: any; };\r\nexport type RawObject = { [key: string]: NotFunction; };\r\n// Json<T> = oggetto con le chiavi di T senza le funzioni (post deserializzazione)\r\nexport type Json<T extends GObject = RawObject> =\r\n\r\n        {[key in keyof T]: T[key] extends Function ? never : (T[key] extends symbol ? \"symbol\" :\r\n            Exclude<T[key], symbol>); }\r\n        ;\r\n\r\n// export type Dictionary<K extends keyof any, T> = { [P in K]: T; };\r\nexport type Dictionary<K extends keyof GObject = any, V = any> = { [P in K]: V; } & { _subMaps?: V};\r\n// _subMaps type *actually just Dict<str, boolean> but if i set it as bool and access a random element of the map it will be typed as boolean | V*/\r\nexport type DocString<T, COMMENT = ''> = string;\r\nexport type NotFound = null;\r\nexport const NotFoundv = null as NotFound;\r\nexport type nstring = null | string;\r\nexport type nnumber = null | number;\r\nexport type nbool = null | boolean;\r\nexport type bool = boolean;\r\nexport type TODO<T = any> = any;\r\nexport type NonEmptyString = Exclude<string, ''>;\r\nexport enum EdgeBendingMode {\r\n    \"Line\"=\"L\", // end\r\n    \"Bezier_quadratic\"=\"Q\", // bending1, end\r\n    \"Bezier_cubic\"=\"C\", // bending1, bending2, end\r\n    \"Bezier_cubic_mirrored\"=\"S\", // bending1, end // when there are multiple bezier curves on a row, this takes a bendingpoint1 from the last bezier curves mirrored https://css-tricks.com/svg-path-syntax-illustrated-guide/\r\n    \"Bezier_quadratic_mirrored\"=\"T\", // end // when there are multiple bezier curves on a row, this takes a bendingpoint1 from the last bezier curves mirrored https://css-tricks.com/svg-path-syntax-illustrated-guide/\r\n    \"Elliptical_arc\" = \"A\",// x y, rot, arc sweep, x y.  x,y are coords. rot is angle [0, 360), arc & sweep are {0,1}\r\n    // can do elliptical arc with a single EP. rotation i take it from rotating the actual EP. arc & sweep i take it from node state (maybe rotation too)\r\n    \"Bezier_QT\"=\"QT\", // first a Quadratic, then N quadratic mirrored\r\n    \"Bezier_CS\"=\"CS\", // first a Quadratic, then N quadratic mirrored\r\n}\r\nexport enum EdgeGapMode {\r\n    \"gap\" = \"gap\",\r\n    \"autoFill\" = \"autoFill\",\r\n    \"lineFill\" = \"lineFill\",\r\n    \"arcFill\" = \"arcFill\",\r\n    \"center\" = \"center\",\r\n    \"average\" = \"average\",\r\n}\r\n\r\n// export type Subtract<T, K> = {  [L in Exclude<keyof T, K>]: T[L] };\r\n// Or alternatively, and more concisely, as:\r\n\r\n// export type Subtract<T, K> = Pick<T, Exclude<keyof T, K>>;\r\nexport type Subtract<T, K> = Omit<T, keyof K>;\r\nexport type Overlap<T1, T2> =  Omit<T1, keyof T2> & T2;\r\n\r\n\r\n\r\n\r\n\r\n// tipo puramente documentazionale, è solo una stringa o array di stringhe\r\n/*export type Pointer<T extends DPointerTargetable = DPointerTargetable, lowerbound = number, upperbound = number | string, RET = LPointerTargetable> =\r\n    upperbound extends 'N' ? string[] : (\r\n    upperbound extends 0 ? never : (\r\n    lowerbound extends 0 ? (string | undefined | null) : string)); // & {[Symbol.iterator]: () => IterableIterator<string>};\r\n*/\r\ndeclare global  {\r\n    interface ProxyConstructor {\r\n        new <TS extends object, TT extends object = TS>(target: TS, handler: ProxyHandler<TS>): TT;\r\n        // official flawed definition: new <T extends object>(target: T, handler: ProxyHandler<T>): T;\r\n    }\r\n\r\n}\r\n\r\n\r\n// export type Proxyfied<T extends object> = T | GObject;// | T;\r\n\r\nexport type Proxyfied<T extends object> = UObject & T;\r\nexport const windoww: typeof window & GObject= window;\r\nexport type InOutParam<T> = T;\r\n\r\nexport type IsActually<T> = any; // for some reason typescript complains about circular type references? this is a workaround\r\n\r\ntype KeysnotOfType<T, TT> = { [P in keyof T as (T[P] extends TT ? never : P)]: T[P] };\r\ntype ObjectWithoutStrings<T> = {\r\n    [P in keyof T as (T[P] extends string ? never : (T[P] extends string[] ? never : P))]: T[P] // working on arr, keeps single ptrs\r\n};\r\ntype pureStringsNoPointers<T> = {\r\n    [P in keyof T as ( T[P] extends Pointer ? (Pointer extends T[P] ? P : (never)): never)]: T[P]\r\n};\r\nexport type ObjectWithoutPointers<T> = Omit<ObjectWithoutStrings<T> & pureStringsNoPointers<T>, 'pointedBy' | '_storePath'>\r\n\r\ntype refkeys = \"parent\" | \"father\" | \"classifiers\" | \"children\" | \"classes\" | \"packages\" | \"subpackages\" | \"annotations\" | \"\"\r\n    | \"type\" | \"attributes\" | \"references\" | \"operations\" | \"parameters\" | \"..... much more\"\r\n\r\nexport type InitialSizeField = number ;// | ((segment: EdgeSegment) => number);\r\nexport type InitialVertexSizeObj = Partial<{\r\n    id?: DocString<\"Just something to be used as a react key. doesn't need to be a proper Pointer id\">,\r\n    index?: number, // where the EdgePoint should be inserted\r\n    w: InitialSizeField, h: InitialSizeField, x: InitialSizeField, y: InitialSizeField}>;\r\nexport type InitialVertexSizeFunc = ((parent: LVoidEdge|LGraphElement, thiss: LVoidVertex|LEdgePoint)=>InitialVertexSizeObj);\r\nexport type InitialVertexSize =  undefined | InitialVertexSizeObj | InitialVertexSizeFunc; // | ((segment: EdgeSegment) => privateTempIVS);\r\n","import React, {CSSProperties, Dispatch, LegacyRef, PureComponent, ReactElement, ReactNode} from \"react\";\r\nimport {\r\n    AbstractConstructor,\r\n    Constructor, DGraph,\r\n    DModelElement, DPointerTargetable,\r\n    GObject,\r\n    DState,\r\n    LModelElement, LPointerTargetable, OCL, Pointer,\r\n    RuntimeAccessibleClass,\r\n    Selectors,\r\n    windoww\r\n} from \"../../joiner\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\ninterface ThisState {\r\n    // listAllStateVariables: boolean,\r\n}\r\n\r\nclass BidirectionalOCLEditor extends PureComponent<AllProps, ThisState>{\r\n\r\n    oclContainer? : LegacyRef<HTMLDivElement>\r\n    editor? : any\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.oclContainer = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadEditor()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<AllProps>, prevState: Readonly<ThisState>, snapshot?: any) {\r\n        this.loadEditor()\r\n    }\r\n\r\n    loadEditor() {\r\n        const xtext = (window as GObject).xtext;\r\n        const url = (window as GObject).baseUrl;\r\n        if(xtext && url) {\r\n            this.editor = xtext.createEditor({ baseUrl: url,\r\n                serviceUrl: \"http://localhost:8085/xtext-service\",\r\n                syntaxDefinition: `xtext-resources/generated/mode-ocl.js`,\r\n                enableCors: true, // @ts-ignore\r\n                parent: this.oclContainer.current\r\n            })\r\n        }\r\n    }\r\n\r\n    getOclQuery() {\r\n        this.ocltextchanged(this.editor.getValue())\r\n    }\r\n\r\n    private ocltextchanged(oclText0: string| boolean): string{\r\n        let oclText = ''+oclText0;\r\n        let state: DState = windoww.store.getState();\r\n        let dmp: DModelElement[] = Selectors.getAllMP(state);\r\n        let lmp: LModelElement[] = Selectors.wrap(dmp, state);\r\n\r\n        console.log('all MP:', dmp, lmp);\r\n        let constructors: Constructor[] = RuntimeAccessibleClass.getAllClasses() as (Constructor|AbstractConstructor)[] as Constructor[];\r\n        let valids: DPointerTargetable[] = [];\r\n        try { valids = OCL.filter(true, \"src\", lmp, oclText, constructors) as DPointerTargetable[]; }\r\n        catch (e) { console.error('invalid ocl query:', {e, oclText, dmp, lmp});}\r\n        let out: { $matched: JQuery<HTMLElement>, $notMatched: JQuery<HTMLElement>} = {} as any;\r\n        console.log('filtered MP', {dmp, lmp, valids, validfilled:valids.filter(b=>!!b)});\r\n        let $htmlmatch: JQuery<HTMLElement> = DGraph.getNodes(valids.filter(b=>!!b) as DModelElement[], out);\r\n        console.log('filtered MP', {dmp, lmp, valids, $htmlmatch});\r\n        out.$notMatched.removeClass('ocl_match');\r\n\r\n        $htmlmatch.addClass('ocl_match');\r\n        return oclText;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const data = this.props.data;\r\n        const otherprops: GObject = {...this.props};\r\n        if (!otherprops.style) otherprops.style = {};\r\n        if (!otherprops.style.width) otherprops.style.width = '100%';\r\n        delete otherprops.data; // tenta di settare l'attributo data con un proxy e fallisce perchè non è stringa\r\n        delete otherprops.obj; // obj è stato wrappato come proxy in \"data\"\r\n\r\n        return (<>\r\n            <div className={\"mt-2\"} style={{height: \"7em\"}}>\r\n                <div className={\"row\"}>\r\n                    <p className={\"col my-auto mx-auto mb-2\"}><b>{this.props.label}</b></p>\r\n                    <button onClick={() => this.getOclQuery()} className={\"col btn btn-success\"} style={{maxWidth: '3em'}}>\r\n                        <i className=\"bi bi-arrow-right\"></i>\r\n                    </button>\r\n                </div>\r\n                <div style={{marginTop: \".5em\", height: \"12em\"}} data-editor-xtext-lang={\"ocl\"} ref={this.oclContainer}>\r\n                </div>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\n\r\n// private\r\ninterface OwnProps {\r\n    getter?: ((val: any, baseobj: GObject, key: string) => string); // val is default value used without a getter = baseobj[key]\r\n    setter?: ((val: string|boolean, data?: LPointerTargetable) => any);\r\n    obj: DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    //LPointerTargetable | (Pointer<DPointerTargetable, 0, 'N', LPointerTargetable> & string);\r\n    field: string;\r\n    label?: string;\r\n    type? : 'button'|'checkbox'|'color'|'date'|'datetime-local'|'email' |'file' |'hidden' |'image' |'month' |\r\n        'number' |'password' |'radio' |'range' |'reset' |'search' |'submit' |'tel' |'text' |'time' |'url' |'week';\r\n    className?: string;\r\n    id?: string;\r\n    key?: string;\r\n    placeholder?: string;\r\n    min?: number;\r\n    max?: number;\r\n    step?: number|'any';\r\n    disabled?: boolean;\r\n    readonly?: boolean;\r\n    rootstyle?: CSSProperties;\r\n    labelstyle?: CSSProperties;\r\n    inputstyle?: CSSProperties;\r\n    wrap?: boolean;\r\n    tooltip?: string;\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    data: LPointerTargetable & GObject;\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    console.log(\"ownProps.obj\", ({state, ownProps:{...ownProps}}));\r\n    if (!ownProps.obj) return ret;\r\n    let objid: Pointer = typeof ownProps.obj === 'string' ? ownProps.obj : ownProps.obj.id;\r\n    ret.data = ownProps.wrap === false ? ownProps.obj as any : LPointerTargetable.wrap(state.idlookup[objid]) || ownProps.obj;\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret; }\r\nexport const OCLEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(mapStateToProps, mapDispatchToProps)(BidirectionalOCLEditor as any);\r\n\r\nexport const OCLEditorAce = (props: GObject & OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <OCLEditorConnected {...props} field={props.field} obj={props.obj} />\r\n}\r\n","import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState} from \"../../redux/store\";\r\nimport {\r\n    Dictionary,\r\n    DPointerTargetable, DUser,\r\n    GObject,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    Overlap,\r\n    Pointer,\r\n    Selectors,\r\n    U\r\n} from \"../../joiner\";\r\nimport toast, {Toaster} from 'react-hot-toast';\r\n\r\n\r\nfunction InputComponent(props: AllProps) {\r\n    // todo: data can be injected with UX, if field is present, can take type from a metainfo like __info_of__\r\n    const data = props.data;\r\n    const selected = props.selected;\r\n    const fathers = U.fatherChain(data as LModelElement);\r\n    let editable = true;\r\n    for(let father of fathers) {\r\n        const user = Object.keys(selected).find(key => selected[key]?.id === father);\r\n        if(user && user !== DUser.current) editable = false;\r\n        if(!editable) break;\r\n    }\r\n\r\n    if(!data) return(<></>);\r\n    const readOnly = props.readonly || U.getDefaultViewsID().includes(data.id);\r\n    const getter = props.getter;\r\n    const setter = props.setter;\r\n    const field = props.field;\r\n    const value = (getter) ? getter(data) : (data[field] !== undefined) ? data[field] : 'undefined';\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    /*\r\n    let tooltip: string | React.ReactElement | Info = props.tooltip === true ? data[\"__info_of__\" + field] : (props.tooltip || undefined);\r\n    if (typeof tooltip === \"object\" && (tooltip as Info).txt) {\r\n        tooltip = <div className={\"tooltip\"}>\r\n            <span className={\"type\"} style={{color: \"orange\"}}>{\":\"+tooltip.type+\"\\t\"}</span>\r\n            <span className={\"txt\"}>{(tooltip as Info).txt}</span>\r\n        </div>;\r\n    }\r\n    */\r\n    let tooltip: string = (props.tooltip === true) ? (data[\"__info_of__\" + field]) ? data[\"__info_of__\" + field].txt : '' : '';\r\n\r\n    let css = 'my-auto input ';\r\n    let inputClassName = (props.inputClassName || '');\r\n    css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type===\"text\"\r\n    css += autosize ? ' autosize-input' : '';\r\n\r\n    const notify = () => toast((t: GObject) => (\r\n        <div onClick={() => toast.dismiss(t.id)}>\r\n            <label className={'ms-1'}>{tooltip}</label>\r\n        </div>\r\n    ));\r\n\r\n    const change = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(readOnly) return;\r\n        if(setter) setter(evt.target.value);\r\n        else {\r\n            const target = (['checkbox', 'radio'].includes(evt.target.type)) ? evt.target.checked : evt.target.value;\r\n            data[field] = target;\r\n        }\r\n    }\r\n\r\n    let className = (props as any).className || '';\r\n    let style = (props as any).style || {};\r\n    props = {...props, className:'', style:{}} as any;\r\n    let input = <input key={'input.' + data.id} spellCheck={false} readOnly={readOnly || !editable} className={css + inputClassName}\r\n                       type={type} value={value} onChange={change}\r\n                       checked={(['checkbox', 'radio'].includes(type)) ? !!value : undefined} />\r\n\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.hidden;\r\n\r\n    return(<div {...otherprops} style={{...{display: (jsxLabel || label) ? 'flex' : 'block', cursor: (tooltip) ? 'help' : 'auto'}, ...style}}\r\n                className={'p-1 ' + className}>\r\n        {(label && !jsxLabel) && <label className={'my-auto'} onClick={() => {if(tooltip) notify()}}>\r\n            {label}\r\n        </label>}\r\n        {(jsxLabel && !label) && <label className={'my-auto'} onClick={() => {if(tooltip) notify()}}>\r\n            {jsxLabel}\r\n        </label>}\r\n        { autosize ? <div className={ (autosize ? \"autosize-input-container\" : \"\") + (props.asLabel ? \" labelstyle\" : \"\")}\r\n                          data-value={value}>{input}</div> : input}\r\n        {tooltip && <Toaster position={'bottom-center'} /> }\r\n    </div>);\r\n}\r\nexport interface InputOwnProps {\r\n    data: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field: string;\r\n    getter?: (data: LPointerTargetable) => string;\r\n    setter?: (value: string|boolean) => void;\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n        'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    readonly?: boolean;\r\n    tooltip?: string | boolean | ReactElement;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    asLabel?: boolean;\r\n    key?: React.Key | null;\r\n}\r\ninterface StateProps {\r\n    data: LPointerTargetable & GObject;\r\n    selected: Dictionary<Pointer<DUser>, LModelElement|null>;\r\n\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<InputOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: InputOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\r\n    ret.data = LPointerTargetable.fromPointer(pointer);\r\n    const selected = state.selected;\r\n    ret.selected = {};\r\n    for(let user of Object.keys(selected)) {\r\n        const pointer = selected[user];\r\n        if(pointer) ret.selected[user] = LModelElement.fromPointer(pointer);\r\n        else ret.selected[user] = null;\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const InputConnected = connect<StateProps, DispatchProps, InputOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InputComponent);\r\n\r\n\r\nexport function Input(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children}} />;\r\n}\r\n// export default Input____a;\r\n","import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState,\r\n    DPointerTargetable,\r\n    GObject,\r\n    LPointerTargetable,\r\n    U,\r\n    Overlap, Pointer} from \"../../joiner\";\r\nimport {SelectOwnProps} from \"./Select\";\r\n\r\n\r\nfunction TextAreaComponent(props: AllProps) {\r\n    const data = props.data;\r\n    if(!data) return(<></>);\r\n    const readOnly = props.readonly || U.getDefaultViewsID().includes(data.id);\r\n    const field = props.field;\r\n    const value = (data[field] !== undefined) ? data[field] : 'undefined';\r\n    const label: string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    const tooltip = props.tooltip;\r\n    let css = 'my-auto input ';\r\n    css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n\r\n    const change = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const target: string = evt.target.value;\r\n        data[field] = target;\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.hidden;\r\n\r\n    return(<div {...otherprops} style={{display: (jsxLabel || label) ? 'flex' : 'block'}} className={'p-1'}>\r\n        {(label && !jsxLabel) && <label className={'my-auto'}>\r\n            {label}\r\n        </label>}\r\n        {(jsxLabel && !label) && <label className={'my-auto'}>\r\n            {jsxLabel}\r\n        </label>}\r\n        <textarea spellCheck={false} readOnly={readOnly} className={css}\r\n               onChange={change} value={value} />\r\n    </div>);\r\n}\r\nexport interface TextAreaOwnProps {\r\n    data: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field: string;\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    readonly?: boolean;\r\n    tooltip?: string;\r\n    hidden?: boolean;\r\n    key?: React.Key | null;\r\n}\r\ninterface StateProps { data: LPointerTargetable & GObject; }\r\ninterface DispatchProps { }\r\n\r\ntype AllProps = Overlap<TextAreaOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: TextAreaOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\r\n    ret.data = LPointerTargetable.fromPointer(pointer);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TextAreaConnected = connect<StateProps, DispatchProps, TextAreaOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TextAreaComponent);\r\n\r\nexport const TextArea = (props: TextAreaOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <TextAreaConnected {...{...props, children}} />;\r\n}\r\nexport default TextArea;\r\n","import type {LClass, DPointerTargetable} from \"../../joiner\";\r\nimport React, {Dispatch, LegacyRef, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport toast, {Toaster} from \"react-hot-toast\";\r\nimport {DState,\r\n    U,\r\n    LPointerTargetable,\r\n    GObject,\r\n    Pointer,\r\n    LEnumerator,\r\n    Selectors,\r\n    LModelElement,\r\n    Overlap} from \"../../joiner\";\r\n\r\n\r\nfunction SelectComponent(props: AllProps) {\r\n    const data = props.data;\r\n    if(!data) return(<></>);\r\n    const field = props.field;\r\n    const readOnly = props.readonly || U.getDefaultViewsID().includes(data.id);\r\n    const value = (data[field]?.id) ? data[field].id : 'undefined';\r\n    const label: string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    const tooltip = props.tooltip;\r\n    let css = 'my-auto select ';\r\n    css += (jsxLabel) ? 'ms-1' : 'ms-auto';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n\r\n    const notify = () => toast((t: GObject) => (\r\n        <div onClick={() => toast.dismiss(t.id)}>\r\n            <label className={'ms-1'}>{tooltip}</label>\r\n        </div>\r\n    ));\r\n\r\n    function SelectChange(evt: React.ChangeEvent<HTMLSelectElement>) {\r\n        if(readOnly) return;\r\n        const target = evt.target.value;\r\n        console.log(\"setting:\", {data, field, target});\r\n        data[field] = target;\r\n    }\r\n\r\n    let hasReturn = false; let hasPrimitive = false; let hasClasses = false; let hasEnumerators = false;\r\n    if(field === 'type') {\r\n        switch (data.className) {\r\n            case 'DAttribute': hasPrimitive = hasEnumerators = true; break;\r\n            case 'DReference': hasClasses = true; break;\r\n            case 'DOperation': hasPrimitive = hasClasses = hasEnumerators = hasReturn = true; break;\r\n            case 'DParameter': hasPrimitive = hasClasses = hasEnumerators = true; break;\r\n        }\r\n    }\r\n    const returns = props.returns;\r\n    const primitives = props.primitives;\r\n    const classes: LClass[] = data.model.classes;\r\n    const enumerators: LEnumerator[] = data.model.enumerators;\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.primitives;\r\n    delete otherprops.returns;\r\n    delete otherprops.hidden;\r\n    // todo per giordano: questa cosa non mi setta props.ref.current correttamente, puoi aggiustarlo tu? forse conosci meglio refs\r\n    return(<div {...otherprops} ref={props.ref as any} className={'d-flex p-1'} >\r\n        {(label && !jsxLabel) && <label className={'my-auto'} onClick={() => {if(tooltip) notify()}}>\r\n            {label}\r\n        </label>}\r\n        {(jsxLabel && !label) && <label className={'my-auto'} onClick={() => {if(tooltip) notify()}}>\r\n            {jsxLabel}\r\n        </label>}\r\n        <select className={css} value={value} onChange={SelectChange}>\r\n            {(hasReturn && returns.length > 0) && <optgroup label={'Defaults'}>\r\n                {returns.map((returnType, i) => {\r\n                    return <option key={i} value={returnType.id}>{returnType.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(hasPrimitive && primitives) && <optgroup label={'Primitives'}>\r\n                {primitives.map((primitive, i) => {\r\n                    return <option key={i} value={primitive.id}>{primitive.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(hasEnumerators && enumerators.length > 0) && <optgroup label={'Enumerators'}>\r\n                {enumerators.map((enumerator, i) => {\r\n                    return <option key={i} value={enumerator.id}>{enumerator.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(hasClasses && classes.length > 0) && <optgroup label={'Classes'}>\r\n                {classes.map((classifier, i) => {\r\n                    return <option key={i} value={classifier.id}>{classifier.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {props.options}\r\n        </select>\r\n        {(tooltip) && <Toaster position={'bottom-center'} />}\r\n    </div>);\r\n}\r\nexport interface SelectOwnProps {\r\n    data?: DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field: string;\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    tooltip?: string;\r\n    hidden?: boolean;\r\n    options?: JSX.Element;\r\n    key?: React.Key | null;\r\n    ref?: React.RefObject<HTMLElement> | LegacyRef<HTMLElement>;\r\n    readonly?: boolean;\r\n}\r\ninterface StateProps {\r\n    data: LPointerTargetable & GObject;\r\n    primitives: LClass[];\r\n    returns: LClass[]; }\r\ninterface DispatchProps { }\r\n\r\ntype AllProps = Overlap<SelectOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: SelectOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    if (!ownProps.data) return ret;\r\n    const pointer: Pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\r\n    ret.data = LPointerTargetable.fromPointer(pointer);\r\n    ret.primitives = LPointerTargetable.fromPointer(state.primitiveTypes);\r\n    ret.returns = LPointerTargetable.fromPointer(state.returnTypes);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const SelectConnected = connect<StateProps, DispatchProps, SelectOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SelectComponent);\r\n\r\nexport const Select = (props: SelectOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <SelectConnected {...{...props, children}} />;\r\n}\r\nexport default Select;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState} from \"../../redux/store\";\r\n\r\n\r\nfunction ImageComponent(props: AllProps) {\r\n    let link;\r\n    if (props.code && props.name){\r\n        link = 'https://www.svgrepo.com/show/';\r\n        link += props.code + '/';\r\n        link += props.name + '.svg';\r\n    } else {\r\n        link = (props as any).src;\r\n    }\r\n    return <img className={'h-100 w-100'} src={link} />; // damiano: what's this? added to read src if provided\r\n}\r\ninterface OwnProps { code: string; name: string; }\r\ninterface StateProps { }\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ImageConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageComponent);\r\n\r\nexport const Image = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ImageConnected {...{...props, children}} />;\r\n}\r\nexport default Image;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Xarrow from \"react-xarrows\";\r\nimport {DState} from \"../../joiner\";\r\n\r\n\r\nfunction EdgeComponent(props: AllProps) {\r\n    const source = props.source;\r\n    const target = props.target;\r\n    const label = (props.label) ? props.label : '';\r\n\r\n    return(<Xarrow start={source} end={target} labels={label} />);\r\n}\r\ninterface OwnProps {\r\n    source: string,\r\n    target: string,\r\n    label?: string\r\n}\r\ninterface StateProps { }\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent);\r\n\r\nexport const Edge = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, children}} />;\r\n}\r\nexport default Edge;\r\n","import React, {PureComponent, ReactNode} from \"react\";\r\nimport ReactJson from 'react-json-view' // npm i react-json-view\r\nimport './logger.scss'\r\nimport {GObject} from \"../../joiner\";\r\n\r\n// private\r\ninterface ThisState { }\r\n\r\nexport class DataOutputComponent extends PureComponent<AllProps, ThisState>{\r\n    render(): ReactNode {\r\n        {/* themes:\r\n                                        export interface ThemeObject {\r\n                                            base00: string;\r\n                                            base01: string;\r\n                                            base02: string;\r\n                                            base03: string;\r\n                                            base04: string;\r\n                                            base05: string;\r\n                                            base06: string;\r\n                                            base07: string;\r\n                                            base08: string;\r\n                                            base09: string;\r\n                                            base0A: string;\r\n                                            base0B: string;\r\n                                            base0C: string;\r\n                                            base0D: string;\r\n                                            base0E: string;\r\n                                            base0F: string;\r\n                                        }\r\n\r\n                                            export type ThemeKeys =\r\n                                              | 'apathy'\r\n                                              | 'apathy:inverted'\r\n                                              | 'ashes'\r\n                                              | 'bespin'\r\n                                              | 'brewer'\r\n                                              | 'bright:inverted'\r\n                                              | 'bright'\r\n                                              | 'chalk'\r\n                                              | 'codeschool'\r\n                                              | 'colors'\r\n                                              | 'eighties'\r\n                                              | 'embers'\r\n                                              | 'flat'\r\n                                              | 'google'\r\n                                              | 'grayscale'\r\n                                              | 'grayscale:inverted'\r\n                                              | 'greenscreen'\r\n                                              | 'harmonic'\r\n                                              | 'hopscotch'\r\n                                              | 'isotope'\r\n                                              | 'marrakesh'\r\n                                              | 'mocha'\r\n                                              | 'monokai'\r\n                                              | 'ocean'\r\n                                              | 'paraiso'\r\n                                              | 'pop'\r\n                                              | 'railscasts'\r\n                                              | 'rjv-default'\r\n                                              | 'shapeshifter'\r\n                                              | 'shapeshifter:inverted'\r\n                                              | 'solarized'\r\n                                              | 'summerfruit'\r\n                                              | 'summerfruit:inverted'\r\n                                              | 'threezerotwofour'\r\n                                              | 'tomorrow'\r\n                                              | 'tube'\r\n                                              | 'twilight'; */}\r\n        return <ReactJson src={this.props.data}\r\n                          collapsed={1}\r\n                          collapseStringsAfterLength={20}\r\n                          displayDataTypes={true}\r\n                          displayObjectSize={true}\r\n                          enableClipboard={true}\r\n                          groupArraysAfterLength={100}\r\n                          indentWidth={4}\r\n                          iconStyle={\"triangle\"}\r\n                          name={this.props.rootName}\r\n                          quotesOnKeys={true} shouldCollapse={ false /*((field: CollapsedFieldProps) => { return Object.keys(field.src).length > 3;*/ }\r\n                          sortKeys={false}\r\n                          theme={\"rjv-default\"}\r\n        >{this.props.children}</ReactJson>;\r\n    };\r\n\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    data: GObject;\r\n    rootName?: string;\r\n}\r\n// private\r\ntype AllProps = OwnProps;\r\n/*\r\nif (!windoww.mycomponents) windoww.mycomponents = {};\r\nwindoww.mycomponents.DataOutput = DataOutputComponent;\r\nwindoww.mycomponents.DataOutputComponent = DataOutputComponent;*/\r\n////// mapper func\r\n\r\n","import React, {PureComponent, ReactNode} from \"react\";\r\nimport './logger.scss';\r\nimport {DataOutputComponent, DDate, Dictionary, GObject, Log, U, UnixTimestamp} from \"../../joiner\";\r\n\r\n// private\r\ninterface ThisState {\r\n    messages: Dictionary<string, Dictionary<string, any[]>>\r\n    filters: {category: ((cat: string) => boolean) | null, tag: ((tag: string) => boolean) | null, datafilter: ((data: any[]) => boolean) | null};\r\n    categoriesActive: Dictionary<string, boolean>;\r\n    searchTag: string;\r\n    searchTagAsRegExp: boolean;\r\n    id: number;\r\n    minDate: UnixTimestamp;\r\n    maxDate: UnixTimestamp;\r\n}\r\n\r\nexport class LoggerComponent extends PureComponent<AllProps, ThisState>{\r\n    public static loggers: LoggerComponent[] = [];\r\n    private static max_id: number = 0;\r\n    public static Log(category: string, key: string, data: any[]): void{\r\n        for (let logger of LoggerComponent.loggers) { logger.log(category, key, data); }\r\n    }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.state = {\r\n            id: LoggerComponent.max_id++,\r\n            messages: {},\r\n            searchTag: '',\r\n            searchTagAsRegExp: false,\r\n            categoriesActive: {},\r\n            minDate: DDate.addYear(new Date(), -1, true).getTime(),\r\n            maxDate: DDate.addYear(new Date(), +1, true).getTime(),\r\n            filters: {category: null, tag: null, datafilter: null}};\r\n        LoggerComponent.loggers.push(this);\r\n        Log.registerLogger(this, Log.e);\r\n    }\r\n\r\n    private isCatActive(cat: string): boolean {\r\n        return !!(this.state.categoriesActive[cat] && this.state.filters.category?.(cat));\r\n    }\r\n\r\n    private changeSearchTag = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        this.setState({...this.state, searchTag: e.target.value});\r\n    }\r\n    private changeRegexpTag = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, searchTagAsRegExp: e.target.checked});\r\n\r\n    }\r\n    private changeMinDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, minDate: new Date(e.target.value).getTime() });\r\n\r\n    }\r\n    private changeMaxDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, maxDate: new Date(e.target.value).getTime() });\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const allCategories: string[] = Object.keys(this.state.messages);\r\n        const activeCategories: string[] = allCategories.filter( cat => this.isCatActive(cat));\r\n        const allTags: string[] = U.arrayUnique(activeCategories.flatMap( (cat) => Object.keys(this.state.messages[cat])))\r\n        const activeTags: string[] = allTags.filter( (tag: string) => (this.state.searchTagAsRegExp ? tag.match(this.state.searchTag) : tag === this.state.searchTag));\r\n        return (<>\r\n            <div>\r\n                <h1>Search by tag</h1>\r\n                <datalist>\r\n                    { allTags.map(tag => <option key={tag} value={tag}>{tag}</option>) }\r\n                </datalist>\r\n                <input list={\"#logger_\" + this.state.id + \"_keylist\"} value={this.state.searchTag} onChange={ this.changeSearchTag } />\r\n                {/*<Input label={\"as RegExp\"} type=\"checkbox\" checked={this.state.searchTagAsRegExp} onChange={this.changeRegexpTag} />\r\n                <input label={\"from\"} type=\"datetime-local\" value={ new Date(this.state.minDate).toString()} onChange={this.changeMinDate} />\r\n                <input label={\"to\"} type=\"datetime-local\" value={ new Date(this.state.maxDate).toString()} onChange={this.changeMaxDate} /> */}\r\n            </div>\r\n            <ul className={\"categories\"}>\r\n                { allCategories.map((cat, i) => <li className={\"category cat_\"+ i + \" \" + cat} key={cat} data-active={this.isCatActive(cat)}>{cat}</li>) }\r\n            </ul>\r\n            <ul className={\"entries\"}>\r\n                {\r\n                    activeCategories.flatMap( (cat) => {\r\n                        return Object.keys(this.state.messages[cat]).map( (tag) => {\r\n                            let entries = this.state.messages[cat][tag]\r\n                            return <li><span className={\"tag\"}>{tag}</span>{\r\n                                entries.map( (parameter) => <span className=\"parameter\">\r\n                                    <DataOutputComponent data={parameter} rootName={tag} />\r\n                                </span>)\r\n                            }</li>;\r\n                        });\r\n                    })\r\n                }\r\n            </ul>\r\n        </>); }\r\n\r\n\r\n\r\n    public log = (category: string, key: string, data: any[], fullconcat?: string): void => {\r\n        if (!this.state.categoriesActive.hasOwnProperty(category)) {\r\n            this.setState({categoriesActive: { ...this.state.categoriesActive, category: true}});\r\n            const category: GObject = {};\r\n            category[key] = data;\r\n            this.setState({messages: { ...this.state.messages, category} });\r\n        }\r\n\r\n        const messages: GObject = { ...this.state.messages};\r\n        messages[category] = messages[category] ? { ...messages[category]} : {};\r\n        messages[category][key] = messages[category][key] ? [ ...messages[category][key], data] : [data];\r\n        this.setState( {messages});\r\n    }// .bind(this);\r\n\r\n    componentWillUnmount(): void {\r\n        U.arrayRemoveAll(LoggerComponent.loggers, this);\r\n    }\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const LoggerComponentConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoggerComponent);*/\r\n","import React, {CSSProperties, PureComponent, ReactChild, ReactNode} from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import {DState} from \"../../redux/store\";\r\nimport './overlap.scss';\r\n\r\n// private\r\ninterface ThisState {\r\n}\r\n\r\nexport class Overlap extends PureComponent<AllProps, ThisState>{\r\n    render(): ReactNode {\r\n        console.log('overlap childs:', this.props.children);\r\n        if (!this.props.children || !Array.isArray(this.props.children)) return this.props.children;\r\n        const children = this.props.children; // ? (Array.isArray(this.props.children) ? this.props.children : [this.props.children]) : [];\r\n        return (<>\r\n            {/*trouble on svg: G elements cannot be styled and rect cannot be nested, i cannot force a container to take size of children unless set size with plain js*/}\r\n            <div className={\"overlap-parent\" + (this.props.autosizex ? \" overlap-child-chooses-width\" : \"\") + (this.props.autosizex ? \" overlap-child-chooses-height\" : \"\")} style={{...this.props.style}}>\r\n                {React.Children.map(children, cc => {\r\n                        return <div className={\"overlap-child-wrapper\" + (!this.props.autosizex ? \" overlap-parent-chooses-width\" : \"\") + (!this.props.autosizey ? \" overlap-parent-chooses-height\" : \"\")}>{cc}</div>\r\n                    })}\r\n            </div>\r\n        </>); }\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    children: ReactChild[] | ReactChild;\r\n    // sizefollows: \"parent\" | \"child\";\r\n    autosizex?: boolean;\r\n    autosizey?: boolean;\r\n    style?: CSSProperties;\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n*/\r\n\r\n(Overlap as React.ComponentClass).defaultProps = {\r\n  autosizex: true,\r\n  autosizey: true,\r\n  style: undefined,\r\n  children: [],\r\n} as OwnProps; // todo: se esporto con connect fose devo farlo al risultato della connect\r\nexport default Overlap;\r\n/*connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Overlap);*/\r\n","import React, {Dispatch, PureComponent, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport type {DGraph, Dictionary, DocString, DState, Pointer} from \"../../joiner\";\r\nimport './defaultColorScheme.scss';\r\n\r\n// private\r\ninterface ThisState {\r\n}\r\n\r\nclass ColorSchemeComponent extends PureComponent<AllProps, ThisState>{\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        let userColorSchemeCss = '';\r\n        for (let graphid in this.props.userMadeColorScheme) {\r\n            userColorSchemeCss += \"\\n\\n #graph_\" + graphid + \"{ \\n\" + this.props.userMadeColorScheme[graphid] + \"\\n}\";\r\n        }\r\n        // NB: default styles are in scss file and are not editable.\r\n        return <style>{userColorSchemeCss}</style>; }\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromJSX_AsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    userMadeColorScheme: Dictionary<Pointer<DGraph>, DocString<'CSS variables'>>;\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.userMadeColorScheme = {};\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const ColorScheme = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ColorSchemeComponent);\r\nexport default ColorScheme;\r\n","import React, {ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DClassifier,\r\n    DEnumerator,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DPackage, DV,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    DState,\r\n    LModelElement,\r\n    Log,\r\n    LViewElement,\r\n    RuntimeAccessibleClass, SetRootFieldAction,\r\n    windoww,\r\n    Field, Graph, GraphVertex, Vertex, VoidVertex\r\n} from \"../../joiner\";\r\n// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\r\n\r\nconst superclass: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\n\r\n// private\r\nclass DefaultNodeStatee extends GraphElementStatee { }\r\n\r\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\r\n\r\n\r\n// Giordano: add ignore for webpack\r\n//@ts-ignore\r\nexport class DefaultNodeComponent<AllProps extends AllPropss = AllPropss, NodeState = DefaultNodeStatee> extends superclass<AllProps, NodeState>{\r\n\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps): GraphElementReduxStateProps {\r\n        let ret: GraphElementReduxStateProps = {} as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\r\n        // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\r\n        try{\r\n            GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n            (ret as any).skiparenderforloading = false;\r\n        } catch(e) {\r\n            (ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\r\n            /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp\r\n        Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});*/ }\r\n        return ret; }\r\n\r\n    constructor(props: AllProps, context: any) { super(props, context); }\r\n\r\n    render(): ReactNode {\r\n        if ((this.props as any).skiparenderforloading) {\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            windoww.bugged = this;\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime()); return <div>loading...</div>;}\r\n        const view: LViewElement = this.props.view;\r\n        const modelElement: LModelElement | undefined = this.props.data;\r\n        if (!view) { Log.exx({props: this.props, thiss:this}); }\r\n        // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\r\n\r\n        let componentMap: Dictionary<string, (props: GObject, children?: (string | React.Component)[]) => ReactElement> = windoww.components;\r\n        let dmodelMap: Dictionary<string, typeof DModelElement> = RuntimeAccessibleClass.classes as any;\r\n\r\n        let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\r\n        // console.log('dnode render', {props: {...this.props}, serializableProps});\r\n        let componentfunction: typeof Graph = null as any;\r\n        if (view.forceNodeType) {\r\n            switch (view.forceNodeType) {\r\n                default: Log.exDevv('unrecognized View.forceNodeType:' + view.forceNodeType, {view, modelElement});\r\n                return <div>dev error</div>\r\n                case \"Graph\": case \"GraphComponent\": componentfunction = Graph; break;\r\n                // case windoww.GraphElementComponent.name:\r\n                case windoww.VertexComponent.name: componentfunction = Vertex; break;\r\n                case windoww.FieldComponent.name: componentfunction = Field; break;\r\n                case windoww.GraphVertexComponent.name: componentfunction = GraphVertex; break; }\r\n            // console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\r\n            return componentfunction(serializableProps, this.props.children);}\r\n\r\n        if (modelElement?.className) switch(modelElement.className) {\r\n            case \"DModel\": componentfunction = Graph; break;\r\n            case \"DPackage\": componentfunction = GraphVertex; break;\r\n            case \"DClassifier\":\r\n            case \"DEnumerator\":\r\n            case \"DObject\":\r\n            case \"DClass\": componentfunction = Vertex; break;\r\n            case \"DAnnotation\":\r\n            case \"DAttribute\":\r\n            case \"DOperation\":\r\n            case \"DParameter\":\r\n            case \"DReference\":\r\n            case \"DEnumLiteral\":\r\n            case \"DValue\":\r\n            case \"DModelElement\": componentfunction = Field; break;\r\n            default:\r\n                Log.exDevv('invalid model class, add a case in the switch', {modelElement, view, dmodelMap, componentMap});\r\n                // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\r\n                // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\r\n                // return dmodel.defaultComponent(serializableProps, this.props.children);\r\n        } else componentfunction = VoidVertex; // model-less, VoidVertex\r\n\r\n        if (componentfunction) return componentfunction(serializableProps, this.props.children);\r\n        // errore: questoon passa gli id correttamente al sottoelemento vertex o field\r\n        return DV.errorView(\"Error: DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\");\r\n    }\r\n\r\n}\r\n\r\n// private\r\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\r\nclass DefaultNodeReduxStateProps  extends GraphElementReduxStateProps {}\r\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\r\ntype AllPropss = DefaultNodeOwnProps & DefaultNodeReduxStateProps & DefaultNodeDispatchProps;\r\n\r\n\r\nconst DefaultNodeConnected = connect<DefaultNodeReduxStateProps, DefaultNodeDispatchProps, DefaultNodeOwnProps, DState>(\r\n    DefaultNodeComponent.mapStateToProps,\r\n    DefaultNodeComponent.mapDispatchToProps\r\n)(DefaultNodeComponent as any);\r\n// export const Vertex = VertexConnected;\r\n\r\n\r\nexport const DefaultNode = (props: DefaultNodeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <DefaultNodeConnected {...{...props, children}} />; }\r\n","import React, {Dispatch, PureComponent, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// import './graph.scss';\r\nimport {DGraph, DModel, DPointerTargetable, DState, LGraph, LModel} from \"../../joiner\";\r\n\r\n\r\n// private\r\ninterface ThisState { }\r\n\r\nexport class GraphsContainerComponent extends PureComponent<AllProps, ThisState>{\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    // todo: per ogni vista crea un set di opzioni {enableAutocorrect: \"boolean(true)\", displayEdges: \"boolean(true)\", maximumGraphWidth: \"number(2000)\"} specificate dall\\'utente che deve specificare sia il tipo (Come se osse una funzione) che il valore predefinito\r\n    // il grafo deve leggere l'oggetto di opzioni e creare un menù che consente di cambiarle (una checkbox al posto dell'enableAutocorrect (bool), uno spinner per maximumGraphWidth (number...)\r\n\r\n    render(): ReactNode {\r\n        // const editinput = \"<input onChange={(e) => this.data.name = e.target.value } value={this.data.name} />\";\r\n        // const editinput = \"\";\r\n        // todo: rendi opzionale obj = this.data.id se non è specificato.\r\n        // const editinput = \"<Input obj={this.data.id} field={'name'} getter={val => val.toUpperCase()} setter={(val) => val.toLowerCase()} />\";\r\n        // \"<Input obj={this.data} field={'name'} getter={val => val.toUpperCase()} setter={(val) => val.toLowerCase()} />\";\r\n        return (<>\r\n            {\r\n                this.props.graphs.map( (m: LGraph) => (\r\n                    <>\r\n                        {/*<svg style={{backgroundColor: 'red'}}>\r\n                        <Overlap style={{width: '100px'}}>\r\n                            success, now i can test resize handler overlayed to content and dragndrop dnd\r\n                            <foreignObject className={\"rectangle\"} />\r\n                            <foreignObject className={\"ellipse\"} />\r\n                            <foreignObject className={\"point\"} />\r\n                        </Overlap>\r\n                        </svg><svg style={{backgroundColor: 'red'}}>\r\n                            <Overlap>\r\n                                <foreignObject className={\"rectangle\"} style={{width: '100px'}}/>\r\n                                <foreignObject className={\"ellipse\"} style={{width: '300px'}}/>\r\n                                <foreignObject className={\"point\"} />\r\n                            </Overlap>\r\n                        </svg>* /}\r\n                        <GraphElement data={m} />*/}\r\n                        {/*\r\n                            Giordano comment this problem with model's children\r\n                            <Graph graphid={m.id} data={m.model} view={undefined}>\r\n                                <Vertex data={m.model}/>\r\n                            </Graph>\r\n\r\n                        */}\r\n                        {this.props.children/*<QA />*/}\r\n                    </>)\r\n                )\r\n            }\r\n        </>); }\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    models: LModel[];\r\n    graphs: LGraph[];\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    console.log('mapStateToProps', {ret, state, ownProps, models: state.models})\r\n    ret.models = state.models.length ? state.models.map( (mid) => mid && DPointerTargetable.wrap(state.idlookup[mid] as DModel)) as LModel[] : [];\r\n    ret.graphs = state.graphs.length ? state.graphs.map( (mid) => mid && LGraph.wrap(state.idlookup[mid] as DGraph)) as LGraph[] : [];\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\n\r\nconst GraphsContainerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GraphsContainerComponent);\r\n\r\nexport const GraphsContainer = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphsContainerConnected {...{...props, children}} />; }\r\n\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {LGraphElement} from \"../../model/dataStructure\";\r\nimport Xarrow, {xarrowPropsType, Xwrapper} from \"react-xarrows\";\r\nimport {SetRootFieldAction} from \"../../redux/action/action\";\r\nimport {GObject, LClass, LReference, Selectors} from \"../../joiner\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport $ from \"jquery\";\r\n\r\nconst crypto = require(\"crypto\");\r\ninterface ThisState {}\r\nfunction EdgeComponent(props: AllProps, state: ThisState) {\r\n    const sourceNode = props.source;\r\n    let source: LClass|LReference|undefined = sourceNode.model as any;\r\n    const targetNode = props.target;\r\n    let target: LClass|LReference|undefined = targetNode.model as any;\r\n\r\n    const show = props.showAnchor;\r\n    const size = props.size;\r\n    const color = props.color;\r\n\r\n    const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\r\n\r\n    const firstOptions: xarrowPropsType = {\r\n        start: sourceNode.id, end: middleAnchor,\r\n        path: \"grid\", color: color, strokeWidth: size,\r\n        showHead: false, zIndex: 100\r\n    };\r\n    const lastOptions: xarrowPropsType = {\r\n        start: middleAnchor, end: targetNode.id,\r\n        path: \"grid\", color: color, strokeWidth: size, zIndex: 100\r\n    };\r\n\r\n    if(source?.className == \"DReference\") {\r\n        source = source as LReference;\r\n        firstOptions.start = source.father.nodes[0].id;\r\n        lastOptions.showHead = false;\r\n        if(source.containment) {\r\n            firstOptions.showTail = true;\r\n            firstOptions.tailSize = 15;\r\n            firstOptions.tailShape = {svgElem: <rect style={{\r\n                    rotate: \"45deg\", fill: \"white\", strokeWidth: \"0.1\", stroke: color,\r\n                }} width=\".5pt\" height=\".5pt\" />, offsetForward: 1};\r\n        }\r\n    }\r\n    if(source?.className == \"DClass\") {\r\n        source = source as LClass;\r\n        lastOptions.showHead = true;\r\n        lastOptions.headSize = 15;\r\n        lastOptions.headColor = 'white';\r\n        lastOptions.headShape = {svgElem:<svg><path strokeWidth={0.1} stroke={color} d=\"M 0 0 L 1 0.5 L 0 1 L 0 0 z\"/></svg>};\r\n    }\r\n\r\n    useEffectOnce(() => {\r\n        setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\r\n    })\r\n\r\n    useEffect(() => {\r\n        const middleware: GObject = $('[id=\"' + middleAnchor + '\"]');\r\n        if(middleware) {\r\n            middleware.draggable({\r\n                cursor: \"grabbing\",\r\n                containment: \"window\",\r\n                drag: function (event: GObject, obj: GObject) {\r\n                    SetRootFieldAction.new(\"dragging\", {})\r\n                }\r\n            });\r\n        }\r\n    })\r\n\r\n    const click = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        if(source) {\r\n            SetRootFieldAction.new('_lastSelected', {\r\n                node: sourceNode.id,\r\n                view: undefined,\r\n                modelElement: source.id\r\n            });\r\n        }\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const contextMenu = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return(<div onClick={click} onContextMenu={contextMenu}>\r\n        <div style={{borderColor: color}} id={middleAnchor} className={\"middle-anchor\"}></div>\r\n        <Xarrow {...firstOptions} />\r\n        <Xarrow {...lastOptions} />\r\n    </div>);\r\n}\r\ninterface OwnProps { source: LGraphElement; target: LGraphElement; }\r\ninterface StateProps { showAnchor: boolean, size: number, color: string }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    /*const edgeSettings = state._edgeSettings;\r\n    const showAnchor = false //edgeSettings.showAnchor;\r\n    const size = edgeSettings.strokeWidth;\r\n    const color = edgeSettings.color;\r\n    const ret: StateProps = { showAnchor, size, color };*/\r\n    return {} as any;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent);\r\n\r\nexport const Edge = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, children}} />;\r\n}\r\nexport default Edge;\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {LClass, LGraphElement, LModelElement, LReference, MyProxyHandler,} from \"../../joiner\";\r\nimport Edge from \"./Edge\";\r\n\r\n\r\ninterface ThisState {}\r\n\r\nfunction EdgesComponent(props: AllProps, state: ThisState) {\r\n    const me = props.source.model;\r\n    if(props.targets && props.targets.length <= 0) {\r\n        return <></>;\r\n    }\r\n    if(me?.className === \"DReference\") {\r\n        const lReference: LReference = me as any;\r\n        const lTarget: LModelElement = MyProxyHandler.wrap(lReference?.type);\r\n        return <>\r\n            {(props.targets) ? props.targets.map((targetNode) => {\r\n                return <Edge source={props.source} target={targetNode} />\r\n            }) : <Edges source={props.source} targets={(lTarget) ? lTarget.nodes : []} />}\r\n        </>;\r\n    }\r\n    if(me?.className === \"DClass\") {\r\n        const lClass: LClass = me as any;\r\n        if(lClass.extends.length > 0) {\r\n            const lTarget: LModelElement = MyProxyHandler.wrap(lClass?.extends[0]);\r\n            return <>\r\n                {(props.targets) ? props.targets.map((targetNode) => {\r\n                    return <Edge source={props.source} target={targetNode} />\r\n                }) : <Edges source={props.source} targets={(lTarget) ? lTarget.nodes : []} />}\r\n            </>;\r\n        }\r\n    }\r\n    return <></>;\r\n}\r\ninterface OwnProps { source: LGraphElement; targets?: LGraphElement[] }\r\ninterface StateProps {}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {};\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgesConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgesComponent);\r\n\r\nexport const Edges = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgesConnected {...{...props, children}} />;\r\n}\r\nexport default Edges;\r\n","import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex, Dictionary,\r\n    DVoidVertex, EdgeBendingMode, GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee, GraphPoint,\r\n    GraphSize,\r\n    DState,\r\n    LClass, LEdge, LGraphElement,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LUser,\r\n    LVoidVertex, Overlap,\r\n    RuntimeAccessibleClass,\r\n    U,\r\n    EdgeOwnProps, EdgeStateProps,\r\n    LViewPoint\r\n} from \"../../joiner\";\r\n\r\nlet groupingsize: Dictionary<EdgeBendingMode, number> = {} as any;\r\ngroupingsize[EdgeBendingMode.Line] = 1;\r\ngroupingsize[EdgeBendingMode.Bezier_quadratic] = 2;\r\ngroupingsize[EdgeBendingMode.Bezier_cubic] = 3;\r\ngroupingsize[EdgeBendingMode.Bezier_quadratic_mirrored] = 1;\r\ngroupingsize[EdgeBendingMode.Bezier_cubic_mirrored] = 2;\r\ngroupingsize[EdgeBendingMode.Elliptical_arc] = 2; // (1_coord), (rotation), (sweep    arc), (1_coord)\r\n\r\nconst superclassGraphElementComponent: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\nconst superclassGraphElementComponentuntyped: any = RuntimeAccessibleClass.classes.GraphElementComponent as any;\r\nclass ThisStatee extends GraphElementStatee {}\r\n\r\nexport class EdgeComponent<AllProps extends AllPropss = AllPropss, ThisState extends ThisStatee = ThisStatee>\r\n    extends superclassGraphElementComponent<AllProps, ThisState> {\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        let tobind: Function[] = []; //[this.path, this.pathSegments, this.pathCoords];\r\n        for (let tb of tobind) (this as GObject)[tb.name] = tb.bind(this);\r\n    }\r\n/*\r\n    path(): string {\r\n        let coords = this.pathCoords();\r\n        let svgletter: EdgeBendingMode = (this.props.view.bendingMode || \"L\");\r\n        let strings: string[] = coords.map(gp => gp.x+\" \" + gp.y);\r\n        return \"M\"+strings.join(\" \" + svgletter); }\r\n\r\n    pathCoords(): GraphPoint[] {\r\n        const ret = this.props;\r\n        let svgletter: EdgeBendingMode = (ret).view.bendingMode;\r\n        if (!ret.node) return []; // \"node missing\"\r\n        let coords: GraphPoint[] = (ret.node.midnodes as { x:number, y:number }[] as GraphPoint[]) || [];\r\n        let grouping = groupingsize[svgletter];\r\n        console.log(\"edgeee\", {coords, svgletter, groupingsize, midnodes:ret.node.midnodes, mnraw: ret.node.midnodes.map(mn=>mn.__raw), ret});\r\n        let scoord: GraphPoint = ret.node.startPoint || new GraphPoint(10, 10);\r\n        let ecoord: GraphPoint = ret.node.endPoint || new GraphPoint(100, 100);\r\n        return [scoord, ...coords, ecoord]; }\r\n\r\n    pathSegments(): GraphPoint[][]{\r\n        return U.pairArrayElements(this.pathCoords(), true); }\r\n*/\r\n    render(): ReactNode {\r\n        if (!this.props.node) return \"loading\";\r\n        // set classes\r\n        let nodeType = \"Edge\";\r\n        let classesoverride = [nodeType];\r\n        // set classes end\r\n        let styleoverride: React.CSSProperties = {}\r\n        return super.render(nodeType, styleoverride, classesoverride);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass DispatchProps extends GraphElementDispatchProps {\r\n}\r\n\r\ntype AllPropss = Overlap<Overlap<EdgeOwnProps, EdgeStateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: EdgeOwnProps): EdgeStateProps {\r\n    const ret: EdgeStateProps = new EdgeStateProps();\r\n    // superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\r\n    ret.isEdgePending = {\r\n        user: LPointerTargetable.from(state.isEdgePending.user),\r\n        source: LPointerTargetable.from(state.isEdgePending.source)\r\n    };\r\n    ret.viewpoint = LViewPoint.fromPointer(state.viewpoint);\r\n    let startnodeid = LGraphElement.getNodeId(ownProps.start);\r\n    let endnodeid = LGraphElement.getNodeId(ownProps.end);\r\n    ret.start = LPointerTargetable.fromPointer(startnodeid);\r\n    ret.end = LPointerTargetable.fromPointer(endnodeid);\r\n    // ret.key = ownProps.key || (startnodeid || (ownProps.start as any)?.id || ownProps.start) + \"~\" + (endnodeid || (ownProps.end as any)?.id || ownProps.end);\r\n    // key is already used as key || nodeid on super.render()\r\n    // console.log(\"edge\", {ret, ownProps});\r\n\r\n    const superret: EdgeStateProps = GraphElementComponent.mapStateToProps(state, ownProps, DEdge, ret) as EdgeStateProps;\r\n    // U.objectMergeInPlace(superret, ret);\r\n    // U.removeEmptyObjectKeys(superret);\r\n    // console.error(superret, ret); throw Error(\"aaa\");\r\n    return superret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const superret: GraphElementDispatchProps = GraphElementComponent.mapDispatchToProps(dispatch);\r\n    const ret: GraphElementDispatchProps = new GraphElementDispatchProps();\r\n    U.objectMergeInPlace(superret, ret);\r\n    U.removeEmptyObjectKeys(superret);\r\n    return superret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<EdgeStateProps, DispatchProps, EdgeOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent as any);\r\n\r\nexport const DamEdge = (props: EdgeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, children}} isGraph={false} isVertex={true} />;\r\n}\r\n","import {OCLEditorAce} from \"../components/forEndUser/OCLEditor\";\r\n\r\nexport {OclEditor} from \"../components/rightbar/oclEditor/OclEditor\";\r\nexport {OCLEditorAce} from \"../components/forEndUser/OCLEditor\"\r\n\r\n\r\nexport {Input} from \"../components/forEndUser/Input\";\r\nexport {TextArea} from \"../components/forEndUser/TextArea\";\r\nexport {Select} from \"../components/forEndUser/Select\";\r\nexport {Image} from \"../components/forEndUser/Image\";\r\nexport {Edge} from \"../components/forEndUser/Edge\";\r\n\r\n\r\nexport {DataOutputComponent} from \"../components/logger/DataOutput\";\r\nexport {LoggerComponent} from \"../components/logger/loggerComponent\";\r\n\r\n/// import components that must save themselves to global variable to be accessible for user\r\n\r\nexport {Overlap} from \"../components/forEndUser/Overlap\";\r\nexport {ColorScheme} from \"../components/colorScheme/colorScheme\";\r\nexport {GraphElement, GraphElementComponent} from \"../graph/graphElement/graphElement\";\r\n// export {Graph, GraphComponent} from \"../graph/graph/graph\"; // require graphelement\r\n// export {Graph} from \"../graph/vertex/Vertex\"; // require graphelement\r\nexport {DefaultNode, DefaultNodeComponent} from \"../graph/defaultNode/DefaultNode\"; // require graphelement\r\nexport {Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent} from \"../graph/vertex/Vertex\"; // require overlap, graphelement\r\nexport {GraphsContainer, GraphsContainerComponent} from \"../graph/graph/graphContainer\"; // require vertex, graph\r\n//export {DockLayoutComponent} from \"../components/abstract/DockLayoutComponent\";\r\nexport {Edges} from \"../graph/edge/Edges\";\r\nexport {DamEdge, EdgeComponent,} from \"../graph/damedges/damedge\";\r\n\r\n\r\n\r\n\r\nconsole.info('components loaded');\r\n","// import * as detectzoooom from 'detect-zoom'; alternative: https://www.npmjs.com/package/zoom-level\r\nimport React, {ReactElement} from \"react\";\r\n// import {Mixin} from \"ts-mixer\";\r\nimport type {AbstractConstructor, Constructor, Dictionary, GObject, Pointer, Temporary} from \"../joiner\";\r\nimport {\r\n    CreateElementAction,\r\n    DAttribute,\r\n    DClassifier,\r\n    DLog,\r\n    DModelElement,\r\n    DPointerTargetable,\r\n    DRefEdge,\r\n    DReference,\r\n    GraphPoint,\r\n    DState,\r\n    DUser,\r\n    LUser,\r\n    Json,\r\n    JsType,\r\n    LClassifier,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LNamedElement,\r\n    LogicContext,\r\n    MyError,\r\n    RuntimeAccessible,\r\n    Selectors,\r\n    TODO,\r\n    windoww\r\n} from \"../joiner\";\r\nimport Swal from \"sweetalert2\";\r\n// import KeyDownEvent = JQuery.KeyDownEvent; // https://github.com/tombigel/detect-zoom broken 2013? but works\r\n\r\nconsole.warn('loading ts U log');\r\n\r\n\r\n@RuntimeAccessible\r\nexport class U {\r\n\r\n    public static fatherChain(me: LModelElement): Pointer<DModelElement, 0, 'N', LModelElement> {\r\n        const fathers: Pointer<DModelElement, 0, 'N', LModelElement>= [me.id];\r\n        const toCheck: LModelElement[] = [me];\r\n        while(toCheck.length > 0) {\r\n            const element = toCheck.pop();\r\n            if(element && element.father) {\r\n                fathers.push(element.father.id);\r\n                toCheck.push(element.father);\r\n            }\r\n        }\r\n        return fathers;\r\n    }\r\n\r\n    public static deepEqual (x: GObject, y: GObject): boolean {\r\n        const ok = Object.keys, tx = typeof x, ty = typeof y;\r\n        return x && y && tx === 'object' && tx === ty ? (\r\n            ok(x).length === ok(y).length &&\r\n            ok(x).every(key => U.deepEqual(x[key], y[key]))\r\n        ) : (x === y);\r\n    }\r\n\r\n    public static sleep(s: number): Promise<void> {\r\n        return new Promise((resolve) => setTimeout(resolve, s * 1000));\r\n    }\r\n\r\n    public static getDefaultViewsID(): string[] {\r\n        const views: string[] = []\r\n        views.push('Pointer_ViewModel');\r\n        views.push('Pointer_ViewPackage');\r\n        views.push('Pointer_ViewClass');\r\n        views.push('Pointer_ViewEnum');\r\n        views.push('Pointer_ViewAttribute');\r\n        views.push('Pointer_ViewReference');\r\n        views.push('Pointer_ViewOperation');\r\n        views.push('Pointer_ViewLiteral');\r\n        views.push('Pointer_ViewObject');\r\n        views.push('Pointer_ViewValue');\r\n        views.push('Pointer_ViewDefaultPackage');\r\n        return views;\r\n    }\r\n\r\n\r\n    public static getRandomString(length: number): string {\r\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n        let randomString = '';\r\n        let index = 0;\r\n        while(index < length) {\r\n            const randomNumber = Math.floor(Math.random() * characters.length);\r\n            randomString += characters.charAt(randomNumber);\r\n            index += 1;\r\n        }\r\n        return randomString;\r\n    }\r\n\r\n    public static alert(title: string, text: string) {\r\n        let color = 'text-';\r\n        switch(title.toLowerCase()) {\r\n            case 'error': color += 'danger'; break;\r\n            default: color += 'primary'\r\n        }\r\n        let html = '<style>body.swal2-no-backdrop .swal2-container {background-color: rgb(0 0 0 / 60%) !important}</style>';\r\n        html += `<div><b><label class='fs-5 mb-2 text-uppercase ${color}'>${title}</label></b><hr/>`;\r\n        html += `<label class='fs-6 mt-3'>${text}</label><br/>`;\r\n        const result = Swal.fire({\r\n            html: html,\r\n            backdrop: false,\r\n            showCloseButton: true,\r\n            showConfirmButton: false\r\n            //confirmButtonText: 'GOT IT'\r\n        })\r\n    }\r\n\r\n    public static popup(element: any) {\r\n        let html = '<style>body.swal2-no-backdrop .swal2-container {background-color: rgb(0 0 0 / 60%) !important}</style>'+ element;\r\n        const result = Swal.fire({\r\n            html: html,\r\n            backdrop: false,\r\n            showCloseButton: true,\r\n            showConfirmButton: false\r\n            //confirmButtonText: 'GOT IT'\r\n        })\r\n    }\r\n    public static filteredPointedBy(data: LModelElement, label: string): LModelElement[] {\r\n        const models: LModelElement[] = [];\r\n        for(let dict of data.pointedBy) {\r\n            const pointedBy = dict.source.split('.');\r\n            if(pointedBy.length === 3 && pointedBy[2] === label) {\r\n                models.push(LModelElement.fromPointer(pointedBy[1]));\r\n            }\r\n        }\r\n        return models;\r\n    }\r\n\r\n    public static getFatherFieldToDelete(data: LModelElement): keyof DModelElement|null {\r\n        const father = data.father;\r\n        let field = '';\r\n        switch(father.className + '|' + data.className) {\r\n            // DPackage\r\n            case 'DModel|DPackage': field = 'packages'; break;\r\n            case 'DPackage|DPackage': field = 'subpackages'; break;\r\n            // DEnumerator and DClass\r\n            case 'DPackage|DEnumerator':\r\n            case 'DPackage|DClass': field = 'classifiers'; break;\r\n            // DAttribute\r\n            case 'DClass|DAttribute': field = 'attributes'; break;\r\n            // DReference\r\n            case 'DClass|DReference': field = 'references'; break;\r\n            // DOperation\r\n            case 'DClass|DOperation': field = 'operations'; break;\r\n            // DEnumLiteral\r\n            case 'DEnumerator|DEnumLiteral': field = 'literals'; break;\r\n            // DObject\r\n            case 'DModel|DObject': field = 'objects'; break;\r\n            // DParameter\r\n            case 'DOperation|DParameter': field = 'parameters'; break;\r\n            // DValue\r\n            case 'DObject|DValue': field = 'features'; break;\r\n            // Error\r\n            default: return null;\r\n        }\r\n        return field as keyof DModelElement;\r\n    }\r\n\r\n    public static getReduxFieldToDelete(data: LModelElement): keyof DState|null {\r\n        let field = '';\r\n        switch(data.className) {\r\n            // DPackage\r\n            case 'DPackage': field = 'packages'; break;\r\n\r\n            // DClass\r\n            case 'DClass': field = 'classs'; break;\r\n            // DEnumerator\r\n            case 'DEnumerator': field = 'enumerators'; break;\r\n            // DAttribute\r\n            case 'DAttribute': field = 'attributes'; break;\r\n            // DReference\r\n            case 'DReference': field = 'references'; break;\r\n            // DOperation\r\n            case 'DOperation': field = 'operations'; break;\r\n            // DParameter\r\n            case 'DParameter': field = 'parameters'; break;\r\n            // DEnumLiteral\r\n            case 'DEnumLiteral': field = 'enumliterals'; break;\r\n            // DObject\r\n            case 'DObject': field = 'objects'; break;\r\n            // DValue\r\n            case 'DValue': field = 'values'; break;\r\n\r\n            // Error\r\n            default: return null;\r\n        }\r\n        return field as keyof DState;\r\n    }\r\n\r\n    public static initializeValue(typeclassifier: undefined|DClassifier|LClassifier|Pointer<DClassifier, 1, 1, LClassifier>): string {\r\n        // if(!classifier) return 'null';\r\n        const pointer: Pointer = typeof typeclassifier === 'string' ? typeclassifier : (typeclassifier as DClassifier)?.id;\r\n        const me: LNamedElement = LNamedElement.fromPointer(pointer);\r\n        switch(me?.name) {\r\n            default:\r\n            case 'EString': return '';\r\n            case 'EChar':  return 'a';\r\n            case 'EInt': return '0';\r\n            case 'ELong': return '0';\r\n            case 'EShort': return '0';\r\n            case 'Byte': return '0';\r\n            case 'EFloat': return '0';\r\n            case 'EDouble': return '0';\r\n            case 'EBoolean': return 'false';\r\n            case 'EDate': return new Date().toJSON().slice(0,10);\r\n        }\r\n        return 'null';\r\n    }\r\n\r\n    public static orderChildrenByTimestamp(context: LogicContext): LModelElement[] {\r\n        const children = context.proxyObject.children;\r\n        if(children && children.length > 0) {\r\n            let orderedChildren = new Map<number, LModelElement>();\r\n            for(let child of children) {\r\n                let timestamp = child.id.slice(-13);\r\n                orderedChildren.set(+timestamp, child);\r\n            }\r\n            orderedChildren = new Map([...orderedChildren.entries()].sort());\r\n            return [...orderedChildren.values()];\r\n        } else return [];\r\n    }\r\n\r\n\r\n    public static followPath(base: GObject, path: string): {chain: GObject[], lastObject: GObject, keys:string[], lastkey: string, lastval: any, failedRemainingPath: string[]} {\r\n        let patharr = path.split('.');\r\n        let base0 = base;\r\n        let ret: {chain: GObject[], lastObject: GObject, keys: string[], lastkey: string, lastval: any, failedRemainingPath: string[]}  = {} as any;\r\n        ret.keys = patharr;\r\n        ret.chain = [base];\r\n        let lastObject = base;\r\n\r\n        for (let i = 0; i < patharr.length; i++) {\r\n            let path = ret.lastkey = patharr[i];\r\n            lastObject = base;\r\n            base = base[path];\r\n            ret.chain.push(base);\r\n            if (typeof base !== \"object\" || i + 1 === patharr.length) {\r\n                ret.failedRemainingPath = patharr.slice(i);\r\n                ret.lastval = base;\r\n                ret.lastObject = lastObject;\r\n                return ret;\r\n            }\r\n        }\r\n        throw new Error(\"followPath should never reach here\");\r\n        return ret;\r\n    }\r\n\r\n    static multiReplaceAllKV(a: string, kv: string[][] = []): string {\r\n        const keys: string[] = [];\r\n        const vals: string[] = [];\r\n        let i: number;\r\n        for (i = 0; i < kv.length; i++) { keys.push(kv[i][0]); vals.push(kv[i][0]); }\r\n        return U.multiReplaceAll(a, keys, vals); }\r\n\r\n    static multiReplaceAll(a: string, searchText: string[] = [], replacement: string[] = []): string {\r\n        Log.ex(searchText.length !== replacement.length, 'search and replacement must be have same length: ' + searchText.length + \"vs\" + replacement.length + \" \" +JSON.stringify(searchText) + \"   \" + JSON.stringify(replacement));\r\n        let i = -1;\r\n        while (++i < searchText.length) { a = U.replaceAll(a, searchText[i], replacement[i]); }\r\n        return a; }\r\n\r\n    static replaceAll(str: string, searchText: string, replacement: string, debug: boolean = false, warn: boolean = true): string {\r\n        if (!str) { return str; }\r\n        return str.split(searchText).join(replacement); }\r\n\r\n    static toFileName(a: string = 'nameless.txt'): string {\r\n        if (!a) { a = 'nameless.txt'; }\r\n        a = U.multiReplaceAll(a.trim(), ['\\\\', '//', ':', '*', '?', '<', '>', '\"', '|'],\r\n            ['[lslash]', '[rslash]', ';', '°', '_', '{', '}', '\\'', '!']);\r\n        return a;\r\n    }\r\n\r\n\r\n    // warn: this check if the scope containing the function is strict, to check if a specific external scope-file is strict\r\n    // you have to write inline the code:        var isStrict = true; eval(\"var isStrict = false\"); if (isStrict)...\r\n    // @ts-ignore\r\n    public static isStrict: boolean = ( function() { return !this; })();\r\n\r\n    // merge properties with first found first kept (first parameters have priority on override). only override null|undefined values, not (false|0|'') values\r\n    static objectMergeInPlace<A extends object, B extends object>(output: A, ...objarr: B[]): void {\r\n        const out: GObject = output;\r\n        for (let o of objarr) for (let key in o) {\r\n            // noinspection BadExpressionStatementJS,JSUnfilteredForInLoop\r\n            out[key] ?? (out[key] = o[key]);\r\n        }\r\n    }\r\n\r\n    public static log(log: any) {\r\n        console.clear();\r\n        console.log(\"###\", log);\r\n    }\r\n\r\n    static removeEmptyObjectKeys(obj: GObject): void{\r\n        for (let key of Object.keys(obj)) {\r\n            if (obj[key] === null || obj[key] === undefined) delete obj[key];\r\n        }\r\n    }\r\n\r\n    // usage example: objectMergeInPlace_conditional(baseobj, (out, key, current) => !out[key] && current[key];\r\n    // culprit of \"couldn't find intersection\" problem: condition type: (out:A&B, key: string | number, current:B, objarr?: B[], indexOfCurrent?: number) => boolean\r\n    static objectMergeInPlace_conditional<A extends GObject, B extends GObject>(output: A, condition: (...a:any)=>any, ...objarr: B[]): A & B {\r\n        const out: GObject<\"A & B\"> = output;\r\n        let i: number = 0;\r\n        for (let o of objarr) for (let key in o) { if (condition(out, key, o, objarr, i++)) out[key] = o[key]; }\r\n        return out as  A & B; }\r\n\r\n    static buildFunctionDocumentation(f: Function): {parameters: {name: string, defaultVal: string | undefined, typedesc: string | null}[], returns: string | undefined, f: Function, fname: string | undefined, isLambda: boolean, signature: string} {\r\n        Log.e(!JsType.isFunction(f), 'getFunctionSignature() parameter must be a function');\r\n        // let parameters: {name: string, defaultVal: string, typedesc: string}[] = []; //{name: '', defaultVal: undefined, typedesc: ''};\r\n        let ret: {parameters: {name: string, defaultVal: string | undefined, typedesc: string | null}[], returns: string | undefined, f: Function, fname: string | undefined, isLambda: boolean, signature: string}\r\n            = {parameters: [], returns: undefined, f: f, fname: undefined, isLambda: null as Temporary, signature: ''};\r\n        let str: string = f.toString();\r\n        let starti: number = str.indexOf('(');\r\n        let endi: number;\r\n        let parcounter: number = 1;\r\n        for (endi = starti + 1; endi < str.length; endi++) {\r\n            if (str[endi] === ')' && --parcounter === 0) break;\r\n            if (str[endi] === '(') parcounter++; }\r\n\r\n        let parameterStr = str.substring(starti + 1, endi);\r\n        // console.log('getfuncsignature starti:', starti, 'endi', endi, 'fname:', str.substr(0, starti), 'parameterStr:', parameterStr);\r\n        ret.fname = str.substr(0, starti).trim();\r\n        ret.fname = ret.fname.substr(0, ret.fname.indexOf(' ')).trim();\r\n        // 2 casi: anonimo \"function (par1...){}\" e \"() => {}\", oppure nominato: \"function a1(){}\"\r\n        if (ret.fname === '' || ret.fname === 'function') ret.fname = undefined; // 'anonymous function';\r\n\r\n\r\n\r\n        let returnstarti: number = str.indexOf('/*', endi + 1);\r\n        let returnendi: number = -1;\r\n        let bodystarti: number = str.indexOf('{', endi + 1);\r\n        if (returnstarti === -1 || bodystarti !== -1 && bodystarti < returnstarti) {\r\n            // no return type or comment is past body\r\n            ret.returns = undefined;\r\n        } else {\r\n            returnendi = str.indexOf('*/', returnstarti + 2);\r\n            ret.returns = str.substring(returnstarti + 2, returnendi).trim();\r\n            bodystarti = str.indexOf('{', returnendi); }\r\n        if (ret.returns === '') ret.returns = undefined;\r\n\r\n        // is lambda if do not have curly body or contains => between return comment and body\r\n        // console.log('isLambda:', bodystarti, str.substring(Math.max(endi, returnendi)+1, bodystarti));\r\n        ret.isLambda =  bodystarti === -1 || str.substring((window as any).Math.max(endi, returnendi)+1, bodystarti).trim() === '=>';\r\n\r\n        let regexp = /([^=\\/\\,]+)(=?)([^,]*?)(\\/\\*[^,]*?\\*\\/)?,/g; // only problem: the last parameter won't match because it does not end with \",\", so i will append it everytime.\r\n        let match;\r\n        while ((match = regexp.exec(parameterStr + ','))) {\r\n            // match[0] is always the full match (not a capture group)\r\n            // match[2] can only be \"=\" or empty string\r\n            // nb: match[4] can be \"/*something*/\" or \",\" a single , without spaces.\r\n            let par: {name: string, defaultVal: string | undefined, typedesc: string | null} = {name: match[1], defaultVal: match[3], typedesc: match[4] && match[4].length > 1 ? match[4] : null};\r\n            par.name = par.name.trim();\r\n            par.defaultVal = par.defaultVal ? par.defaultVal.trim() : undefined;\r\n            par.typedesc = par.typedesc && par.typedesc && par.typedesc.length > 1 ? par.typedesc.substring(2, par.typedesc.length - 2).trim() || null : null;\r\n            ret.parameters.push(par); }\r\n        // set signature\r\n\r\n        ret.signature = '' + (ret.fname ? '/*' + ret.fname + '*/' : '') + '(';\r\n        let i: number;\r\n        for (i = 0; i < ret.parameters.length; i++) {\r\n            let par = ret.parameters[i];\r\n            ret.signature += (i === 0 ? '' : ', ') + par.name + (par.typedesc ? '/*' + par.typedesc + '*/' : '') + (par.defaultVal ? ' = ' + par.defaultVal : '');\r\n        }\r\n        ret.signature += ')' + (ret.returns ? '/*' + ret.returns + '*/' : '');\r\n        return ret; }\r\n\r\n    // warn: if return is not explicitly inserted (if that's the case set imlicitReturn = false) with a scope and the code have multiple statemepts it will fail.\r\n    // can modify scope AND context\r\n    // warn: can access external scope (from the caller)\r\n    // if the context (this) is missing it will take the scope as context.\r\n    // warn: cannot set different scope and context, \"this\" della funzione sovrascrive anche il \"this\" interno allo scope come chiave dell'oggetto\r\n    // warn: if you modify\r\n    public static evalInContextAndScope<T = any>(codeStr: string, scope?: GObject, context?: GObject): T {\r\n        // console.log('evalInContextAndScope', {codeStr, scope, context});\r\n        // scope per accedere a variabili direttamente \"x + y\"\r\n        // context per accedervi tramite this, possono essere impostati come diversi.\r\n        if (!scope && !context) { Log.ex(true, 'evalInContextAndScope: must specify at least one of scope || context', {codeStr, scope, context}); }\r\n        if (!context) context = scope; // se creo un nuovo contesto pulisco anche lo scope dalle variabili locali di questa funzione.\r\n\r\n        // scope.this = scope.this || context || scope; non funziona\r\n        // console.log('\"with(this){ return eval( \\'\" + codeStr + \"\\' ); }\"', \"with(this){ return eval( '\" + codeStr + \"' ); }\");\r\n        // eslint-disable-next-line no-restricted-syntax,no-with\r\n        // if (allowScope && allowContext) { return function(){ with(this){ return eval( '\" + codeStr + \"' ); }}.call(scopeAndContext); }\r\n        // if (allowScope && allowContext) { return new Function( \"with(this){ return eval( '\" + codeStr + \"' ); }\").call(scopeAndContext); }\r\n        let _ret: T = null as any;\r\n        if (context) context = {...context, __proto__: context.__proto__};\r\n        if (scope) scope = {...scope, __proto__: scope.__proto__};\r\n        const _eval = {codeStr, context, scope};\r\n\r\n        /*\r\n        if (allowScope && allowContext) { return new Function( \"with(this){ return eval( '\" + codeStr.replace(/'/g, \"\\\\'\") + \"' ); }\").call(scopeAndContext); }\r\n        if (!allowScope && allowContext) { return new Function( \"return eval( '\" + codeStr + \"' );\").call(scopeAndContext); }\r\n        if (allowScope && !allowContext) { return eval(\"with(scopeAndContext){ \" + codeStr + \" }\"); }*/\r\n//      U.pe(!!scope && U.isStrict(), 'cannot change scope while in strict mode (\"use strict\")');\r\n        let prefixDeclarations: string = \"\", postfixDeclarations: string = '';\r\n        if (scope) {\r\n            if (U.isStrict) {\r\n                for (let key in scope) {\r\n                    // anche se li assegno non cambiano i loro valori nel contesto fuori dall'eval, quindi lancio eccezioni con const.\r\n                    prefixDeclarations += \"const \" + key + \" = this.\" + key + \"; \";\r\n                    postfixDeclarations = \"\";\r\n                }\r\n            } else {\r\n                prefixDeclarations = \"with(\" + (context ? \"this._eval.\" : \"\") + \"scope){ \";\r\n                postfixDeclarations = \" }\";\r\n            }\r\n        }\r\n        if (scope && context) {\r\n            (context as any)._eval = _eval;\r\n            //console.log('pre eval jsx:', context, 'body:', {codeStr, Input: windoww.Input});\r\n            _ret = new (Function as any)(prefixDeclarations + \"return eval( this._eval.codeStr );\" + postfixDeclarations).call(context);\r\n            delete (context as any)._eval; } else\r\n        if (!scope && context) { _ret = new (Function as any)( \"return eval( this._eval._codeStr );\").call(context); } else\r\n        if (scope && !context) {\r\n            // NB: potrei creare lo scope con \"let key = value;\" per ogni chiave, ma dovrei fare json stringify e non è una serializzazione perfetta e può dare eccezioni(circolarità)\r\n            // console.log({isStrict: U.isStrict, eval: \"eval(\" + prefixDeclarations + codeStr + postfixDeclarations + \")\"});\r\n            _ret = eval(prefixDeclarations + codeStr + postfixDeclarations); }\r\n        return _ret; }\r\n\r\n    //T extends ( ((...args: any[]) => any) | (() => any)\r\n    public static execInContextAndScope<T extends (...args: any) => any>(func: T, parameters: Parameters<T>, scope?: GObject, context?: GObject): ReturnType<T>{\r\n        Log.l(false, 'execInCtxScope', {func, parameters, scope, context});\r\n        let ret: any;\r\n        const _eval = {context, scope, func, parameters: parameters || []};\r\n        let prefixDeclarations: string = \"\", postfixDeclarations: string = '';\r\n        if (scope) {\r\n            if (U.isStrict) {\r\n                for (let key in scope) {\r\n                    // anche se li assegno non cambiano i loro valori nel contesto fuori dall'eval, quindi lancio eccezioni con const.\r\n                    prefixDeclarations += \"const \" + key + \" = this.\" + key + \"; \";\r\n                    postfixDeclarations = \"\";\r\n                }\r\n            } else {\r\n                prefixDeclarations = \"with(\" + (context ? \"this._eval.\" : \"\") + \"scope){ \";\r\n                postfixDeclarations = \" }\";\r\n            }\r\n        }\r\n        if (!scope && !context) { Log.ex(true, 'execInContextAndScope: must specify at least one of scope || context', {func, scope, context}); }\r\n        if (!context) context = scope; // se creo un nuovo contesto pulisco anche lo scope dalle variabili locali di questa funzione.\r\n        if (scope && context) {\r\n            context._eval = _eval;\r\n            // will the scope work with \"with\" outside the function body?\r\n            ret = new Function( prefixDeclarations + \"return this._eval.func.apply(this._eval.context, this._eval.parameters);\" + postfixDeclarations).call(context);\r\n            delete context._eval;\r\n        }\r\n        if (!scope && context) { return _eval.func.apply(_eval.context, _eval.parameters); }\r\n        if (scope && !context) {\r\n            // todo: non credo funzioni, _eval non dovrebbe essere accessibile dopo la \"with\" forse devo fare scope._eval = _eval;\r\n            return eval(prefixDeclarations + \"return _eval.func(..._eval.parameters);\" + postfixDeclarations); }\r\n        return ret; }\r\n\r\n    // warn: aggiunge un layer di scope ma ha accesso anche agli scope precedenti (del chiamante della funzione e superiori)\r\n    // warn2: può modificare lo scope internamente all'eval ma ogni cambiamento è perso all'uscita dell'esecuzione (modifica copie)\r\n    // warn3: gli oggetti nested variabili dentro oggetti dello scope) sono modificabili con modifiche persistenti perchè vengono pasate per puntatore.\r\n    // warn4: richiede un return per leggere il valore\r\n    // insomma: sta funzione fa schifo ma non c'è di meglio e non puoi nè permettere nè vietare completamente le modifiche allo scope.\r\n    private static execInScope_DO_NOT_USE(codeStr: string, scope: GObject) {\r\n        return (new Function(...Object.keys(scope), codeStr))(...Object.values(scope));\r\n    }\r\n\r\n    // can modify context in-place, requires \"this\" before variable\r\n    private static evalInContext(js: string, context: GObject): unknown {\r\n        //# Return the results of the in-line anonymous function we .call with the passed context\r\n        return function() { return eval(js); }.call(context);\r\n    }/*\r\n    / *\r\n    // NO: ha 2 problemi: il contesto non è persistente e puoi accedere al contesto solo con \"this\" ma non direttamente usando i nomi delle variabili\r\n    public static evalInContext(contextObj: GObject, code: string): any{\r\n        return U.evalContextFunction.call(contextObj || {}, code);\r\n    }\r\n\r\n    // only create a context for \"this\", wich is bound by .call(), should never be called without .call()\r\n    private static evalContextFunction(code: string): any { eval(code); }\r\n*/\r\n    public static highOrderFunctionExampleTyped<T extends (...args: any[]) => ReturnType<T>>(func: T): (...funcArgs: Parameters<T>) => ReturnType<T> {\r\n        const funcName = func.name;\r\n\r\n        // Return a new function that tracks how long the original took\r\n        return (...args: Parameters<T>): ReturnType<T> => {\r\n            console.time(funcName);\r\n            const results = func(...args);\r\n            console.timeEnd(funcName);\r\n            return results; };\r\n    }\r\n\r\n    static asClass<T extends Function>(obj: any, classe: T, elseReturn: T | null = null): null | T { return obj instanceof classe ? obj as any as T: elseReturn; }\r\n    static asString<T>(propKey: unknown, elseReturn: T | null = null): string | null | T { return typeof propKey === 'string' ? propKey : elseReturn; }\r\n    static isString(propKey: unknown): boolean { return typeof propKey === 'string'; }\r\n\r\n    static loadScript(path: string, useEval: boolean = false): void {\r\n        const script = document.createElement('script');\r\n        script.src = path;\r\n        script.type = 'text/javascript';\r\n        Log.eDev(useEval, 'loadScript', 'useEval','useEval todo. potrebbe essere utile per avviare codice fuori dalle funzioni in futuro.');\r\n        document.body.append(script); }\r\n\r\n    static ancestorArray<T extends Element>(domelem: T, stopNode?: Node, includeSelf: boolean = true): Array<T> {\r\n        // [0]=element, [1]=father, [2]=grandfather... [n]=document\r\n        if (domelem === null || domelem === undefined) { return []; }\r\n        const arr = includeSelf ? [domelem] : [];\r\n        let tmp: T = domelem.parentNode as T;\r\n        while (tmp !== null && tmp !== stopNode) {\r\n            arr.push(tmp);\r\n            tmp = tmp.parentNode as T; }\r\n        return arr; }\r\n\r\n    static toHtml<T extends Element>(html: string, container?: Element, containerTag: string = 'div'): T {\r\n        if (!container) { container = document.createElement(containerTag); }\r\n        Log.e(!html || html === '', 'toHtml', 'require a non-empty string', html);\r\n        container.innerHTML = html;\r\n        const ret: T = container.firstChild as any;\r\n        if (ret) container.removeChild(ret);\r\n        return ret; }\r\n\r\n    public static levenshtein(a: string, b: string): number {\r\n        if (!a.length) return b.length;\r\n        if (!b.length) return a.length;\r\n        let cost = (a.charAt(a.length - 1) === b.charAt(b.length - 1)) ? 0 : 1;\r\n        return (window as any).Math.min(\r\n            U.levenshtein(a.substring(0, a.length - 1), b) + 1,\r\n            U.levenshtein(a, b.substring(0, b.length - 1)) + 1,\r\n            U.levenshtein(a.substring(0, a.length - 1), b.substring(0, b.length - 1)) + cost,\r\n        );\r\n    }\r\n\r\n    public static getClosestPropertyName(names: string[], name: string): string {\r\n        let lowest = Infinity;\r\n        return names.reduce(function(previous, current) {\r\n            let distance = U.levenshtein(current, name);\r\n            if (distance < lowest) {\r\n                lowest = distance;\r\n                return current;\r\n            }\r\n            return previous;\r\n        }, '');\r\n    }\r\n    public static getClosestPropertyNames(names: string[], name: string): string[] {\r\n        let distances: {distance: number, value: string}[] = names.map( value => { return {distance: U.levenshtein(value, name), value}; });\r\n        return distances.sort( (a, b) => a.distance - b.distance).map( e => e.value);\r\n    }\r\n\r\n    //todo for console\r\n    public static autoCorrectProxy<T extends GObject>(target: T, recursive: boolean, logger: Console): ProxyHandler<T> {\r\n        return new Proxy(target, {\r\n            get: function(target, name) {\r\n                let namestr = U.asString(name, null);\r\n                if (!namestr) return undefined;\r\n                if (name in target) return target[namestr];\r\n                const suggestions: string[] = U.getClosestPropertyNames(Object.getOwnPropertyNames(target), namestr);\r\n                logger.warn(`${namestr} is not defined, did you meant ${suggestions[0]}?\\t\\nother suggestions:`, suggestions);\r\n                return namestr && target[suggestions[0]];\r\n            },\r\n        });\r\n    }\r\n\r\n    static arrayRemoveAll<T>(arr: Array<T>, elem: T, debug: boolean = false): void {\r\n        let index;\r\n        if (!arr) return;\r\n        while (true) {\r\n            index = arr.indexOf(elem);\r\n            Log.l(debug, 'ArrayRemoveAll: index: ', index, '; arr:', arr, '; elem:', elem);\r\n            if (index === -1) { return; }\r\n            arr.splice(index, 1);\r\n            Log.l(debug, 'ArrayRemoveAll RemovedOne:', arr);\r\n        }\r\n    }\r\n\r\n    static arrayUnique<T>(arr: T[]): Array<T> { return [ ...new Set<T>(arr)]; }\r\n\r\n    static fileReadContent(file: File, callback: (content :string) => void): void {\r\n        const textType = /text.*/;\r\n        try { if (!file.type || file.type.match(textType)) {\r\n            let reader = new FileReader();\r\n            reader.onload = function(e) { callback( '' + reader.result ); };\r\n            reader.readAsText(file);\r\n            return;\r\n        } } catch(e) { Log.e(true, \"Exception while trying to read file as text. Error: |\", e, \"|\", file); }\r\n        Log.e(true, \"Wrong file type found: |\", file ? file.type : null, \"|\", file); }\r\n\r\n    static fileRead(onChange: (e: Event, files: FileList | null, contents?: string[]) => void, extensions: string[] | FileReadTypeEnum[], readContent: boolean): void {\r\n        // $(document).on('change', (e) => console.log(e));\r\n        console.log(\"importEcore: pre file reader\");\r\n        myFileReader.show(onChange, extensions, readContent);\r\n    }\r\n\r\n    public static clear(htmlNode: Element): void {\r\n        if (htmlNode) while (htmlNode.firstChild) { htmlNode.removeChild(htmlNode.firstChild); }\r\n    }\r\n\r\n    static clearAllTimeouts(): void {\r\n        const highestTimeoutId: number = setTimeout(() => {}, 1) as any;\r\n        for (let i = 0 ; i < highestTimeoutId ; i++) { clearTimeout(i); }\r\n    }\r\n\r\n    static getStackTrace(sliceCalls: number = 2): string[] {\r\n        const ret: string | undefined = Error().stack;\r\n        // try { var a = {}; a.debug(); } catch(ex) { ret = ex.stack; }\r\n        // if (Array.isArray(ret)) return ret;\r\n        if (!ret) return ['UnknownStackTrace'];\r\n        const arr: string[] = ret.split('\\n');\r\n        // first 2 entries are \"Erorr\" and \"getStackTrace()\"\r\n        return sliceCalls > 0 ? arr.slice( sliceCalls ) : arr; }\r\n\r\n    // 0 for caller, 1 for caller of caller, -1 for current function, up to -4 to see internal layers (useless)\r\n    public static getCaller(stacksToSkip: number = 0): string {\r\n        const stack: string[] = this.getStackTrace(4);\r\n        // erase getStackTrace() and isFirstTimeCalled() + Error() first stack + n° of layer the caller wants.\r\n        return stack[stacksToSkip]; }\r\n\r\n    private static gotcalledby: Dictionary<string, boolean> = {};\r\n\r\n    // todo: use in Log.once\r\n    // returns true only the first time this line is reached, false in loops >1 loop, false in recursion >1 recursion, false even days after the first execution unless the page is reloaded\r\n    public static isFirstTimeCalledByThisLine(stacksToSkip: number = 0): boolean {\r\n        const caller: string = this.getCaller(stacksToSkip);\r\n        if (U.gotcalledby[caller]) return false;\r\n        return U.gotcalledby[caller] = true; }\r\n\r\n    public static lineKey(): string { return this.getCaller(0); }\r\n\r\n    // Prevent the backspace key from navigating back.\r\n    static preventBackSlashHistoryNavigation(event: JQuery.KeyDownEvent): boolean {\r\n        if (!event || !event.key || event.key.toLowerCase() !== 'backspace') { return true; }\r\n        const types: string[] = ['text', 'password', 'file', 'search', 'email', 'number', 'date',\r\n            'color', 'datetime', 'datetime-local', 'month', 'range', 'search', 'tel', 'time', 'url', 'week'];\r\n        const srcElement: JQuery<any> = $((event as any)['srcElement'] || event.target);\r\n        const disabled = srcElement.prop('readonly') || srcElement.prop('disabled');\r\n        if (!disabled) {\r\n            if (srcElement[0].isContentEditable || srcElement.is('textarea')) { return true; }\r\n            if (srcElement.is('input')) {\r\n                const type = srcElement.attr('type');\r\n                if (!type || types.indexOf(type.toLowerCase()) > -1) { return true; }\r\n            }\r\n        }\r\n        event.preventDefault();\r\n        return false; }\r\n\r\n    static SetMerge<T>(modifyFirst: boolean = true, ...iterables: Iterable<T>[]): Set<T> {\r\n        const set: Set<T> = modifyFirst ? iterables[0] as Set<T>: new Set<T>();\r\n        Log.e(!(set instanceof Set), 'U.SetMerge() used with modifyFirst = true requires the first argument to be a set');\r\n        for (let iterable of iterables) { for (let item of iterable) { set.add(item); } }\r\n        return set; }\r\n\r\n    // merge with unique elements\r\n    static ArrayMergeU(arr1: any[], ...arr2: any[]): void { U.ArrayMerge0(true, arr1, arr2); }\r\n    // merge without unique check\r\n    static ArrayMerge(arr1: any[], ...arr2: any[]): void { U.ArrayMerge0(false, arr1, arr2); }\r\n    // implementation\r\n    static ArrayMerge0(unique: boolean, arrtarget: any[], ...arrays: any[]): void {\r\n        if (!arrtarget || !arrays) return;\r\n\r\n        if (unique) { for (let arri of arrays) for (let e of arri) U.ArrayAdd(arrtarget, e); }\r\n        else { for (let arri of arrays) Array.prototype.push.apply(arrtarget, arri); }\r\n    }\r\n\r\n    static ArrayAdd<T>(arr: Array<T>, elem: T, unique: boolean = true, throwIfContained: boolean = false): boolean {\r\n        Log.ex(!arr || !Array.isArray(arr), 'ArrayAdd arr null or not array:', arr);\r\n        if (!unique) { arr.push(elem); return true; }\r\n        if (arr.indexOf(elem) === -1) { arr.push(elem); return true; }\r\n        Log.ex(throwIfContained, 'ArrayAdd element already contained:', arr, elem);\r\n        return false; }\r\n\r\n\r\n    private static maxID: number = 0;\r\n    public static idPrefix: string = '';\r\n    // static getID(): string { return U.idPrefix + U.maxID++; }\r\n    static getID: Generator<number> = function* idgenerator(): Generator<number> { let i: number = 0; while(true) yield i++; }();\r\n\r\n\r\n    static getType(param: any): string {\r\n        switch (typeof param) {\r\n            default: return typeof param;\r\n            case 'object':\r\n                return param?.constructor?.name || param?.className || \"{_rawobject_}\";\r\n            case 'function': // and others\r\n                return \"geType for function todo: distinguish betweeen arrow and classic\";\r\n        }\r\n    }\r\n\r\n    static stringCompare(s1: string, s2: string): -1 | 0 | 1 { return (s1 < s2) ? -1 : (s1 > s2) ? 1 : 0; }\r\n\r\n    static endsWith(str: string, suffix: string | string[]): boolean {\r\n        if (Array.isArray(suffix)) {\r\n            for (let suf of suffix) {\r\n                if (U.endsWith(str, suf)) return true;\r\n            }\r\n            return false;\r\n        }\r\n        return str.length >= suffix.length && str.lastIndexOf(suffix) === str.length - suffix.length;\r\n    }\r\n\r\n\r\n    static arrayMergeInPlace<T>(arr1: T[], ...otherArrs: T[][]): T[] {\r\n        for (const arr of otherArrs) arr1.push.apply(arr1, arr || []);\r\n        return arr1; }\r\n\r\n    static getEndingNumber(s: string, ignoreNonNumbers: boolean = false, allowDecimal: boolean = false): number {\r\n        let i = s.length;\r\n        let numberEnd = -1;\r\n        while (--i > 0) {\r\n            if (!isNaN(+s[i])) { if (numberEnd === -1) { numberEnd = i; } continue; }\r\n            if (s[i] === '.' && !allowDecimal) { break; }\r\n            if (s[i] === '.') { allowDecimal = false; continue; }\r\n            if (!ignoreNonNumbers) { break; }\r\n            if (numberEnd !== -1) { ignoreNonNumbers = false; }\r\n        }\r\n        s = numberEnd === -1 ? '1' : s.substring(i, numberEnd);\r\n        return +parseFloat(s); }\r\n\r\n    static increaseEndingNumber(s: string, allowLastNonNumberChars: boolean = false, allowDecimal: boolean = false, increaseWhile?: ((x: string) => boolean)): string {\r\n        let regexpstr = '([0-9]+' + (allowDecimal ? '|[0-9]+\\\\.[0-9]+' : '') + ')' + (allowLastNonNumberChars ? '[^0-9]*' : '') + '$';\r\n        const matches: RegExpExecArray | null = new RegExp(regexpstr, 'g').exec(s); // Global (return multi-match) Single line (. matches \\n).\r\n        // S flag removed for browser support (firefox), should work anyway.\r\n        let prefix: string;\r\n        let num: number;\r\n        if (!matches) {\r\n            prefix = s;\r\n            num = 2;\r\n        } else {\r\n            Log.ex(matches.length > 2, 'parsing error: /' + regexpstr + '/gs.match(' + s + ')');\r\n            let i = s.length - matches[0].length;\r\n            prefix = s.substring(0, i);\r\n            num = 1 + (+matches[1]);\r\n        }\r\n        if (increaseWhile) while (increaseWhile(prefix + num)) { num++; }\r\n        return prefix + num; }\r\n\r\n\r\n    public static shallowEqual(objA: GObject, objB: GObject): boolean {\r\n        if (objA === objB) { return true; }\r\n\r\n        if (!objA || !objB || typeof objA !== 'object' || typeof objB !== 'object') { return false; }\r\n\r\n        var keysA = Object.keys(objA);\r\n        var keysB = Object.keys(objB);\r\n\r\n        // if (keysA.length !== keysB.length) { return false; }\r\n        // Test for A's keys different from B.\r\n        // var bHasOwnProperty = hasOwnProperty.bind(objB);\r\n        for (let keya in objA) if (objA[keya] !== objB[keya]) return false;\r\n\r\n        // for (var i = 0; i < keysA.length; i++) if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) { return false; }\r\n        return true;\r\n    }\r\n\r\n    // returns true only if parameter is already a number by type. UU.isNumber('3') will return false\r\n    static isNumber(o: any): boolean { return +o === o && !isNaN(o); }\r\n\r\n    public static getAllPrototypes(constructor: Constructor, chainoutoutrecursive: GObject[] = [], currentRecursion = 0, maxRecursion = 20, cache: boolean = true): GObject[] {\r\n        // console.log('getAllPrototypes:', {name: constructor.name, currentRecursion, constructor, chainoutoutrecursive});\r\n        if (cache && (constructor as any).__allprototypes) return (constructor as any).__allprototypes;\r\n        let prototype = (constructor.prototype?.name) && constructor.prototype;\r\n        let __proto__ = (constructor.__proto__?.name) && constructor.__proto__;\r\n        if (!prototype && !__proto__ || currentRecursion >= maxRecursion) return chainoutoutrecursive;\r\n        if (prototype) chainoutoutrecursive.push(prototype);\r\n        if (__proto__) chainoutoutrecursive.push(__proto__);\r\n        if (prototype) U.getAllPrototypes(prototype, chainoutoutrecursive, currentRecursion + 1, maxRecursion);\r\n        if (__proto__) U.getAllPrototypes(__proto__, chainoutoutrecursive, currentRecursion + 1, maxRecursion);\r\n        if (cache) (constructor as any).__allprototypes = chainoutoutrecursive;\r\n        return chainoutoutrecursive;\r\n    }\r\n\r\n    public static classIsExtending(subconstructor: Constructor | AbstractConstructor, superconstructor: Constructor | AbstractConstructor): boolean {\r\n        return (superconstructor as typeof DPointerTargetable)?._extends?.includes(subconstructor as any) || false;\r\n        // return U.getAllPrototypes(subconstructor).includes(superconstructor);\r\n    }\r\n\r\n    static isObject(v: GObject|any, returnIfNull: boolean = true, returnIfUndefined: boolean = false, retIfArray: boolean = false): boolean {\r\n        if (v === null) { return returnIfNull; }\r\n        if (v === undefined) { return returnIfUndefined; }\r\n        if (Array.isArray(v)) { return retIfArray; }\r\n        // nb: mind that typeof [] === 'object'\r\n        return typeof v === 'object'; }\r\n\r\n    static objectFromArrayValues(arr: (string | number)[]): Dictionary<string | number, boolean> {\r\n        let ret: Dictionary = {};\r\n        // todo: improve efficiency\r\n        for (let val of arr) { ret[val] = true; }\r\n        return ret;\r\n    }\r\n\r\n    static toBoolString(bool: boolean, ifNotBoolean: boolean = false): string { return bool === true ? 'true' : (bool === false ? 'false' : '' + ifNotBoolean); }\r\n    static fromBoolString<T extends any>(str: string | boolean): boolean;\r\n    static fromBoolString<T extends any>(str: string | boolean, defaultVal?: T): boolean | T;\r\n    static fromBoolString<T extends any>(str: string | boolean, defaultVal?: T, allowNull?: boolean): boolean | null | T;\r\n    static fromBoolString<T extends any>(str: string | boolean, defaultVal: T = false as any, allowNull: boolean = false, allowUndefined: boolean = false): boolean | null | undefined | T {\r\n        str = ('' + str).toLowerCase();\r\n        if (allowNull && (str === 'null')) return null;\r\n        if (allowUndefined && (str === 'undefined')) return undefined;\r\n\r\n        if (str === \"true\" || str === 't' || str === '1') return true;\r\n        // if (defaultVal === true) return str === \"false\" || str === 'f' || str === '0'; // false solo se è esplicitamente false, true se ambiguo.\r\n        if (str === \"false\" || str === 'f' || str === '0') return false;\r\n        return defaultVal;\r\n    }\r\n\r\n    static arrayDifference<T>(starting: T[], final: T[]): {added: T[], removed: T[], starting: T[], final: T[]} {\r\n        let ret: {added: T[], removed: T[], starting: T[], final: T[]} = {} as any;\r\n        ret.starting = starting;\r\n        ret.final = final;\r\n        if (!starting) starting = [];\r\n        if (!final) final = [];\r\n        ret.removed = Uarr.arraySubtract(starting, final, false); // start & !end\r\n        ret.added = Uarr.arraySubtract(final, starting, false); // end & !start\r\n        return ret;\r\n    }\r\n\r\n    // returns <\"what changed from old to neww\"> and in nested objects recursively\r\n    // todo: how can i tell at what point it's the fina lvalue (might be a nestedobj) and up to when it's a delta to follow and unroll?   using __isAdelta:true ?\r\n    // NB: this returns the delta that generates the future. if you want the delta that generate the past one, invert parameter order.\r\n    public static objectDelta<T extends object>(old: T, neww: T, deep: boolean = true): Partial<T>{\r\n        let newwobj: GObject = neww;\r\n        let oldobj: GObject = old;\r\n        if (old === neww) return {};\r\n        let diff = U.objdiff(old, neww); // todo: optimize this, remove the 3 loops below and add those directly in U.objdiff(old, neww, ret); writing inside the obj in third parameter\r\n\r\n        let ret: GObject = {}; // {__isAdelta:true};\r\n        for (let key in diff.added) { ret[key] = newwobj[key]; }\r\n        for (let key in diff.changed) {\r\n            let subold = oldobj[key];\r\n            let subnew = newwobj[key];\r\n            if (typeof subold === typeof subnew && typeof subold === \"object\") { ret[key] = deep ? U.objectDelta(subold, subnew, true) : subnew; }\r\n            else ret[key] = subnew;\r\n        }\r\n        // todo: add to variable naming rules: can't start with \"_-\", like in \"_-keyname\", it means \"keyname\" removed in undo delta\r\n        let removedprefix = \"\"; // \"_-\";\r\n        for (let key in diff.removed) { ret[removedprefix + key] = undefined; } //newwobj[key]; }\r\n        // console.log(\"objdiff\", {old, neww, diff, ret});\r\n        return ret as Partial<T>;\r\n    }\r\n\r\n    // difference react-style. lazy check by === equality field by field\r\n    public static objdiff<T extends GObject>(old:T, neww: T): {removed: Partial<T>, added: Partial<T>, changed: Partial<T>} {\r\n        // let ret: GObject = {removed:{}, added:{}, changed:{}};\r\n        let ret: {removed: Partial<T>, added: Partial<T>, changed: Partial<T>}  = {removed:{}, added:{}, changed:{}};\r\n        if (!neww && !old) { return ret; }\r\n        if (!neww) { ret.removed = old; return ret; }\r\n        if (!old) { ret.added = neww; return ret; }\r\n        let oldkeys: string[] = Object.keys(old);\r\n        let newkeys: string[] = Object.keys(neww);\r\n\r\n        let key: any;\r\n        for (key in old) {\r\n            // if (neww[key] === undefined){\r\n            if (!(key in neww)){ // if neww have a key with undefined value, it counts (and should) as having that property key defined\r\n                (ret.removed as GObject)[key] = old[key]; continue;\r\n                // if (old[key] === undefined) { continue; }\r\n                // continue;\r\n            }\r\n            if (neww[key] === old[key]) continue;\r\n            (ret.changed as GObject)[key] = old[key];\r\n        }\r\n        for (let key in neww) {\r\n            if (!(key in old)){ (ret.added as GObject)[key] = neww[key]; }\r\n        }\r\n        return ret;\r\n    }\r\n    /*  {a: { b: { c1: 1, c2:2, c3:3 } }, d: 1 }     ---->  {\"a.b.c1\":1, \"a.b.c2\":2, \"a.b.c3\":3. \"d\":1}*/\r\n    public static flattenObjectToRoot(obj: GObject, prefix: string = '', pathseparator: string = '.'): GObject{\r\n        return Object.keys(obj).reduce((acc: GObject, k: string) => {\r\n            const pre = prefix.length ? prefix + pathseparator : '';\r\n            if (typeof obj[k] === 'object') Object.assign(acc, U.flattenObjectToRoot(obj[k], pre + k, pathseparator));\r\n            else acc[pre + k] = obj[k];\r\n            return acc;\r\n        }, {});\r\n    }\r\n\r\n    // from {a:{aa:true, ab:\"ab\"}, b:4} to [\"a.aa = true\", \"a.ab = \\\"ab\\\"\", \"a.b = 4\"]\r\n    // maxkeylength is max length of any individual key, after it it will become: superlongpath --> supe...path\r\n    // maxsubpaths is how many subpaths are displayed at most. after it it will be: super.rea.lly.long.pa.th --> super.rea.pa.th\r\n    public static ObjectToAssignementStrings<R extends {str: string, fullstr: string, path:string[], fullpath:string[], val: string, fullvalue: string, pathlength?: number}>\r\n    (obj: GObject, maxkeylength: number = 10, maxsubpaths: number = 6, maxvallength: number = 20, toolongreplacer: string = \"…\", out?:{best: R}&R[], quotestrings: boolean = true): {best: string}&string[] {\r\n        const pathseparator = \".\";\r\n        const valueseparator = \" = \";\r\n        const filterrow = (rowpaths: string[]) => { return (!rowpaths.includes(\"clonedCounter\") && !rowpaths.includes(\"pointedBy\")); };\r\n        let flatten = U.flattenObjectToRoot(obj, '', pathseparator);\r\n        let i = -1;\r\n        let tmp;\r\n        let ret: {best: string} & string[] = [] as GObject as {best: string} & string[];\r\n        tmp = (maxkeylength - toolongreplacer.length)/2;\r\n        let halfpath = { start: (window as any).Math.floor(tmp), end: (window as any).Math.ceil(tmp) };\r\n        tmp = (maxvallength - toolongreplacer.length)/2;\r\n        let halfval = { start: (window as any).Math.floor(tmp), end: (window as any).Math.ceil(tmp) };\r\n        tmp = (maxsubpaths - toolongreplacer.length)/2;\r\n        let halfsubpaths = { start: (window as any).Math.floor(tmp), end: (window as any).Math.ceil(tmp) };\r\n\r\n\r\n        let bestpathsize = 0;\r\n        let best: R | null = null;\r\n        let countsize = (total: number, arrelem: string): number => total + arrelem.length;\r\n        const filterbest = (row: R) => {\r\n            row.pathlength = row.fullstr.length; // row.fullpath.reduce<number>(countsize, 0);\r\n            if (!best || bestpathsize < row.pathlength && filterrow(row.fullpath)) {\r\n                best = row; bestpathsize = row.pathlength;\r\n                if (out) out.best = best;\r\n                ret.best = best.str;\r\n            }\r\n        }\r\n        console.log(\"u get assignements\", {flatten, obj});\r\n\r\n        for (let key in flatten) {\r\n            let row: R = {fullpath: key.split(pathseparator), fullstr: key} as R;\r\n            // if (!filterrow(row.fullpath)) continue;\r\n            // stringify(undefined) = undefined, so i add + \"\"\r\n            try {\r\n                if (!quotestrings && typeof flatten[key] === \"string\") row.fullvalue = flatten[key];\r\n                else row.fullvalue = JSON.stringify(flatten[key]) + \"\";\r\n            } catch(e) { row.fullvalue = \"⁜not serializable⁜\"; }\r\n            // console.log(\"U get assignements loop\", {row, key, flatten, obj});\r\n            row.val = row.fullvalue.length <= maxvallength ? row.fullvalue : row.fullvalue.substring(0, halfval.start) + toolongreplacer + row.fullvalue.substring(halfval.start);\r\n            if (row.fullpath.length > maxsubpaths) {\r\n                row.path = [...row.fullpath];\r\n                row.path.splice( halfsubpaths.start, row.fullpath.length - halfsubpaths.start - halfsubpaths.end, toolongreplacer);\r\n            } else row.path = row.fullpath;\r\n\r\n            // row.path = row.fullpath.length <= maxsubpaths ? row.fullpath : [...row.fullpath.slice(0, halfsubpaths.start), ...row.fullpath.toomanyarraycopies];\r\n            row.path = row.path.map((p: string) => (p.length <= maxkeylength ? p : p.substring(0, halfpath.start) + toolongreplacer + p.substring(p.length - halfpath.end)));\r\n            if (out) { out.push(row); }\r\n            row.str = row.path.join(pathseparator) + valueseparator + row.val;\r\n            ret.push( row.str );\r\n            filterbest(row);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    static download(filename: string = 'nameless.txt', text: string = '', debug: boolean = true): void {\r\n        if (!text) { return; }\r\n        filename = U.toFileName(filename);\r\n        const htmla: HTMLAnchorElement = document.createElement('a');\r\n        const blob: Blob = new Blob([text], {type: 'text/plain', endings: 'native'});\r\n        const blobUrl: string = URL.createObjectURL(blob);\r\n        Log.l(debug, text + '|\\r\\n| <-- rn, |\\n| <--n.');\r\n        htmla.style.display = 'none';\r\n        htmla.href = blobUrl;\r\n        htmla.download = filename;\r\n        document.body.appendChild(htmla);\r\n        htmla.click();\r\n        window.URL.revokeObjectURL(blobUrl);\r\n        document.body.removeChild(htmla); }\r\n\r\n    static formatXml(xml: string): string {\r\n        const reg = /(>)\\s*(<)(\\/*)/g;\r\n        const wsexp = / *(.*) +\\n/g;\r\n        const contexp = /(<.+>)(.+\\n)/g;\r\n        xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\r\n        const pad: string = '' || '\\t';\r\n        let formatted = '';\r\n        const lines = xml.split('\\n');\r\n        let indent = 0;\r\n        let lastType = 'other';\r\n        // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions\r\n        const transitions: GObject = {\r\n            'single->single': 0,\r\n            'single->closing': -1,\r\n            'single->opening': 0,\r\n            'single->other': 0,\r\n            'closing->single': 0,\r\n            'closing->closing': -1,\r\n            'closing->opening': 0,\r\n            'closing->other': 0,\r\n            'opening->single': 1,\r\n            'opening->closing': 0,\r\n            'opening->opening': 1,\r\n            'opening->other': 1,\r\n            'other->single': 0,\r\n            'other->closing': -1,\r\n            'other->opening': 0,\r\n            'other->other': 0\r\n        };\r\n        let i = 0;\r\n        for (i = 0; i < lines.length; i++) {\r\n            const ln = lines[i];\r\n\r\n            // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration\r\n            if (ln.match(/\\s*<\\?xml/)) {\r\n                formatted += ln + '\\n';\r\n                continue;\r\n            }\r\n            // ---\r\n\r\n            const single = Boolean(ln.match(/<.+\\/>/)); // is this line a single tag? ex. <br />\r\n            const closing = Boolean(ln.match(/<\\/.+>/)); // is this a closing tag? ex. </a>\r\n            const opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)\r\n            const type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\r\n            const fromTo = lastType + '->' + type;\r\n            lastType = type;\r\n            let padding = '';\r\n\r\n            indent += transitions[fromTo];\r\n            let j: number;\r\n            for (j = 0; j < indent; j++) {\r\n                padding += pad;\r\n            }\r\n            if (fromTo === 'opening->closing') {\r\n                formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n'; // substr removes line break (\\n) from prev loop\r\n            } else {\r\n                formatted += padding + ln + '\\n';\r\n            }\r\n        }\r\n\r\n        return formatted.trim(); }\r\n\r\n\r\n    // https://stackoverflow.com/questions/13861254/json-stringify-deep-objects  implementation with depth\r\n    static circularStringify(obj: GObject, replacer?: null | ((key: string, value: any) => any), space?: string | number, maxDepth_unsupported: number = 100): string {\r\n        const cache: any[] = [];\r\n        return JSON.stringify(obj, (key, value: any) => {\r\n            if (typeof value === 'object' && value !== null) {\r\n                // Duplicate reference found, discard key\r\n                if (cache.includes(value)) return \"[Circular Reference]\"; // might happen both before and after the replacer func\r\n                if (replacer){\r\n                    value = replacer(key, value);\r\n                    if (cache.includes(value)) return \"[Circular Reference]\"; // might happen both before and after the replacer func\r\n                }\r\n                // Store value in our collection\r\n                cache.push(value);\r\n            }\r\n            return value;\r\n        }, space);\r\n    }\r\n\r\n    static getFirstNumber(s: string, allowDecimalDot: boolean = true, allowDecimalComma: boolean = true, valueifmismatch: any = null): number {\r\n        let commamode = (allowDecimalComma ? (allowDecimalDot ?\"(\\\\.|\\\\,)\" : \"\\\\,\") : (allowDecimalDot ? \"\\\\.\" : \"will not use this regex\"));\r\n        let floatregex = new RegExp(\"-?\" + commamode  + \"?\\\\d+(\" + commamode + \"\\\\d{1,2})?\");\r\n        let intregex = /-?\\d+/;\r\n        let ret: any;\r\n        if (allowDecimalDot || allowDecimalComma) ret = floatregex.exec(s);\r\n        else ret = intregex.exec(s);\r\n        console.log({ret, floatregex, intregex, s});\r\n        ret = ret && ret[0]; // first match\r\n        if (ret === null) return valueifmismatch;\r\n\r\n        let tmpindex:number;\r\n        if (allowDecimalComma) ret = U.replaceAll(ret, \",\", \".\");\r\n        // while (allowDecimalComma && (tmpindex = ret.indexOf(\",\")) !== ret.lastIndexOf(\",\")) ret.substring(tmp+1) // ret.indexOf(.)\r\n        while ((allowDecimalDot || allowDecimalComma) && (tmpindex = ret.indexOf(\".\")) !== ret.lastIndexOf(\".\")) ret = ret.substring(tmpindex+1) // ret.indexOf(.)\r\n        // if (ret[0]===\"-\" && (ret[1]===\",\" || ret[1]===\".\")) ret = \"-0.\"+ret.substring(2); automatically done bu js.    +\"-.5\" = -0.5\r\n        return +ret;\r\n    }\r\n\r\n    private static pairArrayElementsRepeatFunc<T>(val: T, index: number, arr:T[]): T[]{ return [arr[index], arr[index+1]] }\r\n    private static pairArrayElementsReducerFunc<T>(accumulator: T[][], value: T, index: number, array: T[]):T[][] {\r\n        if (index % 2 === 0) accumulator.push(array.slice(index, index + 2));\r\n        return accumulator; }\r\n\r\n    // from arr[] to arr[][]. if is with repetitions is: [1,2], [2,3], [3,4]... (ret.length = source.length-1)\r\n    // if without repetitions is: [1,2], [3,4].... (ret.length = Math.ceil(source.length/2);\r\n    public static pairArrayElements<T>(arr:T[], withRepetitions:boolean = false):T[][] {\r\n        if (withRepetitions) { return arr.map(U.pairArrayElementsRepeatFunc).slice(0, arr.length-1); }\r\n        return arr.reduce( U.pairArrayElementsReducerFunc as ((accumulator: T[][], value: T, index: number, array: T[]) => T[][]), []); }\r\n\r\n    // removes line // and block /**/ comments  todo: can likely be improved by a regular expression\r\n    public static decomment_all(str: string): string { return this.decomment_line(this.decomment_block(str)); }\r\n    // removes line comments //\r\n    public static decomment_line(str: string, trimLines: boolean = true): string {\r\n        return str\r\n            .split(\"\\n\")\r\n            .map(s=> { let i = s.indexOf(\"//\"); s = (i === -1 ? s : s.substring(i)); return trimLines ? s.trim() : s; } )\r\n            .join(\"\\n\");\r\n    }\r\n    // removes block comments /**/\r\n    public static decomment_block(str: string): string {\r\n        // let maxcomments = 100;\r\n        while(true){\r\n            // if (--maxcomments===0) break;\r\n            let s: number = str.indexOf(\"/*\");\r\n            if (s === -1) break;\r\n            let e: number = str.indexOf(\"*/\", s+1);\r\n            if (e === -1) e = str.length;\r\n            str = str.substring(0, s) + str.substring(e+2);\r\n        }\r\n        return str; }\r\n\r\n}\r\nexport class DDate{\r\n\r\n    public static addDay(date: Date, offset: number, inplace: boolean): Date {\r\n        const ret: Date = inplace ? date : new Date(date);\r\n        ret.setDate(date.getDate() + offset);\r\n        return ret;\r\n    }\r\n    public static addMonth(date: Date, offset: number, inplace: boolean): Date {\r\n        const ret: Date = inplace ? date : new Date(date);\r\n        ret.setMonth(date.getMonth() + offset);\r\n        return ret;\r\n    }\r\n    public static addYear(date: Date, offset: number, inplace: boolean): Date {\r\n        const ret: Date = inplace ? date : new Date(date);\r\n        ret.setFullYear(date.getFullYear() + offset);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class myFileReader {\r\n    private static input: HTMLInputElement = null as any;\r\n    private static fileTypes: string[] = null as any;\r\n    private static onchange: (e: Event) => void = null as any;\r\n    // constructor(onchange: (e: ChangeEvent) => void = null, fileTypes: FileReadTypeEnum[] | string[] = null) { myFileReader.setinfos(fileTypes, onchange); }\r\n    private static setinfos(fileTypes: undefined | FileReadTypeEnum[] | string[], onchange: (e: Event, files: FileList | null, contents: string[] | undefined ) => void, readcontent: boolean) {\r\n        myFileReader.fileTypes = (fileTypes || myFileReader.fileTypes) as string[];\r\n        const debug: boolean = false;\r\n        debug&&console.log('fileTypes:', myFileReader.fileTypes, fileTypes);\r\n        myFileReader.input = document.createElement('input');\r\n        const input: HTMLInputElement = myFileReader.input;\r\n        myFileReader.onchange = function (e: Event): void {\r\n            if (!readcontent) { onchange(e, input.files, undefined); return; }\r\n            let contentObj: Dictionary<number, string> = {};\r\n            let fileLetti: number = 0;\r\n            for (let i: number = 0; input.files && i <input.files.length; i++) {\r\n                const f: File = input.files[i];\r\n                debug&&console.log('filereadContent['+i+']( file:', f, ')');\r\n                U.fileReadContent(f, (content: string) => {\r\n                    debug&&console.log('file['+i+'] read complete. done: ' + ( 1 + fileLetti) + ' / ' + input.files?.length, 'contentObj:', contentObj);\r\n                    contentObj[i] = content; // cannot use array, i'm not sure the callbacks will be called in order. using push is safer but could alter order.\r\n                    // this is last file to read.\r\n                    if (input.files && ++fileLetti === input.files.length) {\r\n                        const contentArr: string[] = [];\r\n                        for (let j: number = 0; j < input.files.length; j++) { contentArr.push(contentObj[j]); }\r\n                        onchange(e, input.files, contentArr);\r\n                    }\r\n                });\r\n            }\r\n        } || myFileReader.onchange;\r\n    }\r\n    private static reset(): void {\r\n        myFileReader.fileTypes = undefined as any;\r\n        myFileReader.onchange = undefined as any;\r\n        myFileReader.input = undefined as any;\r\n    }\r\n    public static show(onChange: (e: Event, files: FileList | null, contents?: string[]) => void, extensions: undefined | string[] | FileReadTypeEnum[] = undefined, readContent: boolean): void {\r\n        console.log(\"importEcore: pre file reader\", myFileReader.input);\r\n        myFileReader.setinfos(extensions, onChange, readContent);\r\n        //if (!myFileReader.input) return;\r\n        myFileReader.input.setAttribute('type', 'file');\r\n        if (myFileReader.fileTypes) {\r\n            myFileReader.input.setAttribute('accept', myFileReader.fileTypes.join(','));\r\n        }\r\n        //console.log('fileTypes:', myFileReader.fileTypes, 'input:', myFileReader.input);\r\n        $(myFileReader.input).on('change.custom' as any, myFileReader.onchange).trigger('click');\r\n        myFileReader.reset();\r\n    }\r\n\r\n}\r\n\r\nexport class Uarr{\r\n    public static arrayIntersection<T>(arr1: T[], arr2: T[]): T[]{\r\n        if (!arr1 || ! arr2) return null as any;\r\n        return arr1.filter( e => arr2.indexOf(e) >= 0);\r\n    }\r\n\r\n    static arraySubtract(arr1: any[], arr2: any[], inPlace: boolean): any[]{\r\n        let i: number;\r\n        const ret: any[] = inPlace ? arr1 : [...arr1];\r\n        for (i = 0; i < arr2.length; i++) { U.arrayRemoveAll(ret, arr2[i]); }\r\n        return ret; }\r\n\r\n    static equals<T extends any>(a1: T[], a2: T[], deep: boolean): boolean {\r\n        Log.ex(deep, \"deep array comparison is not supported yet\");\r\n        if (!a1 || !a2) return false;\r\n        if (a1.length !== a2.length) return false;\r\n        for (let i = 0; i < a1.length; i++) if (a1[i] !== a2[i]) return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class FocusHistoryEntry {\r\n    time: Date;\r\n    evt: JQuery.FocusInEvent;\r\n    element: Element;\r\n    constructor(e: JQuery.FocusInEvent, element?: Element, time?: Date) {\r\n        this.evt = e;\r\n        this.element = element || e.target;\r\n        this.time = time || new Date();\r\n    }\r\n}\r\n\r\nexport enum ShortAttribETypes {\r\n    void = 'void',\r\n    EChar  = 'EChar',\r\n    EString  = 'EString',\r\n    EDate  = 'EDate',\r\n    EBoolean = 'EBoolean',\r\n    EByte  = 'EByte',\r\n    EShort  = 'EShort',\r\n    EInt  = 'EInt',\r\n    ELong  = 'ELong',\r\n    EFloat  = 'EFloat',\r\n    EDouble  = 'EDouble',\r\n    /*\r\n  ECharObj  = 'ECharObj',\r\n  EStringObj  = 'EStringObj',\r\n  EDateObj  = 'EDateObj',\r\n  EFloatObj  = 'EFloatObj',\r\n  EDoubleObj  = 'EDoubleObj',\r\n  EBooleanObj = 'EBooleanObj',\r\n  EByteObj  = 'EByteObj',\r\n  EShortObj  = 'EShortObj',\r\n  EIntObj  = 'EIntObj',\r\n  ELongObj  = 'ELongObj',\r\n  EELIST  = 'EELIST',*/\r\n\r\n}\r\nwindoww.ShortAttribETypes = ShortAttribETypes;\r\n\r\nexport const ShortAttribSuperTypes: Dictionary<ShortAttribETypes, ShortAttribETypes[]> = {\r\n    \"void\"     : [],\r\n    \"EChar\"    : [ShortAttribETypes.EString],\r\n    \"EString\"  : [],\r\n    \"EDate\"    : [],\r\n    \"EBoolean\" : [ShortAttribETypes.EByte, ShortAttribETypes.EShort, ShortAttribETypes.EInt, ShortAttribETypes.ELong, ShortAttribETypes.EFloat, ShortAttribETypes.EDouble],\r\n    \"EByte\"    : [ShortAttribETypes.EShort, ShortAttribETypes.EInt, ShortAttribETypes.ELong, ShortAttribETypes.EFloat, ShortAttribETypes.EDouble],\r\n    \"EShort\"   : [ShortAttribETypes.EInt, ShortAttribETypes.ELong, ShortAttribETypes.EFloat, ShortAttribETypes.EDouble],\r\n    \"EInt\"     : [ShortAttribETypes.ELong, ShortAttribETypes.EFloat, ShortAttribETypes.EDouble],\r\n    \"ELong\"    : [ShortAttribETypes.EFloat, ShortAttribETypes.EDouble],\r\n    \"EFloat\"   : [ShortAttribETypes.EDouble],\r\n    \"EDouble\"  : []\r\n};\r\n\r\nexport class SelectorOutput {\r\n    jqselector!: string;\r\n    attrselector!: string;\r\n    attrRegex!: RegExp;\r\n    exception!: any;\r\n    resultSetAttr!: Attr[];\r\n    resultSetElem!: JQuery<Element>;\r\n}\r\nexport enum Keystrokes {\r\n    escape = 'Escape',\r\n    capsLock = 'CapsLock',\r\n    shift = 'Shift',\r\n    tab = 'Tab',\r\n    alt = 'Alt',\r\n    control = 'Control',\r\n    end = 'End',\r\n    home = 'Home',\r\n    pageUp = 'PageUp',\r\n    pageDown = 'PageDown',\r\n    enter = 'Enter', // event.code = 'NumpadEnter' se fatto da numpad, oppure \"numpad3\", \"NumpadMultiply\", ShiftLeft, etc...\r\n    numpadEnter = 'NumpadEnter',\r\n    audioVolumeMute = 'AudioVolumeMute',\r\n    audioVolumeUp = 'AudioVolumeUp',\r\n    audioVolumeDown = 'AudioVolumeDown',\r\n    mediaTrackPrevious = 'MediaTrackPrevious',\r\n    delete = 'Delete', // canc\r\n    backspace = 'Backspace',\r\n    space = ' ',\r\n    altGraph = 'AltGraph',\r\n    arrowLeft = 'ArrowLeft',\r\n    arrowRight = 'ArrowRight',\r\n    arrowUp = 'ArrowUp',\r\n    arrowDown = 'ArrowDown',\r\n    insert = 'Insert',\r\n    f1 = 'F1',\r\n    // weird ones:\r\n    meta = 'Meta', // f1, or other f's with custom binding and windows key\r\n    unidentified = 'Unidentified', // brightness\r\n    __NotReacting__ = 'fn, print, maybe others', // not even triggering event?\r\n}\r\n\r\n\r\nexport enum AttribETypes {\r\n    void = '???void',\r\n    EChar = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EChar',\r\n    EString = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString',\r\n    EDate = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate',\r\n    EFloat = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat',\r\n    EDouble = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble',\r\n    EBoolean = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean',\r\n    EByte = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByte',\r\n    EShort = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShort',\r\n    EInt = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt',\r\n    ELong = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong',\r\n    /*\r\n  ECharObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ECharObject',\r\n  EStringObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EStringObject',\r\n  EDateObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDateObject',\r\n  EFloatObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloatObject',\r\n  EDoubleObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject',\r\n  EBooleanObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObj',\r\n  EByteObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByteObject',\r\n  EShortObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShortObject',\r\n  EIntObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject',\r\n  ELongObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELongObject', */\r\n    // EELIST = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList', // List<E> = List<?>\r\n}\r\n\r\n// export type Json = object;\r\n\r\nexport class ParseNumberOrBooleanOptions{\r\n    defaultValue?: any;\r\n    allowNull?: boolean; nullValue?: any;\r\n    allowUndefined?: boolean; undefinedValue?: any;\r\n    allowedNan?: boolean; nanValue?: any;\r\n    allowBooleans?: boolean; trueValue?: any; falseValue?: any;\r\n    constructor(\r\n        defaultValue: any = null, allowNull: boolean = false, nullValue: any = null,\r\n        allowUndefined: boolean = false, undefinedValue: any = undefined,\r\n        allowedNan: boolean = false, nanValue: any = NaN,\r\n        allowBooleans: boolean = true, trueValue : any = 1, falseValue: any = 0) {\r\n        this.defaultValue = defaultValue; this.allowNull = allowNull; this.nullValue = nullValue;\r\n        this.allowUndefined = allowUndefined; this.undefinedValue = undefinedValue;\r\n        this.allowedNan = allowedNan; this.nanValue = nanValue;\r\n        this.allowBooleans = allowBooleans; this.trueValue = trueValue; this.falseValue = falseValue;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class Log{\r\n    constructor() { }\r\n    // public static history: Dictionary<string, Dictionary<string, any[]>> = {}; // history['pe']['key'] = ...parameters\r\n    public static lastError: any[];\r\n    private static loggerMapping: Dictionary<string, LoggerInterface[]> = {} // takes function name returns logger list\r\n    public static registerLogger(logger: LoggerInterface, triggerAt: (typeof windoww.U.pe) & {name: string}) {\r\n        if (!Log.loggerMapping[triggerAt.name]) Log.loggerMapping[triggerAt.name] = [];\r\n        Log.loggerMapping[triggerAt.name].push(logger);\r\n    }\r\n\r\n    static disableConsole(){\r\n        // @ts-ignore\r\n        console['logg'] = console.log;\r\n        console.log = () => {}; }\r\n\r\n    static enableConsole() {\r\n        // @ts-ignore\r\n        if (console['logg']) console.log = console['logg']; }\r\n\r\n    private static log(prefix: string, category: string, originalFunc: typeof console.log, b: boolean, ...restArgs: any[]): string {\r\n        if (!b) { return ''; }\r\n        const key: string = windoww.U.getCaller(1);\r\n        if (restArgs === null || restArgs === undefined) { restArgs = []; }\r\n        let str = '[' + prefix + ']' + key + ': ';\r\n        for (let i = 0; i < restArgs.length; i++) {\r\n            // console.log(prefix, {i, restArgs, curr:restArgs[i]});\r\n            str += '' +\r\n                (typeof restArgs[i] === 'symbol' ?\r\n                    '' + String(restArgs[i]) :\r\n                    restArgs[i])\r\n                + '\\t\\r\\n'; }\r\n        if (Log.loggerMapping[category]) for (const logger of Log.loggerMapping[category]) { logger.log(category, key, restArgs, str); }\r\n        originalFunc(key, ...restArgs);\r\n        return str; }\r\n\r\n    public static e(b: boolean, ...restArgs: any[]): string {\r\n        if (!b) return '';\r\n        const str = Log.log('Error', 'e', console.error, b, ...restArgs);\r\n        Log.lastError = restArgs;\r\n        return str;\r\n        // throw new Error(str);\r\n    }\r\n\r\n    public static eDev(b: boolean, ...restArgs: any[]): string {\r\n        if (!b) return '';\r\n        const str = Log.log('Dev Error','eDev', console.error, b, ...restArgs);\r\n        Log.lastError = restArgs;\r\n        return str;\r\n        // throw new Error(str);\r\n    }\r\n\r\n    public static ex(b: boolean, ...restArgs: any[]): null | never | any {\r\n        if (!b) return null;\r\n        const str = Log.log('Error', 'e', console.error, b, ...restArgs);\r\n        Log.lastError = restArgs;\r\n        windoww.ee = restArgs;\r\n        windoww.e1 = restArgs[1];\r\n        throw new MyError(str, ...restArgs); }\r\n\r\n    public static exDev(b: boolean, ...restArgs: any[]): null | never | any {\r\n        if (!b) return null;\r\n        const str = Log.log('Dev Error','eDev', console.error, b, ...restArgs);\r\n        Log.lastError = restArgs;\r\n        windoww.ee = restArgs;\r\n        windoww.e1 = restArgs[1];\r\n        throw new MyError(str, ...restArgs); }\r\n\r\n    public static i(b: boolean, ...restArgs: any[]): string { return Log.log('Info', 'i', console.log, b, ...restArgs); }\r\n    public static l(b: boolean, ...restArgs: any[]): string { return Log.log('Log', 'l', console.log, b, ...restArgs); }\r\n    public static w(b: boolean, ...restArgs: any[]): string { return Log.log('Warn', 'w', console.warn, b, ...restArgs); }\r\n\r\n\r\n    public static eDevv<T extends any = any>(firstParam?: NotBool<T>, ...restAgs: any): string { return Log.eDev(true, ...[firstParam, ...restAgs]); }\r\n    public static ee(...restAgs: any): string { return Log.e(true, ...restAgs); }\r\n    public static exDevv<T extends any = any>(firstParam?: NotBool<T>, ...restAgs: any): never | any { return Log.exDev(true, ...[firstParam, ...restAgs]); }\r\n    public static exx(...restAgs: any): never | any { return Log.ex(true, ...restAgs); }\r\n    public static ii(...restAgs: any): string { return Log.i(true, ...restAgs); }\r\n    public static ll(...restAgs: any): string { return Log.l(true, ...restAgs); }\r\n    public static ww(...restAgs: any): string { return Log.w(true, ...restAgs); }\r\n}\r\n\r\ntype NotBool<T> = Exclude<T, boolean>;\r\n\r\ninterface LoggerInterface{\r\n    log: (category: string, key: string, data: any[], fullconcat?: string) => any;\r\n}\r\n\r\n\r\n\r\nexport class FileReadTypeEnum {\r\n    public static image: FileReadTypeEnum = \"image/*\" as any;\r\n    public static audio: FileReadTypeEnum = \"audio/*\" as any;\r\n    public static video: FileReadTypeEnum = \"video/*\" as any;\r\n    /// a too much huge list https://www.iana.org/assignments/media-types/media-types.xhtml\r\n    public static AndManyOthersButThereAreTooMuch: string = \"And many others... https://www.iana.org/assignments/media-types/media-types.xhtml\";\r\n    public static OrJustPutFileExtension: string = \"OrJustPutFileExtension\";\r\n}\r\n\r\nconsole.warn('loaded ts U');\r\n","import React, {Dispatch, ReactElement} from 'react';\r\nimport {DValue, Input, DState, LValue, Pointer} from \"../../../../joiner\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction MqttEditorComponent(props: AllProps) {\r\n    const lValue = props.lValue;\r\n    const room = props.room;\r\n    const topics = props.topics;\r\n\r\n    const change = (evt:  React.ChangeEvent<HTMLSelectElement>) => {\r\n        lValue.topic = evt.target.value || '';\r\n    }\r\n\r\n    const parsedTopic = (topics.includes(lValue.topic)) ? lValue.topic : '';\r\n\r\n    if(!room) return(<></>);\r\n    return(<div className={'d-flex p-1'}>\r\n        <label className={'my-auto'}>Topic</label>\r\n        <select className={'my-auto ms-auto select'} value={parsedTopic} onChange={change}>\r\n            <option value={''}>-----</option>\r\n            <option value={''}>NO TOPIC</option>\r\n            {topics.map((topic, index) => {\r\n                return(<option key={index} value={topic}>{topic}</option>);\r\n            })}\r\n        </select>\r\n    </div>);\r\n}\r\n\r\ninterface OwnProps {valueId: Pointer<DValue, 1, 1, LValue>}\r\ninterface StateProps {lValue: LValue, room: string, topics: string[]}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const lValue = LValue.fromPointer(ownProps.valueId);\r\n    const room = state.room;\r\n    const topics = state.topics;\r\n    return {lValue, room, topics};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const MqttEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MqttEditorComponent);\r\n\r\nexport const MqttEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <MqttEditorConnected {...{...props, children}} />;\r\n}\r\nexport default MqttEditor;\r\n","import React from \"react\";\r\nimport type {Dictionary, DocString, LReference, Pointer, ValueDetail} from \"../../../../joiner\";\r\nimport {\r\n    DAttribute,\r\n    DClass,\r\n    DEnumerator,\r\n    DReference,\r\n    LAttribute,\r\n    LClass,\r\n    LEnumerator,\r\n    LObject,\r\n    LPointerTargetable,\r\n    LStructuralFeature,\r\n    LValue,\r\n    Selectors,\r\n    SetFieldAction\r\n} from \"../../../../joiner\";\r\nimport MqttEditor from \"./MqttEditor\";\r\n\r\n\r\ninterface Props {value: LValue}\r\nfunction Value(props: Props) {\r\n    const lValue = props.value;\r\n    const dValue = lValue.__raw;\r\n    const feature: LStructuralFeature = LStructuralFeature.fromPointer(lValue.instanceof?.id);\r\n    let field = 'text'; let stepSize = 1; let maxLength = 524288;\r\n    let min = -9223372036854775808;\r\n    let max = 9223372036854775807; // for long, todo: aggiusta per tutti gli altri. in switch\r\n    switch(feature?.type.name) {\r\n        default: field=\"text\"; break;\r\n        case 'EChar': maxLength = 1; break;\r\n        case 'EInt':\r\n        case 'ELong':\r\n        case 'EShort':\r\n        case 'Byte': field = 'number'; break;\r\n        case 'EFloat': field = 'number'; stepSize = 0.1; break;\r\n        case 'EDouble': field = 'number'; stepSize = 0.01; break;\r\n        case 'EBoolean': field = 'checkbox'; break;\r\n        case 'EDate': field = 'date'; break;\r\n    }\r\n    let upperBound = feature ? (feature as LReference | LAttribute).__raw.upperBound : -1;\r\n    if (upperBound < 0) upperBound = 999;\r\n    let filteredvalues: ValueDetail[] = lValue.getValues(true, false, false, false, true, true) as any;\r\n\r\n    const add = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        // SetFieldAction.new(dValue, 'value', U.initializeValue(feature?.type), '+=', false);\r\n        SetFieldAction.new(dValue, 'values', undefined, '+=', false);\r\n    }\r\n    const remove = (index: number, isPointer: boolean | undefined) => {\r\n        if (isPointer === undefined) isPointer = !!(filteredvalues[index].value as any)?.__isProxy; // Pointers.isPointer\r\n        SetFieldAction.new(dValue, 'values', index, '-=', isPointer);\r\n        /*\r\n        let oldValues = filteredvalues.map( v => v.rawValue);\r\n        let newValues = [...oldValues];\r\n        newValues.splice(index, 1); // removes in place\r\n        console.log(\"removing:\", {oldValues, newValues, index});\r\n        SetFieldAction.new(dValue, 'value', newValues, '=', false);*/\r\n    }\r\n    function changeDValue(event: React.ChangeEvent<HTMLInputElement|HTMLSelectElement>, index: number, isPointer: boolean | undefined) {\r\n        let inputvalue: string | boolean = field === 'checkbox' ? (event.target as HTMLInputElement).checked : event.target.value;\r\n        if (inputvalue === \"undefined\") inputvalue = undefined as any;\r\n        let result = lValue.setValueAtPosition(index, inputvalue, {isPtr: isPointer});\r\n        console.log(\"setting DValue\", {inputvalue, result, lValue});\r\n    }\r\n\r\n\r\n    let isattr = false, isenum = false, isref = false, isshapeless = false;\r\n    switch(feature?.className){\r\n        default: isshapeless = true; break;\r\n        case DAttribute.name:\r\n            if (feature.type.className === DClass.name) isattr = true; else\r\n            if (feature.type.className === DEnumerator.name) isenum = true;\r\n            break;\r\n        case DReference.name: isref = true; break;\r\n    }\r\n\r\n    // let pointables: {objects:LObject[], literals: LEnumLiteral[]};\r\n    let select_options: JSX.Element | JSX.Element[] | null;\r\n\r\n\r\n    if (isref) {\r\n        let isContainment: boolean = lValue.containment;\r\n        // todo: move this utility in LClass.instances\r\n        let containerObjectsID: Pointer[] = lValue.fatherList.map( lm => lm.id);\r\n        let validObjects = Selectors.getObjects().filter((obj) => obj.instanceof?.id === feature.type?.id);\r\n        validObjects =  validObjects.filter( obj => !containerObjectsID.includes(obj.id)); // avoiding containment loops damiano todo: put this filter in set_value too\r\n        let freeObjects = [];\r\n        let boundObjects = [];\r\n        for (let o of validObjects) {\r\n            // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\r\n            if (isContainment && o.id === lValue.father.id) continue; // no self contain\r\n            if (o.isRoot) freeObjects.push(o); else boundObjects.push(o);\r\n        }\r\n        let map = (object: LObject) => <option key={object.id} value={object.id}>{object.name/*.feature('name')*/}</option>;\r\n        select_options = <><optgroup label={\"Free Objects\"}>{freeObjects.map(map)}</optgroup><optgroup label={\"Bound Objects\"}>{boundObjects.map(map)}</optgroup></>; }\r\n    else if (isenum) {\r\n        select_options = <optgroup label={\"Literals of \" + feature.type.name}>{(feature.type as LEnumerator).literals.map((literal, i) => <option key={literal.id} value={literal.id}>{literal.name}</option>)}</optgroup>;\r\n    }\r\n    else if (isshapeless) {\r\n        // damiano todo: rewrite entirely this section to separate bound and free objects, copying from if(isref)\r\n        // pointables = {objects: Selectors.getObjects(), literals: LPointerTargetable.fromArr(Selectors.getAllEnumLiterals())};\r\n        let isContainment: boolean = lValue.containment;\r\n        let enums: LEnumerator[] = LPointerTargetable.fromArr(Selectors.getAllEnumerators())\r\n        let classes: LClass[] = LPointerTargetable.fromArr(Selectors.getAllClasses())\r\n        let shapelessObjects: LObject[] = Selectors.getObjects().filter((o) => !o.instanceof);\r\n        // console.log(\"select_options\", {enums, classes, shapelessObjects});\r\n        let classmap: Dictionary<DocString<\"classname\">, {free:LObject[], bound:LObject[], all: LObject[]}> = {};\r\n        let shapeless: {free:LObject[], bound:LObject[], all: LObject[]} = {free:[], bound:[], all: shapelessObjects};\r\n        for (let c of classes) {\r\n            let row: {free:LObject[], bound:LObject[], all: LObject[]} = {free: [], bound:[], all: c.instances};\r\n            classmap[c.name] = row;\r\n            for (let o of row.all) {\r\n                // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\r\n                if (isContainment && o.id === lValue.father.id) continue; // no self contain\r\n                if (o.isRoot) row.free.push(o); else row.bound.push(o);\r\n            }\r\n        }\r\n        for (let o of shapelessObjects) { if (o.isRoot) shapeless.free.push(o); else shapeless.bound.push(o); }\r\n\r\n        select_options = <>\r\n            <option value={''} key={0}>--- Not a Reference ---</option>\r\n            { Object.keys(classmap).map((cname) => !classmap[cname].all.length ? null :\r\n                <>\r\n                    {!classmap[cname].free.length ? null :\r\n                        <optgroup label={\"Free    instances of \" + cname} key={\"f-\" + cname}>\r\n                            {classmap[cname].free.map((o) => <option value={o.id} key={o.id}>{o.name}</option>)}\r\n                        </optgroup>\r\n                    }\r\n                    {!classmap[cname].bound.length ? null :\r\n                        <optgroup label={\"Bound instances of \" + cname} key={\"b-\" + cname}>\r\n                            {classmap[cname].bound.map((o) => <option value={o.id} key={o.id}>{o.name}</option>)}\r\n                        </optgroup>\r\n                    }\r\n                </>) }\r\n            { !shapeless.free.length ? null : <optgroup label={\"Free    shapeless objects\"}>{shapeless.free.map( (o) => <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup> }\r\n            { !shapeless.bound.length ? null : <optgroup label={\"Bound shapeless objects\"}>{shapeless.bound.map( (o) => <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup> }\r\n            { enums.map((c) => !c.literals.length ? null : <optgroup label={\"Literals of \" + c.name}>{ c.literals.map((o)=> <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup>) }\r\n        </>\r\n        // console.log(\"select_options post\", {select_options, enums, classes, shapelessObjects});\r\n    }\r\n    else select_options = null;\r\n\r\n    // let rawvalues: any[] = lValue.__raw.value || [];\r\n    console.log(\"filtered values\", {filteredvalues});\r\n    let isPtr = isattr ? false : (isenum || isref ? true : undefined/*for shapeless*/);\r\n    const valueslist = (filteredvalues).map( (val, index) =>\r\n            val.hidden ? null :\r\n            <div className={'mt-1 d-flex ms-4'} key={index}>\r\n                <div className={'border border-dark'}></div>\r\n                { isattr && <input onChange={(evt) => { changeDValue(evt, index, false) }} className={'input ms-1'} value={val.value + ''}\r\n                                   checked={!!val.value} min={min} max={max} type={field} step={stepSize} maxLength={maxLength} placeholder={\"empty\"}/> }\r\n                { isenum && <select onChange={(evt) => {changeDValue(evt, index, true)}} className={'ms-1 select'} value={val.rawValue+''} data-valuedebug={val.rawValue}>\r\n                    {<option key=\"undefined\" value={'undefined'}>-----</option>}\r\n                    { select_options }\r\n                </select>}\r\n                { isref && <select onChange={(evt) => {changeDValue(evt, index, true)}} className={'ms-1 select'} value={val.rawValue+''} data-valuedebug={val.rawValue}>\r\n                    <option value={'undefined'}>-----</option>\r\n                    {select_options}\r\n                </select>}\r\n                { isshapeless && <>\r\n                    { <select key={index} onChange={(evt) => {changeDValue(evt, index, undefined)}} className={'select ms-1'} value={val.rawValue+''}>{select_options}</select> }\r\n                    →\r\n                    { <input key={\"raw\"+index} onChange={(evt) => {changeDValue(evt, index, false)}} className={'input ms-1'} value={val.rawValue+''} list={\"objectdatalist\"} type={\"text\"} placeholder={\"empty\"}/> }\r\n                    { /*(val as LObject)?.id && <span>points to {val}</span> */}\r\n                </>\r\n                }\r\n                <button className={'btn btn-danger ms-2'} onClick={(evt) => {remove(index, isPtr)}}>\r\n                    <i className={'p-1 bi bi-trash3-fill'}></i>\r\n                </button>\r\n        </div>);\r\n\r\n    return(<div>\r\n        <div className={'d-flex'}>\r\n            <label className={'ms-1 my-auto'}>Values</label>\r\n            <button className={'btn btn-primary ms-auto me-1'} disabled={filteredvalues.length >= upperBound} onClick={add}>\r\n                <i className={'p-1 bi bi-plus'}></i>\r\n            </button>\r\n        </div>\r\n        { valueslist }\r\n        <hr className={\"my-3\"} />\r\n        <MqttEditor valueId={dValue.id} />\r\n    </div>)\r\n}\r\n\r\nexport default Value;\r\n","import React, {ReactNode} from \"react\";\r\nimport type {GObject, LModelElement} from \"../../../joiner\";\r\nimport {\r\n    DObject,\r\n    DValue,\r\n    Input,\r\n    LModel,\r\n    LObject,\r\n    LOperation,\r\n    LPointerTargetable,\r\n    LValue,\r\n    Select, Selectors,\r\n    SetFieldAction,\r\n    store\r\n} from \"../../../joiner\";\r\nimport Value from \"./editors/Value\";\r\n\r\nexport default class Structure {\r\n    private static BaseEditor(lModelElement: LModelElement) : ReactNode {\r\n        if(!lModelElement) return(<></>);\r\n        return(<>\r\n            {/*<Input obj={lModelElement} field={\"id\"} label={\"ID\"} type={\"text\"} readonly={true} />*/}\r\n            <Input data={lModelElement} field={\"name\"} label={\"Name\"} type={\"text\"} tooltip={\"Element name\"} />\r\n        </>);\r\n    }\r\n    public static ModelEditor(lModel: LModelElement): ReactNode {\r\n        if(!lModel) return(<></>);\r\n        return(<>{Structure.BaseEditor(lModel)}</>);\r\n    }\r\n    public static PackageEditor(lPackage: LModelElement): ReactNode {\r\n        if(!lPackage) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lPackage)}\r\n            <Input data={lPackage} field={\"uri\"} label={\"NsURI\"} type={\"text\"} tooltip={\"Namespace URI of the package, i.e. the URI that is displayed in the xmlns tag to identify this package in an XMI document\"} />\r\n            <Input data={lPackage} field={\"prefix\"} label={\"NsPrefix\"} type={\"text\"} tooltip={\"Namespace prefix that is used when references to instances of the classes in this package are serialized\"} />\r\n        </>);\r\n    }\r\n    public static ClassEditor(lClass: LModelElement): ReactNode {\r\n        if(!lClass) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lClass)}\r\n            <Input data={lClass} field={\"abstract\"} label={\"IsAbstract\"} type={\"checkbox\"} tooltip={\"If set to True, the generated implementation class will have the abstract keyword\"} />\r\n            <Input data={lClass} field={\"interface\"} label={\"IsInterface\"} type={\"checkbox\"} tooltip={\"If set to True, only the java interface will be generated. There will be no corresponding implementation class and no create method in the factory\"} />\r\n            <Input data={lClass} field={\"partial\"} label={\"IsPartial\"} type={\"checkbox\"} tooltip={\"If set to True, the class will be partial.\"} />\r\n        </>);\r\n    }\r\n    private static DataTypeEditor(lDataType: LModelElement): ReactNode {\r\n        if(!lDataType) return(<></>);\r\n        return(<Input data={lDataType} field={\"serializable\"} label={\"IsSerializable\"} type={\"checkbox\"} tooltip={\"It represents whether values of this type will be serialized\"} />);\r\n    }\r\n    public static EnumEditor(lEnum: LModelElement): ReactNode {\r\n        if(!lEnum) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lEnum)}\r\n            {Structure.DataTypeEditor(lEnum)}\r\n        </>);\r\n    }\r\n    private static TypedElementEditor(lTypedElement: LModelElement): ReactNode {\r\n        if(!lTypedElement) return(<></>);\r\n        return(<>\r\n            <Select data={lTypedElement} field={\"type\"} label={\"Type\"} tooltip={\"Element Type\"} />\r\n            <Input data={lTypedElement} field={\"lowerBound\"} label={\"Lower Bound\"} type={\"number\"} tooltip={\"Determines the setting of the required property. If lowerBound is 0, the required property will be set to False. Otherwise, the required property will be set to True\"} />\r\n            <Input data={lTypedElement} field={\"upperBound\"} label={\"Upper Bound\"} type={\"number\"} tooltip={\"Determines the setting of the many property. If upperBound is 1, the many property will be set to False. Otherwise, the many property will be set to True\"} />\r\n            <Input data={lTypedElement} field={\"ordered\"} label={\"IsOrdered\"} type={\"checkbox\"} tooltip={\"It represents whether order is meaningful\"} />\r\n            <Input data={lTypedElement} field={\"unique\"} label={\"IsUnique\"} type={\"checkbox\"} tooltip={\"Indicates whether a many-valued attribute is allowed to have duplicates\"} />\r\n        </>);\r\n    }\r\n    private static StructuralFeatureEditor(lStructuralFeature: LModelElement): ReactNode {\r\n        if(!lStructuralFeature) return(<></>);\r\n        return(<>\r\n            <Input data={lStructuralFeature} field={\"defaultValueLiteral\"} label={\"Default Value Literal\"} type={\"text\"} tooltip={\"Determines the value returned by the get method if the feature has never been set\"} />\r\n            <Input data={lStructuralFeature} field={\"changeable\"} label={\"IsChangeable\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference may be modified. If changeable is set to False, no set() method is generated for the reference\"} />\r\n            <Input data={lStructuralFeature} field={\"volatile\"} label={\"IsVolatile\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference cannot be cached. If volatile is set to True, the generated class does not contain a field to hold the reference and the generated get() and set() methods for the reference are empty\"} />\r\n            <Input data={lStructuralFeature} field={\"transient\"} label={\"IsTransient\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference should not be stored\"} />\r\n            <Input data={lStructuralFeature} field={\"unsettable\"} label={\"IsUnsettable\"} type={\"checkbox\"} tooltip={\"Indicates that the feature may be unset\"} />\r\n            <Input data={lStructuralFeature} field={\"derived\"} label={\"IsDerived\"} type={\"checkbox\"} tooltip={\"A derived feature typically computes its value from those of other features. It will typically be transient and will often be volatile and not changeable. The default copier won't copy it\"} />\r\n        </>); // damiano: derived description tooltip might be wrong\r\n    }\r\n    public static AttributeEditor(lAttribute: LModelElement): ReactNode {\r\n        if(!lAttribute) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lAttribute)}\r\n            {Structure.TypedElementEditor(lAttribute)}\r\n            {Structure.StructuralFeatureEditor(lAttribute)}\r\n            <Input data={lAttribute} field={\"isID\"} label={\"IsID\"} type={\"checkbox\"} tooltip={\"An ID attribute explicitly models the one unique ID of an object\"} />\r\n        </>);\r\n    }\r\n    public static ReferenceEditor(lReference: LModelElement): ReactNode {\r\n        if(!lReference) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lReference)}\r\n            {Structure.TypedElementEditor(lReference)}\r\n            {Structure.StructuralFeatureEditor(lReference)}\r\n            <Input data={lReference} field={\"containment\"} label={\"IsContainment\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference is a containment\"} />\r\n            <Input data={lReference} field={\"container\"} label={\"IsContainer\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference is a container. This is the opposite of a containment EReference. If container is true, the generated accessor methods will have container semantics\"} />\r\n            <Input data={lReference} field={\"resolveProxies\"} label={\"IsResolveProxies\"} type={\"checkbox\"} tooltip={\"Indicates whether proxy references should be resolved automatically\"} />\r\n        </>);\r\n    }\r\n    public static EnumLiteralEditor(lEnumLiteral: LModelElement): ReactNode {\r\n        if(!lEnumLiteral) return(<></>);\r\n        //vv4\r\n        return(<>\r\n            {Structure.BaseEditor(lEnumLiteral)}\r\n            <Input data={lEnumLiteral} field={\"value\"} label={\"Ordinal\"} type={\"number\"} tooltip={\"Determines the integer value that is associated with this literal\"} />\r\n        </>);\r\n    }\r\n\r\n    public static OperationEditor(me: LModelElement): ReactNode {\r\n        const operation: LOperation = LOperation.fromPointer(me.id);\r\n        if(!operation) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(operation)}\r\n            <Select data={operation.id} field={'type'} label={'Return'} tooltip={\"Method return type\"} />\r\n            {operation.parameters.map((parameter, index) => {\r\n                if (index > 0) {\r\n                    return <div key={index}>\r\n                        <label className={'ms-1'}>Parameter</label>\r\n                        <div className={'ms-3'}>\r\n                            <Input data={parameter.id} field={\"name\"} label={'• Name'} type={\"text\"} tooltip={\"Name of the generated argument\"} />\r\n                            <Select data={parameter.id} field={\"type\"} label={'• Type'} tooltip={\"Argument type\"} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            })}\r\n            {operation.exceptions.map((exception, index) => {\r\n                return <div key={index}>\r\n                    <Input data={exception.id} field={\"name\"} label={\"Exception\"} type={\"text\"} tooltip={\"Exception name\"} />\r\n                </div>\r\n            })}\r\n        </>);\r\n    }\r\n    public static ObjectEditor(me: LModelElement): ReactNode {\r\n        const object: LObject = LObject.fromPointer(me.id);\r\n        if(!object) return(<></>);\r\n        let conform = true;\r\n        // damiano todo: this is redundant because it's always conform, but those kind of checks are\r\n        //                 better be done adding a property like lobject.conformsto(lclass)\r\n        for(let feature of object.features) {\r\n            let upperBound =  feature.instanceof ? feature.instanceof.upperBound : -1;\r\n            upperBound = (upperBound === -1) ? 999 : upperBound;\r\n            const lowerBound =  feature.instanceof ? feature.instanceof.lowerBound : -1;\r\n            const value = feature.values;\r\n            // const length = (Array.isArray(value)) ? value.length : (value === '') ? 0 : 1;\r\n            conform = (value.length >= lowerBound && value.length <= upperBound);\r\n        }\r\n\r\n        return(<div>\r\n\r\n            {object.instanceof && conform && <label className={'p-1'}>The instance <b className={'text-success'}>CONFORMS</b> to {object.instanceof.name}</label>}\r\n            {object.instanceof && !conform && <label className={'p-1'}>The instance <b className={'text-danger'}>NOT CONFORMS</b> to {object.instanceof.name}</label>}\r\n            {!object.instanceof && <label className={'p-1'}>The instance is <b className={'text-warning'}>SHAPELESS</b></label>}\r\n            {!object.partial ?\r\n                null :\r\n                <div className={\"d-flex p-1\"}>\r\n                    <label className={'my-auto'}>Features</label>\r\n                    <button className={'btn btn-primary ms-auto'} onClick={()=>{object.addValue()}}>\r\n                        <i className={'p-1 bi bi-plus'}></i>\r\n                    </button>\r\n                </div>\r\n            }\r\n            {this.forceConform(object)}\r\n        </div>);\r\n    }\r\n    public static forceConform(me: LObject) {\r\n        let mm: LModel = Selectors.getLastSelectedModel().m2 as LModel; // LPointerTargetable.fromPointer(store.getState().metamodel as any);\r\n\r\n        if (!mm) return <></>\r\n        return <div className={'d-flex p-1'}>\r\n            <label className={'my-auto'}>Force Type</label>\r\n            <select className={'my-auto ms-auto select'} onChange={ (event)=>{\r\n                (window as any).debugmm = mm;\r\n                (window as any).debugm = me;\r\n                me.instanceof = event.target.value === \"undefined\" ? undefined : event.target.value as any;\r\n            } } value={me.instanceof?.id || \"undefined\"}>\r\n                <optgroup label={mm.name}>\r\n                    {\r\n                        (mm.classes || []).map( c =>\r\n                            <option value={c.id}>{c?.name || c.id}</option>\r\n                        )\r\n                    }\r\n                    <option value={\"undefined\"}>Object</option>\r\n                </optgroup>\r\n            </select>\r\n        </div>\r\n    }\r\n    public static ValueEditor(me: LModelElement): ReactNode {\r\n        const lValue: LValue = LValue.fromPointer(me.id);\r\n        if(!lValue) return(<></>);\r\n        return(<div>\r\n            <Value value={lValue} />\r\n        </div>);\r\n    }\r\n    public static Editor(lModelElement: LModelElement|undefined) : ReactNode {\r\n        if(lModelElement){\r\n            switch (lModelElement.className){\r\n                default: break;\r\n                case \"DModel\": return Structure.ModelEditor(lModelElement);\r\n                case \"DPackage\": return Structure.PackageEditor(lModelElement);\r\n                case \"DClass\": return Structure.ClassEditor(lModelElement);\r\n                case \"DAttribute\": return Structure.AttributeEditor(lModelElement);\r\n                case \"DReference\": return Structure.ReferenceEditor(lModelElement);\r\n                case \"DEnumerator\": return Structure.EnumEditor(lModelElement);\r\n                case \"DEnumLiteral\": return Structure.EnumLiteralEditor(lModelElement);\r\n                case \"DOperation\": return Structure.OperationEditor(lModelElement);\r\n                case \"DObject\" : return Structure.ObjectEditor(lModelElement);\r\n                case \"DValue\" : return Structure.ValueEditor(lModelElement);\r\n            }\r\n        }\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\n","import React, {Dispatch, PureComponent, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DGraphElement,\r\n    DModelElement,\r\n    DPointerTargetable,\r\n    DViewElement,\r\n    DState,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LViewElement,\r\n    Pointer, U,\r\n} from \"../../../joiner\";\r\nimport Structure from \"./Structure\";\r\n\r\n\r\ninterface ThisState {}\r\n\r\nclass StructureEditorComponent extends PureComponent<AllProps, ThisState> {\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render(): ReactNode{\r\n        const lModelElement: LModelElement | undefined = this.props.selected?.modelElement;\r\n        return <div className={\"px-4\"}>\r\n            <div className={\"mt-3\"}>\r\n                {Structure.Editor(lModelElement)}\r\n            </div>\r\n            {/*\r\n            <hr className={'mt-5'} />\r\n            <div>Exportable Json</div>\r\n            <span style={{whiteSpace: \"pre\"}}>{JSON.stringify(lModelElement?.generateEcoreJson(), null, \"\\t\")}</span>\r\n            <hr className={'mt-5'} />\r\n            <div>Internal state</div>\r\n            <span style={{whiteSpace: \"pre\"}}>{JSON.stringify(lModelElement, null, '\\t')}</span>\r\n            */}\r\n        </div>;\r\n    }\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    selectedid?: { node: Pointer<DGraphElement, 1, 1>; view: Pointer<DViewElement, 1, 1>; modelElement: Pointer<DModelElement, 0, 1> };\r\n    selected?: { node: LGraphElement; view: LViewElement; modelElement?: LModelElement };\r\n}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: DPointerTargetable.wrap(state.idlookup[ret.selectedid.node]) as LGraphElement,\r\n        view: DPointerTargetable.wrap(state.idlookup[ret.selectedid.view]) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? DPointerTargetable.wrap<DPointerTargetable, LModelElement>(state.idlookup[ret.selectedid.modelElement]) : undefined };\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const StructureEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StructureEditorComponent);\r\n\r\nexport const StructureEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <StructureEditorConnected {...{...props, children}} />;\r\n}\r\nexport default StructureEditor;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DState,\r\n    DPointerTargetable,\r\n    DViewElement,\r\n    GObject, Input,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    Pointer, Select, SetRootFieldAction\r\n} from \"../../../joiner\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport Structure from \"../structureEditor/Structure\";\r\n\r\ninterface Props {data: LModelElement}\r\nfunction Child(props: Props) {\r\n    const data = props.data;\r\n    const classname = data.className.slice(1).toLowerCase();\r\n    const css = classname + '-name';\r\n\r\n    const click = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n        const selected = { node: undefined, view: undefined, modelElement: data.id };\r\n        SetRootFieldAction.new('_lastSelected', selected);\r\n    }\r\n    // I got problems with operation's exception\r\n    return <div className={'mt-1 ms-3'}>\r\n        <div className={'d-flex'}>\r\n            <button className={'btn'} onClick={click}>\r\n                <i className={'bi bi-eye'}></i>\r\n            </button>\r\n            <label className={css + ' ms-1 text-capitalize my-auto'}>{classname}:</label>\r\n            <label className={'ms-1 my-auto'}>{((data as GObject).name) ? (data as GObject).name : 'unnamed'}</label>\r\n        </div>\r\n        {data.className !== 'DOperation' && data.children.map((child, i) => {\r\n            return <Child key={i} data={child} />\r\n        })}\r\n    </div>\r\n}\r\n\r\nfunction TreeEditorComponent(props: AllProps) {\r\n    const data = props.data;\r\n    if(data) {\r\n        const classname = data.className.slice(1).toLowerCase();\r\n        const css = classname + '-name';\r\n        // I got problems with operation's exception\r\n        return <div className={'p-2'}>\r\n            <div className={'d-flex'}>\r\n                <button className={'btn'}>\r\n                    <i className={'bi bi-eye-slash'}></i>\r\n                </button>\r\n                <label className={css + ' ms-1 text-capitalize my-auto'}>{classname}:</label>\r\n                <label className={'ms-1 my-auto'}>{((data as GObject).name) ? (data as GObject).name : 'unnamed'}</label>\r\n            </div>\r\n            {data.className !== 'DOperation' && data.children.map((child, i) => {\r\n                return <Child key={i} data={child} />\r\n            })}\r\n        </div>\r\n    } else return <></>\r\n}\r\ninterface OwnProps { }\r\ninterface StateProps { data: LModelElement|undefined }\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer = state._lastSelected?.modelElement;\r\n    if(pointer) ret.data = LModelElement.fromPointer(pointer);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TreeEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TreeEditorComponent);\r\n\r\nexport const TreeEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <TreeEditorConnected {...{...props, children}} />;\r\n}\r\nexport default TreeEditor;\r\n","import React from \"react\";\r\nimport type {LViewElement} from \"../../../view/viewElement/view\";\r\nimport {DViewElement} from \"../../../view/viewElement/view\";\r\nimport {CreateElementAction, DeleteElementAction, SetRootFieldAction} from \"../../../redux/action/action\";\r\nimport {U} from \"../../../joiner\";\r\n\r\ninterface Props { views: LViewElement[]; }\r\nfunction ViewsData(props: Props) {\r\n    const views = props.views;\r\n\r\n    const add = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n        const jsx =`<div className={'root bg-white'}>Hello World!</div>`;\r\n        const view: DViewElement = DViewElement.new('View', jsx);\r\n        CreateElementAction.new(view);\r\n        SetRootFieldAction.new('stackViews', view.id, '+=', true);\r\n    }\r\n    const remove = (evt: React.MouseEvent<HTMLButtonElement>, index:number, view: LViewElement) => {\r\n        SetRootFieldAction.new('viewelements', view.id, '-=', true);\r\n        DeleteElementAction.new(view.id);\r\n    }\r\n    const select = (evt: React.MouseEvent<HTMLButtonElement>, view: LViewElement) => {\r\n        SetRootFieldAction.new('stackViews', view.id, '+=', true);\r\n    }\r\n\r\n    return(<div>\r\n        <div className={'d-flex p-2'}>\r\n            <b className={'ms-1 my-auto'}>VIEWS</b>\r\n            <button className={'btn btn-primary ms-auto'} onClick={add}>\r\n                <i className={'p-1 bi bi-plus'}></i>\r\n            </button>\r\n        </div>\r\n        {views.map((view, i) => {\r\n            return <div key={i} className={'d-flex p-1 mt-1 border round'}>\r\n                <label className={'my-auto'}>{view?.name}</label>\r\n                <button className={'btn btn-success ms-auto'} onClick={(evt) => {select(evt, view)}}>\r\n                    <i className={'p-1 bi bi-info-lg'}></i>\r\n                </button>\r\n                <button className={'btn btn-danger ms-1'} disabled={U.getDefaultViewsID().includes(view.id)}\r\n                        onClick={(evt) => {remove(evt, i, view)}}>\r\n                    <i className={'p-1 bi bi-trash3-fill'}></i>\r\n                </button>\r\n            </div>\r\n        })}\r\n    </div>);\r\n}\r\n\r\nexport default ViewsData;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {DState, DViewElement, LViewElement, Pointer, U} from \"../../../joiner\";\r\n\r\n\r\nfunction JsxEditorComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = U.getDefaultViewsID().includes(view.id);\r\n    const [jsx, setJsx] = useStateIfMounted(view.jsxString);\r\n\r\n    const change = (value: string|undefined) => {\r\n        if(value !== undefined) setJsx(value);\r\n        //if(value !== undefined) view.jsxString = value;\r\n    }\r\n\r\n\r\n    const blur = (evt: React.FocusEvent<HTMLDivElement>) => {\r\n        view.jsxString = jsx;\r\n    }\r\n\r\n    return <div style={{marginTop: '2.5em', height: '10em'}} tabIndex={-1} onBlur={blur}>\r\n        <label className={'ms-1'}>JSX Editor</label>\r\n        <Editor className={'mx-1'} onChange={change} options={{readOnly: readOnly}}\r\n                defaultLanguage={'html'} value={view.jsxString} />\r\n    </div>;\r\n}\r\ninterface OwnProps { viewid: Pointer<DViewElement, 1, 1, LViewElement>; }\r\ninterface StateProps { view: LViewElement }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.view = LViewElement.fromPointer(ownProps.viewid);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const JsxEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(JsxEditorComponent);\r\n\r\nexport const JsxEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <JsxEditorConnected {...{...props, children}} />;\r\n}\r\nexport default JsxEditor;\r\n","import React from \"react\";\r\nimport type {LViewElement, LViewPoint, DViewPoint} from \"../../../joiner\";\r\nimport {SetFieldAction, SetRootFieldAction} from \"../../../redux/action/action\";\r\nimport OclEditor from \"../oclEditor/OclEditor\";\r\nimport JsxEditor from \"../jsxEditor/JsxEditor\";\r\nimport {U,\r\n    Select,\r\n    TextArea,\r\n    Input,\r\n    EdgeBendingMode,\r\n    CoordinateMode} from \"../../../joiner\";\r\nimport {EdgeGapMode} from \"../../../joiner/types\";\r\n\r\ninterface Props { view: LViewElement; viewpoints: LViewPoint[]; }\r\n\r\nconst objectTypes = [\"\", \"DModel\", \"DPackage\", \"DEnumerator\", \"DEnumLiteral\", \"DClass\", \"DAttribute\", \"DReference\", \"DOperation\", \"DParameter\", \"DObject\", \"DValue\", \"DStructuralFeature\"];\r\nlet classesOptions =\r\n    <optgroup label={\"Object type\"}>{objectTypes.map(\r\n        (o)=><option key={o} value={o}>{o.length ? o.substring(1) : \"anything\"}</option>)}\r\n    </optgroup>;\r\n\r\nfunction ViewData(props: Props) {\r\n    const view = props.view;\r\n    const viewpoints = props.viewpoints;\r\n    const readOnly = U.getDefaultViewsID().includes(view.id);\r\n\r\n    const back = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n        SetRootFieldAction.new('stackViews', undefined, '-=', true);\r\n    }\r\n    const changeVP = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        if(value !== 'null') SetFieldAction.new(view.id, 'viewpoint', value, '', true);\r\n        else SetFieldAction.new(view.id, 'viewpoint', '', '', false);\r\n    }\r\n\r\n    const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        SetFieldAction.new(view.id, 'forceNodeType', value, '', false);\r\n    }\r\n\r\n    return(<div>\r\n        <div className={'d-flex p-2'}>\r\n            <b className={'ms-1 my-auto'}>VIEW</b>\r\n            <button className={'btn btn-danger ms-auto'} onClick={back}>\r\n                <i className={'p-1 bi bi-arrow-left'}></i>\r\n            </button>\r\n        </div>\r\n        <Input data={view} field={\"name\"} label={\"Name\"} type={\"text\"}/>\r\n        <Input data={view} field={\"explicitApplicationPriority\"} label={\"Priority\"} type={\"number\"}/>\r\n        {/*<Select obj={view} field={\"useSizeFrom\"} options={\r\n            <optgroup label=\"Node position depends from what?\">\r\n                <option value={EuseSizeFrom.view}>View</option>\r\n                <option value={EuseSizeFrom.node}>Graph: Same position in different views</option>\r\n                <option value={EuseSizeFrom.node}>Node: Never the same position (default)</option>\r\n            </optgroup>\r\n        } tooltip={ \"View: Elements with the same view will keep the same position in different graphs\\n\" +\r\n                    \"Graph: Element in a graph will maintain the position when changing view\\n\"+\r\n                    \"Node: Ensuring every visual element uses his personal size (default)\"\r\n        }></Select>*/}\r\n        <Input data={view} field={\"width\"} label={\"Width\"} type={\"number\"}/>\r\n        <Input data={view} field={\"height\"} label={\"Height\"} type={\"number\"}/>\r\n\r\n        <TextArea data={view} field={\"constants\"} label={\"Constants\"} />\r\n        <TextArea data={view} field={\"preRenderFunc\"} label={\"PreRender Function\"} />\r\n        <Input data={view} field={\"scalezoomx\"} label={\"Zoom X\"} type={\"number\"}/>\r\n        <Input data={view} field={\"scalezoomy\"} label={\"Zoom Y\"} type={\"number\"}/>\r\n        <div className={'d-flex p-1'}>\r\n            <label className={'my-auto'}>Force Node</label>\r\n            <select className={'my-auto ms-auto select'} disabled={readOnly}\r\n                    value={view.forceNodeType} onChange={changeFN}>\r\n                <option value={undefined}>-----</option>\r\n                {['Graph', 'GraphVertex', 'Vertex', 'Field'].map((node, index) => {\r\n                    return(<option key={index} value={node}>{node}</option>);\r\n                })}\r\n            </select>\r\n        </div>\r\n\r\n        {/*from damiano: il primo StoreSize tooltip funziona, il secondo no. perchè?\r\n        l'html viene popolato correttamente ma risulta opacità 0, puoi cercare di risolverlo tu?*/}\r\n        <Input data={view} field={\"storeSize\"} label={\"store Size\"} tooltip={\r\n            <div>\"Active: the node position depends from the view currently displayed. Inactive: it depends from the graph.\"</div>} type={\"checkbox\"} />\r\n        <Input data={view} field={\"storeSize\"} label={\"Store Size\"} type={\"checkbox\"} tooltip={true}/>\r\n        <Input data={view} field={\"lazySizeUpdate\"} label={\"Lazy Update\"} type={\"checkbox\"} tooltip={true}/>\r\n        <Input data={view} field={\"adaptWidth\"} label={\"Adapt Width\"} type={\"checkbox\"}/>\r\n        <Input data={view} field={\"adaptHeight\"} label={\"Adapt Height\"} type={\"checkbox\"}/>\r\n        <Input data={view} field={\"draggable\"} label={\"Draggable\"} type={\"checkbox\"}/>\r\n        <Input data={view} field={\"resizable\"} label={\"Resizable\"} type={\"checkbox\"}/>\r\n        <div className={'d-flex p-1'}>\r\n            <label className={'my-auto'}>Viewpoint</label>\r\n            <select className={'my-auto ms-auto select'} disabled={readOnly}\r\n                    value={String(view.viewpoint?.id)} onChange={changeVP}>\r\n                <option value={'null'}>-----</option>\r\n                {viewpoints.map((viewpoint, index) => {\r\n                    return(<option key={index} value={viewpoint.id}>{viewpoint.name}</option>);\r\n                })}\r\n            </select>\r\n        </div>\r\n        <TextArea data={view} field={'onDragStart'} label={'OnDragStart'} />\r\n        <TextArea data={view} field={'onDragEnd'} label={'OnDragEnd'} />\r\n        <TextArea data={view} field={'onResizeStart'} label={'OnResizeStart'} />\r\n        <TextArea data={view} field={'onResizeEnd'} label={'OnResizeEnd'} />\r\n        <div className=\"p-1\" style={{display: \"flex\"}}><label className=\"my-auto\">Appliable to</label>\r\n            <select data-obj={view.id} data-field={'appliableToClasses'} data-label={'Appliable to'} data-options={classesOptions}\r\n                    value={view.appliableToClasses[0] || ''} onChange={(e) => { view.appliableToClasses = e.target.value as any; }}\r\n                    className={\"my-auto ms-auto select\"} disabled={readOnly}>\r\n                {classesOptions}\r\n            </select>\r\n        </div>\r\n        <section><h1>Edge options</h1>\r\n            <b>to do</b>\r\n            <div style={{display: \"none\"}}>\r\n                <select data-data={view} data-field={\"bendingMode\"} onChange={(e)=> view.bendingMode = e.target.value as any} value={view.bendingMode} data-value={view.bendingMode}>\r\n                    <optgroup label={\"How the edge should bend to address EdgePoints\"}>{\r\n                        Object.keys(EdgeBendingMode).map( k => <option value={(EdgeBendingMode as any)[k]}>{k}</option>)\r\n                    }</optgroup></select>\r\n\r\n                <Input data={view} field={\"edgeEndStopAtBoundaries\"} />\r\n                {/*view.*/}\r\n            </div>\r\n        </section>\r\n        <section><h1>EdgePoint options</h1>\r\n            <b>to do</b>\r\n            <div style={{display: \"none\"}}>\r\n            <select data-data={view} data-field={\"edgePointCoordMode\"} onChange={(e)=> view.edgePointCoordMode = e.target.value as any}\r\n                    value={view.edgePointCoordMode} data-value={view.edgePointCoordMode}>\r\n                <optgroup label={\"How the edge should bend to address EdgePoints\"}>{\r\n                    Object.keys(CoordinateMode).map( k => <option value={(CoordinateMode as any)[k]}>{k}</option>)\r\n                }</optgroup></select>\r\n            <select data-data={view} data-field={\"edgeGapMode\"} onChange={(e)=> view.edgeGapMode = e.target.value as any}\r\n                    value={view.edgeGapMode} data-value={view.edgeGapMode}>\r\n                <optgroup label={\"How to stop upon meeting an EdgePoint\"}>{\r\n                    Object.keys(EdgeGapMode).map( k => <option value={(EdgeGapMode as any)[k]}>{k}</option>)\r\n                }</optgroup></select>\r\n            </div>\r\n        </section>\r\n\r\n        {/* damiano: qui Select component avrebbe fatto comodo al posto del select nativo, ma è troppo poco generica*/}\r\n        <div className=\"p-1\" style={{display: \"flex\"}}><label className=\"my-auto\">Appliable to</label>\r\n            <select data-obj={view.id} data-field={'appliableToClasses'} data-label={'Appliable to'} data-options={ classesOptions }\r\n                value={view.appliableToClasses[0] || ''} onChange={(e) => { view.appliableToClasses = e.target.value as any; }}\r\n                className={\"my-auto ms-auto select\"}>\r\n            {classesOptions}\r\n            </select>\r\n        </div>\r\n        <OclEditor viewid={view.id} />\r\n        <JsxEditor viewid={view.id} />\r\n    </div>);\r\n}\r\n\r\nexport default ViewData;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {DState} from \"../../../redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {LViewElement, LViewPoint} from \"../../../joiner\";\r\nimport ViewsData from \"./Views\";\r\nimport ViewData from \"./View\";\r\n\r\n\r\nfunction ViewsEditorComponent(props: AllProps) {\r\n\r\n    const views = props.views;\r\n    const stackViews = props.stackViews;\r\n    const viewpoints = props.viewpoints;\r\n\r\n    return(<div>\r\n        {(stackViews.length > 0) ?\r\n            <ViewData view={stackViews[stackViews.length - 1]} viewpoints={viewpoints} /> :\r\n            <ViewsData views={views} />}\r\n    </div>);\r\n}\r\ninterface OwnProps { }\r\ninterface StateProps {\r\n    views: LViewElement[];\r\n    stackViews: LViewElement[];\r\n    viewpoints: LViewPoint[];\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.views = LViewElement.fromPointer(state.viewelements);\r\n    ret.stackViews = LViewElement.fromPointer(state.stackViews);\r\n    ret.viewpoints = LViewPoint.fromPointer(state.viewpoints);\r\n    ret.views = ret.views.filter(view => !(view.viewpoint) || view.viewpoint?.id === state.viewpoint);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ViewsEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ViewsEditorComponent);\r\n\r\nexport const ViewsEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ViewsEditorConnected {...{...props, children}} />;\r\n}\r\nexport default ViewsEditor;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState} from \"../../../redux/store\";\r\nimport {LModelElement, LViewElement, LGraphElement, Input}  from \"../../../joiner\";\r\n\r\nfunction StyleEditorComponent(props: AllProps) {\r\n    const selected = props.selected;\r\n    if(!selected) return(<></>);\r\n    return(<div className={'p-3'}>\r\n        {/*<Input obj={selected.node} field={\"id\"} label={\"ID\"} type={\"text\"} readonly={true}/>*/}\r\n        <Input data={selected.node} field={\"x\"} label={\"X Position\"} type={\"number\"} readonly={true} />\r\n        <Input data={selected.node} field={\"y\"} label={\"Y Position\"} type={\"number\"} readonly={true} />\r\n        <Input data={selected.node} field={\"width\"} label={\"Width\"} type={\"number\"} readonly={true} />\r\n        <Input data={selected.node} field={\"height\"} label={\"Height\"} type={\"number\"} readonly={true} />\r\n        <Input data={selected.node} field={\"zIndex\"} label={\"Z Index\"} type={\"number\"} readonly={true} />\r\n        <Input data={selected.node} field={\"selectedBy\"} label={\"Selected By\"} type={\"text\"} readonly={true} />\r\n    </div>);\r\n\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    selected?: {\r\n        node: LGraphElement;\r\n        view: LViewElement;\r\n        modelElement?: LModelElement\r\n    };\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    let ret: StateProps = {};\r\n    const selected = state._lastSelected;\r\n    if(selected) {\r\n        const modelElement = state._lastSelected?.modelElement;\r\n        const node = state._lastSelected?.node;\r\n        const view = state._lastSelected?.view;\r\n        if(node && view) {\r\n            ret.selected = {\r\n                node: LGraphElement.fromPointer(node),\r\n                view: LViewElement.fromPointer(node),\r\n                modelElement: (modelElement) ? LModelElement.fromPointer(modelElement) : undefined\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const StyleEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StyleEditorComponent);\r\n\r\nexport const StyleEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <StyleEditorConnected {...{...props, children}} />;\r\n}\r\nexport default StyleEditor;\r\n\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState, GObject, SetRootFieldAction} from \"../../../joiner\";\r\n\r\n\r\nfunction EdgeEditorComponent(props: AllProps) {\r\n    const strokeWidth = props.strokeWidth;\r\n    const zIndex = props.zIndex;\r\n    const color = props.color;\r\n    const path = props.path;\r\n    const extend = props.extend;\r\n    const referenceM2 = props.referenceM2;\r\n    const referenceM1 = props.referenceM1;\r\n\r\n    const changeOptions = (evt: React.ChangeEvent<HTMLInputElement|HTMLSelectElement>, field: string) => {\r\n        const value = evt.target.value;\r\n        if(value) {\r\n            const options: GObject = {strokeWidth, zIndex, color, path};\r\n            options[field] = value;\r\n            SetRootFieldAction.new('_edgeSettings', options, '', false);\r\n        }\r\n    }\r\n\r\n    const changeDisplayed = (evt: React.ChangeEvent<HTMLInputElement>, field: string) => {\r\n        const value = evt.target.checked;\r\n        const options: GObject = {extend, referenceM2, referenceM1};\r\n        options[field] = value;\r\n        SetRootFieldAction.new('_edgesDisplayed', options, '', false);\r\n    }\r\n\r\n    return(<div className={\"mt-3\"}>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Stroke Width</label>\r\n            <input value={strokeWidth} className={\"input ms-auto\"} type={'number'} step={0.1} min={0}\r\n                   onChange={(evt) => changeOptions(evt, 'strokeWidth')} />\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Z Index</label>\r\n            <input value={zIndex} className={\"input ms-auto\"} type={'number'} step={1}\r\n                   onChange={(evt) => changeOptions(evt, 'zIndex')} />\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Color</label>\r\n            <input value={color} className={\"input ms-auto\"} type={'color'}\r\n                   onChange={(evt) => changeOptions(evt, 'color')} />\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Path</label>\r\n            <select value={path} className={\"select ms-auto\"} onChange={(evt) => changeOptions(evt, 'path')}>\r\n                <option value={'grid'}>Grid</option>\r\n                <option value={'smooth'}>Smooth</option>\r\n                <option value={'straight'}>Straight</option>\r\n            </select>\r\n\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Display Extends</label>\r\n            <input checked={extend} className={\"input ms-auto\"} type={'checkbox'}\r\n                   onChange={(evt) => changeDisplayed(evt, 'extend')} />\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Display References on M2</label>\r\n            <input checked={referenceM2} className={\"input ms-auto\"} type={'checkbox'}\r\n                   onChange={(evt) => changeDisplayed(evt, 'referenceM2')} />\r\n        </div>\r\n        <div className={\"d-flex mx-3 mt-1\"}>\r\n            <label>Display References on M1</label>\r\n            <input checked={referenceM1} className={\"input ms-auto\"} type={'checkbox'}\r\n                   onChange={(evt) => changeDisplayed(evt, 'referenceM1')} />\r\n        </div>\r\n    </div>);\r\n}\r\ninterface OwnProps { }\r\ninterface StateProps {\r\n    strokeWidth: number, zIndex: number, color: string, path: string,\r\n    extend: boolean, referenceM2: boolean, referenceM1: boolean\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;/*\r\n    ret.strokeWidth = edgeSettings.strokeWidth;\r\n    ret.zIndex = edgeSettings.zIndex;\r\n    ret.color = edgeSettings.color;\r\n    ret.path = edgeSettings.path;\r\n    const edgesDisplayed = state._edgesDisplayed;\r\n    ret.extend = edgesDisplayed.extend;\r\n    ret.referenceM2 = edgesDisplayed.referenceM2;\r\n    ret.referenceM1 = edgesDisplayed.referenceM1;*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgeEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeEditorComponent);\r\n\r\nexport const EdgeEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeEditorConnected {...{...props, children}} />;\r\n}\r\nexport default EdgeEditor;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {CreateElementAction, SetFieldAction, SetRootFieldAction, DState, DViewPoint, Input, LViewElement, LViewPoint, Pointer, U} from \"../../../joiner\";\r\n\r\n\r\nfunction ViewpointsEditorComponent(props: AllProps) {\r\n    const views = props.views;\r\n    const viewpoints = props.viewpoints;\r\n    const selected = props.selected;\r\n\r\n    const editName = (evt: React.ChangeEvent<HTMLInputElement>, viewpoint: LViewPoint) => {\r\n        viewpoint.name = evt.target.value;\r\n    }\r\n    const add = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n        const dViewPoint = DViewPoint.new('ViewPoint', '');\r\n        CreateElementAction.new(dViewPoint);\r\n    }\r\n    const remove = (index: number, viewpoint: LViewPoint) => {\r\n        const filteredViews = views.filter(view => view.viewpoint?.id === viewpoint.id);\r\n        for(let view of filteredViews) SetFieldAction.new(view.id, 'viewpoint', null);\r\n        SetRootFieldAction.new('viewpoints', index, '-=', true);\r\n    }\r\n    const select = (viewpoint: LViewPoint) => {\r\n        SetRootFieldAction.new('viewpoint', viewpoint.id, '', true);\r\n    }\r\n\r\n    return(<div>\r\n        <div className={'d-flex p-2'}>\r\n            <b className={'ms-1 my-auto'}>VIEWPOINTS</b>\r\n            <button className={'btn btn-primary ms-auto'} onClick={add}>\r\n                <i className={'p-1 bi bi-plus'}></i>\r\n            </button>\r\n        </div>\r\n        {viewpoints.map((viewpoint, index) => {\r\n            return <div key={index} className={'d-flex p-1 mt-1 border round'}\r\n                        style={{ backgroundColor: (selected.id === viewpoint.id) ? 'white' : 'transparent'}}>\r\n                <input className={'p-0 input hidden-input'} value={viewpoint.name} type={'text'}\r\n                       onChange={(evt) => {editName(evt, viewpoint)}} disabled={index === 0} />\r\n                <button className={'btn btn-success ms-auto'} disabled={selected.id === viewpoint.id}\r\n                        onClick={(evt) => {select(viewpoint)}}>\r\n                    <i className={'p-1 bi bi-check2'}></i>\r\n                </button>\r\n                <button className={'btn btn-danger ms-1'} disabled={index === 0 || selected.id === viewpoint.id}\r\n                        onClick={(evt) => {remove(index, viewpoint)}}>\r\n                    <i className={'p-1 bi bi-trash3-fill'}></i>\r\n                </button>\r\n            </div>\r\n        })}\r\n    </div>);\r\n}\r\ninterface OwnProps { }\r\ninterface StateProps {\r\n    viewpoints: LViewPoint[],\r\n    selected: LViewPoint,\r\n    views: LViewElement[]\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.viewpoints = LViewPoint.fromPointer(state.viewpoints);\r\n    ret.selected = LViewPoint.fromPointer(state.viewpoint);\r\n    ret.views = LViewElement.fromPointer(state.viewelements.slice(10))\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ViewpointsEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ViewpointsEditorComponent);\r\n\r\nexport const ViewpointsEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ViewpointsEditorConnected {...{...props, children}} />;\r\n}\r\nexport default ViewpointsEditor;\r\n","import React, {Dispatch, PureComponent, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DState,\r\n    DGraphElement,\r\n    Dictionary,\r\n    GObject,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    Pointer,\r\n    RuntimeAccessibleClass,\r\n    U,\r\n    windoww\r\n} from \"../../../joiner\";\r\nimport * as util from \"util\";\r\nimport {GraphElementComponent} from \"../../../graph/graphElement/graphElement\";\r\n\r\nvar Convert = require('ansi-to-html');\r\nvar ansiConvert = new Convert();\r\n(window as any).ansiconvert = ansiConvert;\r\n\r\nclass ThisState{\r\n    expression!: string;\r\n    output: any;\r\n}\r\n\r\n// trasformato in class component così puoi usare il this nella console. e non usa accidentalmente window come contesto\r\n\r\nlet hiddenkeys = [\"pointedBy\", \"clonedCounter\", \"parent\", \"_subMaps\", \"inspect\", \"__random\"];\r\nfunction fixproxy(output: any/*but not array*/, hideDKeys: boolean = true, addLKeys: boolean = true):\r\n    { output: any, shortcuts?: GObject<'L singleton'>, comments?: Dictionary<string, string | {type:string, txt:string}>, hiddenkeys?: GObject} {\r\n\r\n    let proxy: LPointerTargetable | undefined;\r\n    if (output?.__isProxy) {\r\n        proxy = output;\r\n        output = output.__raw; //Object.fromEntries(Object.getOwnPropertyNames(p).map(k => [k, p[k]]));\r\n    } else proxy = undefined;\r\n\r\n    let ret: ReturnType<typeof fixproxy> = {output};\r\n    switch(typeof output) {\r\n        case \"function\": return {output: U.buildFunctionDocumentation(output)};\r\n        default: return {output};\r\n        case \"object\":\r\n            ret.output = output = {...output};\r\n            if ((addLKeys && proxy)) {\r\n                console.log(\"console output\", {output, proxy});\r\n                let Lsingleton: GObject<'L singleton'> = (RuntimeAccessibleClass.get(output?.className)?.logic?.singleton) || {};\r\n                let comments: Dictionary<string, string | {type:string, txt:string}> = {};\r\n                ret.shortcuts = {...Lsingleton};\r\n                ret.comments = comments;\r\n                for (let key in output) {\r\n                    if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\r\n                }\r\n                for (let key in Lsingleton) {\r\n                    // todo: might define some func private in L like \"private info_of_fieldname\" where fuction body is comment documentation extracted,\r\n                    //  or actually directly private info_of_id = <a href=\"...\"><span>Unique identifier, and value used to point this object.</span></a>\r\n                    if ((key in output) || (key.indexOf(\"__info_of__\") === 0)) {\r\n                        delete ret.shortcuts[key];\r\n                        continue;\r\n                    } else { if (ret.shortcuts[key] === undefined) ret.shortcuts[key] = ''; }\r\n                    if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\r\n                    if (comments[key]) continue; // if explicitly commented, i will not attempt to generate documentation.\r\n                    let entryvalue = Lsingleton[key];\r\n                    switch (typeof entryvalue) {\r\n                        case \"object\":\r\n                        case \"function\":\r\n                            ret.shortcuts[key] = U.buildFunctionDocumentation(entryvalue);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (hiddenkeys) {\r\n                ret.hiddenkeys = {};\r\n                for (let key of hiddenkeys) {\r\n                    ret.hiddenkeys[key] = output[key];\r\n                    delete output[key];\r\n                    // delete output.shortcuts[key];\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    return ret; }\r\n\r\nexport class ConsoleComponent extends PureComponent<AllProps, ThisState>{\r\n    lastNode?: Pointer<DGraphElement>;\r\n    constructor(props: AllProps) {\r\n        super(props);\r\n        this.state = {expression:'', output: null};\r\n        this.change = this.change.bind(this);\r\n        this.change(undefined);\r\n    }\r\n    private _context: GObject = {};\r\n    change(evt?: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        if (!this) return; // component being destroyed and remade after code hot update\r\n        let expression: string | undefined = evt?.target.value.trim() || this.state.expression || '';\r\n        let output;\r\n        // let context = {...this.props, props: this.props}; // makeEvalContext(this.props as any, {} as any);\r\n\r\n        if (this.props.node?.id) {\r\n            let component = GraphElementComponent.map[this.props.node.id];\r\n            this._context = {...component.props.evalContext};\r\n            this._context.fromcomponent = true;\r\n        }\r\n        else {\r\n            this._context = {...this.props, props: this.props};\r\n        }\r\n        try { output = U.evalInContextAndScope(expression || 'undefined', this._context, this._context); }\r\n        catch (e: any) {\r\n            console.error(\"console error\", e);\r\n            output = '<span style=\"color:red\">Invalid Syntax!<br></span>' + e.toString(); }\r\n        this.setState({expression, output});\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;/*\r\n        const [expression, setExpression] = useStateIfMounted('data');\r\n        const [output, setOutput] = useStateIfMounted('');*/\r\n        if (!this.props.node) return(<></>);\r\n        if (this.lastNode !== this.props.node.id) this.change(); // force reevaluation if selected node changed\r\n        this.lastNode = this.props.node.id;\r\n\r\n            let outstr;\r\n            // try { outstr = U.circularStringify(this.state.output, (key, value)=> { return value.__isProxy ? value.name : value; }, \"\\t\", 1) }\r\n            // (window as any).inspect = util.inspect;\r\n            // (window as any).tmpp = this.state.output;\r\n            let ashtml: boolean\r\n            let output: any = this.state.output;\r\n            let shortcuts: GObject<'L singleton'> | undefined = undefined;\r\n            let comments: Dictionary<string, string | {type:string, txt:string}> | undefined = undefined;\r\n            let hidden: Dictionary<string, string> | undefined = undefined;\r\n            try {\r\n                let hiddenkeys: GObject | undefined = {};\r\n                if (Array.isArray(output) && output[0]?.__isProxy) {\r\n                    output = output.map(o => fixproxy(o).output);\r\n                    comments = {\"separator\": '<span>Similar to <a href={\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"}>Array.join(separator)</a>' +\r\n                            ', but supports array of JSX nodes and JSX as separator argument.</span>'};\r\n                    shortcuts = {\"separator\": \"\"};\r\n                    console.log(\"console result (array):\", {output});\r\n                }\r\n                else {\r\n                    let ret = fixproxy(output);\r\n                    output = ret.output;\r\n                    comments = ret.comments;\r\n                    shortcuts = ret.shortcuts;\r\n                    hidden = ret.hiddenkeys;\r\n                    console.log(\"console result:\", {output, ret});\r\n                }\r\n                // todo: as i fix the displaying of a LViewElement without replacing it with __raw,\r\n                //  i will fix window, component and props displaying too i think they crash for props.data, props.view...\r\n                if (output?._reactInternals) {\r\n                    output = {\"React.Component\": {props:\"...navigate to expand...\", state:\"\", _isMounted:output._isMounted}}\r\n                }\r\n                let format = (val: GObject) => U.replaceAll(ansiConvert.toHtml(util.inspect(val, true, 2, true)), \"style=\\\"color:#FFF\\\"\", \"style=\\\"color:#000\\\"\");\r\n                outstr = \"<h4>Result:</h4>\" + format(output);\r\n                if (shortcuts || comments){\r\n                    // if(!shortcuts) shortcuts = {};\r\n                    if(!comments) comments = {};\r\n                    if (shortcuts) outstr += \"<br><br><h4>Shortcuts</h4>\" + format(shortcuts);\r\n                    if (hidden) outstr +=\"<br><br><h4>Other less useful properties</h4>\" + format(hidden);\r\n                    for (let commentKey in comments){\r\n                        let commentVal: any = comments[commentKey];\r\n                        if (commentVal?.type) commentVal = \":\" + commentVal?.type + \" ~ \" + commentVal?.txt;\r\n                        let commentKeyEscaped = U.multiReplaceAll(commentKey, [\"$\", \"-\"], [\"\\\\$\", \"\\\\-\"]); // _ should be safe, .-,?^ not happening?\r\n                        let regexp = new RegExp(\"^({?\\\\s*\" +commentKey+\":.*)$\", \"gm\");\r\n                        outstr = outstr.replace(regexp, \"$1 // \" + commentVal);\r\n                    }\r\n                }\r\n                ashtml = true; }\r\n            catch(e: any) {\r\n                console.error(e);\r\n                throw e;\r\n                outstr = \"[circular object]: \" + e.toString();\r\n                ashtml = false;\r\n            }\r\n            console.log(\"console result (string)\", {outstr});\r\n            let contextkeys;\r\n            let objraw = this.state.output?.__raw || (typeof this.state.output === \"object\" ? this.state.output : \"[primitiveValue]\") || {};\r\n            if (this.state.expression.trim() === \"\") contextkeys = [\"data\", \"node\", \"view\", \"getSize()\", \"setSize({x:?, y:?, w:?, h:?})\", \"component\"].join(\", \");\r\n            else if (this.state.expression.trim() === \"this\") contextkeys = [\"Warning: \\\"this\\\" will refer to the Console component instead of a GraphElement component.\"].join(\", \");\r\n            else contextkeys = Array.isArray(objraw) ? [\"array[number]\", ...Object.keys(Array.prototype)].join(\"</br>\") : Object.getOwnPropertyNames(objraw).join(\", \");// || []).join(\", \")\r\n\r\n            this.setNativeConsoleVariables();\r\n            return(<div className={'p-2 w-100 h-100'}>\r\n                <textarea spellCheck={false} className={'p-0 input mb-2 w-100'} onChange={this.change} />\r\n                {/*<label>Query {(this.state.expression)}</label>*/}\r\n                <label>On {((data as GObject)?.name || \"model-less node (\" + this.props.node.className + \")\") + \" - \" + this.props.node?.className}</label>\r\n                <hr className={'mt-1 mb-1'} />\r\n                { ashtml && <div style={{whiteSpace:\"pre\"}} dangerouslySetInnerHTML={ashtml ? { __html: outstr as string} : undefined} /> }\r\n                { !ashtml && <div style={{whiteSpace:\"pre\"}}>{ outstr }</div>}\r\n                <label className={\"mt-2\"}>Context keys:</label>\r\n                {\r\n                    contextkeys\r\n                }\r\n            </div>)\r\n    }\r\n\r\n    private setNativeConsoleVariables(): void { // just fordebugging\r\n        let context = this._context;\r\n        windoww.context = context;\r\n        windoww.data = context.data;\r\n        windoww.node = context.node;\r\n        windoww.edge = context.edge;\r\n        windoww.output = this.state.output;\r\n        if (context.data?.model) windoww.model = context.data?.model;\r\n    }\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps { data: LModelElement|undefined, node: LGraphElement|undefined, view: LViewElement|undefined }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    let ptr;\r\n    ptr = state._lastSelected?.modelElement;\r\n    ret.data = (ptr) ? LModelElement.fromPointer(ptr) : undefined;\r\n    ptr = state._lastSelected?.node;\r\n    ret.node = (ptr) ? LModelElement.fromPointer(ptr) : undefined;\r\n    ptr = state._lastSelected?.view;\r\n    ret.view = (ptr) ? LModelElement.fromPointer(ptr) : undefined;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ConsoleConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ConsoleComponent);\r\n\r\nexport const Console = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ConsoleConnected {...{...props, children}} />;\r\n}\r\nexport default Console;\r\n","import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./toolbar.scss\";\r\nimport {\r\n    DState,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DNamedElement,\r\n    DObject,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DViewElement,\r\n    LGraphElement,\r\n    LModel,\r\n    LModelElement,\r\n    LObject,\r\n    LValue,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Pointer,\r\n    SetFieldAction,\r\n    RuntimeAccessibleClass,\r\n    DVoidEdge,\r\n    DEdge,\r\n    DEdgePoint,\r\n    EdgeSegment,\r\n    LVoidEdge,\r\n    Constructors,\r\n    WVoidEdge,\r\n    Log,\r\n    LEdgePoint\r\n} from \"../../joiner\";\r\nimport {InitialVertexSizeObj} from \"../../joiner/types\";\r\n\r\ninterface ThisState {}\r\n\r\nfunction getItems(data: LModelElement|undefined, myDictValidator: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]>, items: string[], node?:LGraphElement): ReactNode[] {\r\n    const reactNodes: ReactNode[] = [];\r\n    // todo: does myDictValidator have any reason to exist? if something is invalid it should not make it on toolbar jsx generated list\r\n    for (let item_dname of items) {\r\n        if (item_dname[0]==\"_\") {\r\n            item_dname = item_dname.substring(2);\r\n            data = data?.father || data;\r\n        }\r\n        let item = item_dname.substring(1).toLowerCase();\r\n        reactNodes.push(<div className={\"toolbar-item \" + item} key={item_dname} onClick={() => {\r\n            console.log(\"toolbar click:\", {item_dname, data, myDictValidator, items, node});\r\n            switch(item_dname){\r\n                case DVoidEdge.name:\r\n                case DEdge.name:\r\n                    // no add edges through toolbar for now\r\n                    break;\r\n                case DEdgePoint.name:\r\n                    let ledge: LVoidEdge = (node as LEdgePoint | LVoidEdge).edge;\r\n                    let dedge: DVoidEdge = ledge.__raw;\r\n                    let wedge: WVoidEdge = ledge as any;\r\n                    console.log(\"toolbar click:\", {item_dname, data, skip:!myDictValidator[item_dname], items, ledge});\r\n                    // if (!myDictValidator[item_dname]) return;\r\n                    let longestSeg: EdgeSegment = undefined as any; // just because compiler does not know it is always found through the for loop\r\n                    let longestIndex: number=0;\r\n                    let segms = ledge.segments.segments;\r\n                    // longestIndex = segms.length - 1;// i just put it at end because this edgepoint\r\n                    for (; longestIndex < segms.length; longestIndex++) if (segms[longestIndex].isLongest) { longestSeg = segms[longestIndex]; break;}\r\n                    // let index = edge.segments.all.findIndex((s: EdgeSegment) => s.isLongest);\r\n                    let newmp: InitialVertexSizeObj = {...(longestSeg.start.pt.add(longestSeg.end.pt, true).divide(2)), w: 15, h: 15, index:longestIndex};\r\n                    // @ts-ignore\r\n                    newmp.x -= newmp.w/2; newmp.y -= newmp.h/2;\r\n\r\n                    newmp.id = Constructors.makeID();\r\n                    let subelements = [...dedge.subElements];\r\n                    let prevNodeid = longestSeg.start.ge.id;\r\n                    let prevnodeindex = subelements.indexOf(prevNodeid);\r\n                    if (prevnodeindex === -1) {\r\n                        if (prevNodeid === dedge.start) prevnodeindex = 0; // first and last are not subelements\r\n                        else if (prevNodeid === dedge.end) prevnodeindex = subelements.length;\r\n                        else Log.exDevv(\"edgepoint insert position not found\", {subelements, prevNodeid, longestSeg, dedge, ledge});\r\n                    } else prevnodeindex += 1;\r\n                    let goodway = true; // not working// todo: keep his true branch and remove this when finished debug. false crashed for missing father on subelements, guess i need more delay??\r\n                    if (goodway) newmp.index = prevnodeindex;\r\n                    // delete (newmp as any).id;\r\n                    let mp = [...dedge.midPoints];\r\n                    mp.splice(longestIndex, 0, newmp);\r\n                    wedge.midPoints = mp;\r\n                    //\r\n                    let olddebug = [...subelements];\r\n                    subelements.splice(prevnodeindex, 0, newmp.id as string);\r\n                    console.log(\"injecting ep\", {prevnodeindex, newmp, prevNodeid, longestSeg, old: olddebug, new: subelements, ledge, dedge});\r\n                    // this might break pointers too\r\n                    let fixorder = () => { wedge.subElements = subelements; }\r\n                    if (!goodway) setTimeout( fixorder, 1); // need to wait edgepoint creation\r\n                    // selectNode(newmp);\r\n                    break;\r\n                default:\r\n                    if (!data || !myDictValidator) return;\r\n                    let d = data.addChild(item);\r\n                    if (myDictValidator[item_dname]) select(d); break;\r\n            }\r\n        }}>+{item}</div>);\r\n    }\r\n    return reactNodes;\r\n}\r\nfunction select(d: DModelElement): DModelElement {\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-dataid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\nfunction selectNode(d: DGraphElement|{id: string}): any {\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-nodeid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\n\r\nfunction ToolBarComponent(props: AllProps, state: ThisState) {\r\n    const lModelElement: LModelElement = props.selected?.modelElement ? props.selected?.modelElement : MyProxyHandler.wrap(props.model);\r\n    const node: LGraphElement | undefined = props.selected?.node;\r\n    const isMetamodel: boolean = props.isMetamodel;\r\n    const metamodel: LModel|undefined = props.metamodel;\r\n    // const myDictValidator: Map<string, ReactNode[]> = new Map();\r\n    const downward: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]> = {}\r\n    const addChildren = (items: string[]) => items ? getItems(lModelElement, downward, [...new Set(items)], node) : [];\r\n\r\n    downward[\"DModel\"] = [\"DPackage\"];\r\n    downward[\"DPackage\"] = [\"DPackage\", \"DClass\", \"DEnumerator\"];\r\n    downward[\"DClass\"] = [\"DAttribute\", \"DReference\", \"DOperation\"];\r\n    downward[\"DEnumerator\"] = [\"DLiteral\"];\r\n    downward[\"DOperation\"] = [\"DParameter\", \"DException\"];\r\n\r\n    // nodes\r\n    // downward[\"DEdge\"] = [\"DEdgePoint\"]\r\n    // downward[\"DVoidEdge\"] = [\"DEdgePoint\"]\r\n\r\n    // for (let parentKey in downward) myDictValidator.set(parentKey, addChildren(\"package\"));\r\n    let upward: Dictionary<DocString<\"DClassName (model)\">, DocString<\"hisDParents\">[]> = {};\r\n    for (let parentKey in downward){\r\n        let vals = downward[parentKey];\r\n        if(!vals) continue;\r\n        for (let child of vals) {\r\n            if (!upward[child]) upward[child] = [];\r\n            upward[child].push(parentKey)\r\n            upward[child].push(...(downward[parentKey]||[]));\r\n        }\r\n    }\r\n\r\n    // exceptions:\r\n    upward[\"DPackage\"] = [\"_pDPackage\"]; //, \"DModel\"]; because from a package, i don't want to prompt the user to create a model in toolbar.\r\n    upward[\"DEdgeNode\"] = []; //, \"DEdge\", \"DVoidEdge\"]; because from a edgeNode, i don't want to prompt the user to create a edge in toolbar.\r\n    // upward[\"DClass\"] = [\"_pDPackage\", \"DClass\", \"DEnumerator\"];\r\n\r\n    // if (RuntimeAccessibleClass.extends(props.selected?.node?.className, DVoidEdge)) { }\r\n    if (isMetamodel) {\r\n        return(<div className={\"toolbar mt-2\"}>\r\n            <b className={'d-block text-center text-uppercase mb-1'}>Add sibling</b>\r\n            {lModelElement && addChildren(upward[lModelElement.className])}\r\n            {node && addChildren(upward[node.className])}\r\n            <hr className={'my-2'} />\r\n            <b className={'d-block text-center text-uppercase mb-1'}>Add sublevel</b>\r\n            {lModelElement && addChildren(downward[lModelElement.className])}\r\n            {node && addChildren(downward[node.className])}\r\n            <div className={\"toolbar-item annotation\"} onClick={() => select(lModelElement.addChild(\"annotation\"))}>+annotation</div>\r\n            <hr className={'my-2'} />\r\n        </div>);\r\n    }\r\n    else {\r\n        const classes = metamodel?.classes;\r\n        const model: LModel = LModel.fromPointer(props.model);\r\n        const lobj: LObject | undefined = lModelElement.className === \"DObject\" ? lModelElement as LObject : undefined;\r\n        const lfeat: LValue | undefined = lModelElement.className === \"DValue\" ? lModelElement as LValue : undefined;\r\n\r\n        return(<div className={\"toolbar mt-2\"}>\r\n            <b className={'d-block text-center text-uppercase mb-1'}>Add root level</b>\r\n            {classes?.filter((lClass) => {return !lClass.abstract && !lClass.interface}).map((lClass, index) => {\r\n                return <div key={\"LObject_\"+lClass.id} className={\"toolbar-item LObject\"} onClick={() => { select(model.addObject(lClass.id)) }}>\r\n                    +{lClass.name}\r\n                </div>\r\n            })}\r\n            <div key={\"RawObject\"} className={\"toolbar-item class\"} onClick={() => { select(model.addObject()); }}>+Object</div>\r\n            <hr className={'my-2'} />\r\n            <b className={'d-block text-center text-uppercase mb-1'}>Add sublevel</b>\r\n            {(lobj && (!lobj.instanceof || lobj.partial)) && <div key={\"Feature\"} className={\"toolbar-item feature\"} onClick={() => { lobj.addValue(); }}>+Feature</div>}\r\n            {(lfeat && lfeat.values.length < lfeat.upperBound) && <div key={\"Value\"} className={\"toolbar-item value\"} onClick={() => {\r\n                SetFieldAction.new(lfeat.id, 'value' as any, undefined, '+=', false); }}>+Value</div>}\r\n            {node && addChildren(downward[node.className])}\r\n            <hr className={'my-2'} />\r\n        </div>);\r\n    }\r\n\r\n}\r\ninterface OwnProps {\r\n    model: Pointer<DModel, 1, 1, LModel>;\r\n    isMetamodel: boolean;\r\n    metamodelId?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n}\r\n\r\ninterface StateProps {\r\n    selectedid?: { node: Pointer<DGraphElement, 1, 1>; view: Pointer<DViewElement, 1, 1>; modelElement: Pointer<DModelElement, 0, 1> };\r\n    selected?: { node: LGraphElement; view: LViewElement; modelElement?: LModelElement };\r\n    metamodel?: LModel;\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: DPointerTargetable.wrap(state.idlookup[ret.selectedid.node]) as LGraphElement,\r\n        view: DPointerTargetable.wrap(state.idlookup[ret.selectedid.view]) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? DPointerTargetable.wrap<DPointerTargetable, LModelElement>(state.idlookup[ret.selectedid.modelElement]) : undefined\r\n    };\r\n    if(ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ToolBarConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ToolBarComponent);\r\n\r\nexport const ToolBar = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ToolBarConnected {...{...props, children}} />;\r\n}\r\nexport default ToolBar;\r\n\r\n\r\n\r\n\r\n","import React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState, GObject, LClass, LPointerTargetable, LUser} from \"../../joiner\";\r\nimport \"./edge.scss\";\r\nimport Xarrow, {Xwrapper} from \"react-xarrows\";\r\n\r\nfunction PendingEdgeComponent(props: AllProps) {\r\n\r\n    const source = props.source;\r\n    const [mousePosition, setMousePosition] = useStateIfMounted({x: 0, y: 0});\r\n    const options = props.edgeSettings;\r\n\r\n    useEffect(() => {\r\n        if(source) {\r\n            const updateMousePosition = (ev: MouseEvent) => {setMousePosition({x: ev.clientX, y: ev.clientY});};\r\n            window.addEventListener('mousemove', updateMousePosition);\r\n            return () => {window.removeEventListener('mousemove', updateMousePosition);};\r\n        }\r\n    }, );\r\n\r\n    return <Xwrapper>\r\n        <div style={{top: mousePosition.y - 100, left: mousePosition.x - 10}}\r\n             id={'extend-target'}></div>\r\n        {source && <Xarrow start={source.nodes[0].id} end={'extend-target'} {...options} />}\r\n    </Xwrapper>;\r\n}\r\n\r\ninterface OwnProps { }\r\ninterface StateProps { user?: LUser, source?: LClass, edgeSettings?: GObject }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = { } as any;\r\n/*    ret.user = LPointerTargetable.from(state.isEdgePending.user);\r\n    ret.source = LPointerTargetable.from(state.isEdgePending.source);\r\n    ret.edgeSettings = state._edgeSettings;*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const PendingEdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PendingEdgeComponent);\r\n\r\nexport const PendingEdge = (props: AllProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <PendingEdgeConnected {...{...props, children}} />;\r\n}\r\nexport default PendingEdge;\r\n","import axios, {AxiosResponse} from 'axios';\r\nimport {GObject, LModelElement, LNamedElement} from \"../joiner\";\r\nimport {MemoRecModel, MemoRecNamed, MemoRecObject} from \"./types\";\r\n\r\n/*\r\n\r\nper cors policy il client deve mandare richioeste allo stesso server.\r\nquindi le deve mandare a node.js e node.js server deve rimandarle a spring con un proxy server\r\n\r\n*/\r\nexport default class MemoRec {\r\n    static url(path: string): string {\r\n        return 'http://localhost:8080/' + path;\r\n    }\r\n\r\n    static async post(path: string, obj: MemoRecObject): Promise<AxiosResponse> {\r\n        return await axios.post(MemoRec.url(path), obj);\r\n    }\r\n\r\n    static async get(path: string): Promise<AxiosResponse> {\r\n        return await axios.get(MemoRec.url(path));\r\n    }\r\n\r\n    static async structuralFeature(me: LModelElement): Promise<{data:GObject[], type:'class'|'package'}> {\r\n\r\n        console.clear();\r\n\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const classes = model.classes;\r\n\r\n\r\n        const memorecClasses: MemoRecNamed[] = [];\r\n\r\n        for(let myClass of classes) {\r\n            const attributes = myClass.attributes.map(x => x.name);\r\n            memorecClasses.push({name: myClass.name, methodInvocations: attributes});\r\n        }\r\n\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecClasses};\r\n\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        console.log('input', memorecObject);\r\n\r\n        const response = await MemoRec.post('structuralFeatures', memorecObject);\r\n        console.log(response);\r\n\r\n        const data:GObject[] = response.data.slice(0, 10);\r\n        data.sort((a,b) => b.score - a.score);\r\n        // SetRootFieldAction.new('memorec', {data: response.data, type: 'class'});\r\n        return {data: data, type: 'class'};\r\n\r\n    }\r\n\r\n    static async classifier(me: LModelElement): Promise<{data:GObject[], type:'class'|'package'}> {\r\n        console.clear();\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const packages= model.packages;\r\n\r\n        const memorecPackages: MemoRecNamed[] = [];\r\n\r\n        for(let myPackage of packages) {\r\n            const classes = myPackage.classes.map(x => x.name);\r\n            memorecPackages.push({name: myPackage.name, methodInvocations: classes});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecPackages};\r\n\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        console.log('input', memorecObject);\r\n\r\n        const response = await MemoRec.post('classes', memorecObject);\r\n        console.log(response);\r\n\r\n        const data:GObject[] = response.data.slice(0, 10);\r\n        data.sort((a,b) => b.score - a.score);\r\n        //SetRootFieldAction.new('memorec', {data: response.data, type: 'package'}); //setta l'oggetto memorec\r\n        return {data: data, type: 'package'};\r\n    }\r\n}\r\n","import React, {Dispatch, ReactElement, ReactNode, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport {CreateElementAction, SetRootFieldAction} from \"../../redux/action/action\";\r\nimport {\r\n    DValue,\r\n    DViewElement,\r\n    GObject,\r\n    LClass,\r\n    LGraphElement,\r\n    LNamedElement,\r\n    LPackage,\r\n    LUser,\r\n    LValue, DState,\r\n} from \"../../joiner\";\r\nimport MemoRec from \"../../memorec/api\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\n\r\nfunction ContextMenuComponent(props: AllProps) {\r\n\r\n    const user = props.user;\r\n    const display = props.display;\r\n    const position = props.position;\r\n    const me = props.me; //refer to selected\r\n    const node = props.node;\r\n    const jsxList: ReactNode[] = [];\r\n    const [memorec, setMemorec] = useStateIfMounted<{data:GObject[], type:'class'|'package'}|null>(null);\r\n    const [suggestedName, setSuggestedName] = useStateIfMounted('');\r\n\r\n\r\n    useEffect(() => {\r\n        if(!display) close();\r\n    },[display])\r\n\r\n    const close = () => {\r\n        setSuggestedName('');\r\n        setMemorec(null);\r\n        SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0});\r\n    }\r\n    const addView = () => {\r\n        if(me) {\r\n            const jsx =`<div className={'root bg-white'}>Hello World!</div>`;\r\n            const dView: DViewElement = DViewElement.new(me.name + 'View', jsx);\r\n            switch(me.className) {\r\n                case 'DClass':\r\n                    dView.query = `context DObject inv: self.instanceof.name = '${me.name}'`;\r\n                    break;\r\n                case 'DAttribute':\r\n                case 'DReference':\r\n                    dView.query = `context DValue inv: self.instanceof.name = '${me.name}'`;\r\n                    break;\r\n                case 'DObject':\r\n                    dView.query = `context DObject inv: self.id = '${me.id}'`;\r\n                    break;\r\n            }\r\n            CreateElementAction.new(dView);\r\n            SetRootFieldAction.new('stackViews', dView.id, '+=', true);\r\n        }\r\n    }\r\n    const structuralFeature = async () => {\r\n        if(!me) return;\r\n        const data = await MemoRec.structuralFeature(me);\r\n        setMemorec(data);\r\n    }\r\n    const classifier = async() => {\r\n        if (!me) return;\r\n        const data = await MemoRec.classifier(me);\r\n        setMemorec(data);\r\n    }\r\n\r\n    const suggestOnClass = (isAttribute:boolean) => {\r\n        if(!me) return;\r\n        const lClass: LClass = LClass.fromPointer(me.id);\r\n        if(isAttribute) lClass.addAttribute(suggestedName);\r\n        else lClass.addReference(suggestedName);\r\n        //add attribute/refence to class\r\n        close();\r\n\r\n    }\r\n    const suggestOnPackage = () => {\r\n        if(!me) return;\r\n        const lPackage: LPackage = LPackage.fromPointer(me.id);\r\n        lPackage.addClass(suggestedName);\r\n        //add class to package\r\n        close();\r\n    }\r\n    if(display && me && node) {\r\n        jsxList.push(<div className={\"col title text-center\"}>{me.className}</div>);\r\n        jsxList.push(<hr />);\r\n\r\n        /* Memorec */\r\n        if(me.className === 'DClass')\r\n            jsxList.push(<div onClick={structuralFeature} className={\"col item\"}>AI Suggest <i\r\n                className=\"bi bi-arrow-right-short\"></i></div>);\r\n        if(me.className === 'DPackage')\r\n            jsxList.push(<div onClick={classifier} className={\"col item\"}>AI Suggest</div>);\r\n        jsxList.push(<div onClick={() => {close(); node.zIndex += 1;}} className={\"col item\"}>Up</div>);\r\n        jsxList.push(<div onClick={() => {close(); node.zIndex -= 1;}} className={\"col item\"}>Down</div>);\r\n        jsxList.push(<div onClick={() => {close(); addView();}} className={\"col item\"}>Add View</div>);\r\n        jsxList.push(<div onClick={() => {close(); me?.delete();}} className={\"col item\"}>Delete</div>);\r\n        switch (me.className) {\r\n            case 'DValue': if ((me as any as LValue).instanceof) jsxList.pop(); break;\r\n            case 'DClass':\r\n                jsxList.push(<div onClick={() => {\r\n                    close();\r\n                    SetRootFieldAction.new('isEdgePending', {user: user.id, source: me.id});\r\n                }} className={\"col item\"}>Extend</div>);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return(<>\r\n\r\n        <div className={\"context-menu round\"} style={{top: position.y - 100, left: position.x - 10}}>\r\n            {jsxList.map((jsx, index) => { return <div key={index}>{jsx}</div>; })}\r\n        </div>\r\n\r\n        {(memorec) && <div className={\"context-menu round\"} style={{top: position.y - 100, left: position.x + 130}}>\r\n\r\n            {(memorec && memorec.data?.map((obj) => {\r\n                return (<div>\r\n                    <div className={\"col item2\"} onClick={() => setSuggestedName(obj.recommendedItem)}>\r\n                        {obj.recommendedItem} : {obj.score}\r\n                    </div>\r\n                </div>)\r\n            })) }\r\n\r\n        </div>}\r\n        {(memorec && suggestedName) && <div className={\"context-menu round\"} style={{top: position.y - 100, left: position.x + 270}}>\r\n\r\n            {(memorec?.type === 'class') ? <>\r\n                <div> <div className={'col item2'} onClick={() =>suggestOnClass(true)} >attribute</div> </div>\r\n                <div><div className={'col item2'} onClick={() =>suggestOnClass(false)} >reference</div> </div>\r\n            </> : <div> <div className={'col item2'} onClick={() =>suggestOnPackage()}> class </div> </div>}\r\n        </div>\r\n        }\r\n    </>);\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    user: LUser,\r\n    display: boolean,\r\n    position: {x: number, y: number},\r\n    me?: LNamedElement,\r\n    node?: LGraphElement,\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const user = LUser.from(state.currentUser);\r\n    const display = state.contextMenu.display;\r\n    const position = {x: state.contextMenu.x, y: state.contextMenu.y}\r\n    const mePointer = state._lastSelected?.modelElement;\r\n    const me: LNamedElement | undefined = mePointer ? LNamedElement.fromPointer(mePointer) : undefined;\r\n    const nodePointer = state._lastSelected?.node;\r\n    const node: LGraphElement | undefined = nodePointer ? LGraphElement.fromPointer(nodePointer) : undefined;\r\n    const ret: StateProps = { user, display, position, me, node };\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ContextMenuConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContextMenuComponent);\r\n\r\nexport const ContextMenu = (props: OwnProps, childrens: (string | React.Component)[] = []): ReactElement => {\r\n    return <ContextMenuConnected {...{...props, childrens}} />;\r\n}\r\nexport default ContextMenu;\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DGraphElement, LGraphElement} from \"../../model/dataStructure\";\r\nimport {GObject, Pointer, SetRootFieldAction} from \"../../joiner\";\r\nimport Xarrow from \"react-xarrows\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport crypto from \"crypto\";\r\nimport $ from \"jquery\";\r\n\r\nfunction ReferenceEdgeComponent(props: AllProps) {\r\n    const source = props.source;\r\n    const target = props.target;\r\n    const containment = props.containment;\r\n    let startOptions = props.options;\r\n    let endOptions = props.options;\r\n    if(containment) {\r\n        startOptions = {\r\n            ...startOptions,\r\n            showTail: true,\r\n            tailSize: 15,\r\n            tailShape: {svgElem: <rect style={{\r\n                    rotate: '45deg', fill: 'white', strokeWidth: '0.1', stroke: startOptions.color,\r\n                }} width='.5pt' height='.5pt' />, offsetForward: 1}\r\n        }\r\n    }\r\n\r\n    const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\r\n    useEffectOnce(() => {\r\n        setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\r\n    });\r\n    useEffect(() => {\r\n        const middleware: GObject = $('[id=\"' + middleAnchor + '\"]');\r\n        if(middleware) {\r\n            middleware.draggable({\r\n                cursor: \"grabbing\",\r\n                containment: \"window\",\r\n                drag: function (event: GObject, obj: GObject) {\r\n                    SetRootFieldAction.new(\"dragging\", {})\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    if(props.display) {\r\n        return(<>\r\n            <div style={{borderColor: startOptions.color}} id={middleAnchor} className={'middle-anchor'}></div>\r\n            <Xarrow start={source.id} end={middleAnchor} {...startOptions} showHead={false} />\r\n            <Xarrow start={middleAnchor} end={target.id} {...endOptions} />\r\n        </>);\r\n    } else { return(<></>); }\r\n\r\n}\r\ninterface OwnProps {\r\n    sourceID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    targetID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    containment: boolean;\r\n}\r\ninterface StateProps { source: LGraphElement, target: LGraphElement, options: GObject, display: boolean }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = { } as any;\r\n/*    ret.source = LGraphElement.fromPointer(ownProps.sourceID);\r\n    ret.target = LGraphElement.fromPointer(ownProps.targetID);\r\n    ret.options = state._edgeSettings;\r\n    ret.display = state._edgesDisplayed.referenceM2;*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ReferenceEdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReferenceEdgeComponent);\r\n\r\nexport const ReferenceEdge = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ReferenceEdgeConnected {...{...props, children}} />;\r\n}\r\nexport default ReferenceEdge;\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DGraphElement, LGraphElement} from \"../../model/dataStructure\";\r\nimport {GObject, Pointer, SetRootFieldAction} from \"../../joiner\";\r\nimport Xarrow from \"react-xarrows\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport crypto from \"crypto\";\r\nimport $ from \"jquery\";\r\n\r\nfunction ExtendEdgeComponent(props: AllProps) {\r\n    const source = props.source;\r\n    const target = props.target;\r\n    let options = props.options;\r\n    options = {\r\n        ...options,\r\n        showHead: true,\r\n        headSize: 15,\r\n        headColor: 'white',\r\n        headShape: {svgElem:<svg><path strokeWidth={0.1} stroke={options.color} d={'M 0 0 L 1 0.5 L 0 1 L 0 0 z'} /></svg>}\r\n    }\r\n\r\n    const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\r\n    useEffectOnce(() => {\r\n        setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\r\n    });\r\n    useEffect(() => {\r\n        const middleware: GObject = $('[id=\"' + middleAnchor + '\"]');\r\n        if(middleware) {\r\n            middleware.draggable({\r\n                cursor: \"grabbing\",\r\n                containment: \"window\",\r\n                drag: function (event: GObject, obj: GObject) {\r\n                    SetRootFieldAction.new(\"dragging\", {})\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    if(props.display) {\r\n        return(<>\r\n            <div style={{borderColor: options.color}} id={middleAnchor} className={'middle-anchor'}></div>\r\n            <Xarrow start={source.id} end={middleAnchor} {...options} showHead={false} />\r\n            <Xarrow start={middleAnchor} end={target.id} {...options} />\r\n        </>);\r\n    } else { return(<></>); }\r\n\r\n}\r\ninterface OwnProps {\r\n    sourceID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    targetID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n}\r\ninterface StateProps { source: LGraphElement, target: LGraphElement, options: GObject, display: boolean }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = { } as any;\r\n    /*\r\n    ret.source = LGraphElement.fromPointer(ownProps.sourceID);\r\n    ret.target = LGraphElement.fromPointer(ownProps.targetID);\r\n    ret.options = state._edgeSettings;\r\n    ret.display = state._edgesDisplayed.extend;*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ExtendEdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ExtendEdgeComponent);\r\n\r\nexport const ExtendEdge = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ExtendEdgeConnected {...{...props, children}} />;\r\n}\r\nexport default ExtendEdge;\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DGraphElement, LGraphElement} from \"../../model/dataStructure\";\r\nimport {GObject, Pointer, SetRootFieldAction} from \"../../joiner\";\r\nimport Xarrow from \"react-xarrows\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport crypto from \"crypto\";\r\nimport \"./style.scss\";\r\nimport $ from \"jquery\";\r\n\r\nfunction ValueEdgeComponent(props: AllProps) {\r\n    const source = props.source;\r\n    const target = props.target;\r\n    let options = props.options;\r\n    options = {\r\n        ...options,\r\n        showHead: false\r\n    }\r\n\r\n    const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\r\n    useEffectOnce(() => {\r\n        setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\r\n    });\r\n    useEffect(() => {\r\n        const middleware: GObject = $('[id=\"' + middleAnchor + '\"]');\r\n        if(middleware) {\r\n            middleware.draggable({\r\n                cursor: \"grabbing\",\r\n                containment: \"window\",\r\n                drag: function (event: GObject, obj: GObject) {\r\n                    SetRootFieldAction.new(\"dragging\", {})\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    if(props.display) {\r\n        return(<>\r\n            <div style={{borderColor: options.color}} id={middleAnchor} className={'middle-anchor'}></div>\r\n            <Xarrow start={source.id} end={middleAnchor} showHead={false} {...options} />\r\n            <Xarrow start={middleAnchor} end={target.id} {...options} />\r\n        </>);\r\n    } else { return(<></>); }\r\n\r\n}\r\ninterface OwnProps {\r\n    sourceID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    targetID: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n}\r\ninterface StateProps { source: LGraphElement, target: LGraphElement, options: GObject, display: boolean }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = { } as any;\r\n/*    ret.source = LGraphElement.fromPointer(ownProps.sourceID);\r\n    ret.target = LGraphElement.fromPointer(ownProps.targetID);\r\n    ret.options = state._edgeSettings;\r\n    ret.display = state._edgesDisplayed.referenceM1;*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ValueEdgeConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ValueEdgeComponent);\r\n\r\nexport const ValueEdge = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ValueEdgeConnected {...{...props, children}} />;\r\n}\r\nexport default ValueEdge;\r\n","import {DState} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport type {DModel, Pointer} from \"../../joiner\";\r\nimport {LClass, LClassifier, LModel, LObject} from \"../../joiner\";\r\nimport ReferenceEdge from \"./ReferenceEdge\";\r\nimport ExtendEdge from \"./ExtendEdge\";\r\nimport ValueEdge from \"./ValueEdge\";\r\n\r\ninterface IReferenceEdge { source: LClass, target: LClassifier, containment: boolean }\r\ninterface IExtendEdge { source: LClass, target: LClass }\r\ninterface IValueEdge { source: LObject, target: LObject }\r\nfunction EdgesManagerComponent(props: AllProps) {\r\n    const model = props.model;\r\n\r\n    const classes = model.classes && Array.isArray(model.classes) ? model.classes : [];\r\n    const _references: IReferenceEdge[] = [];\r\n    const _extends: IExtendEdge[] = [];\r\n    for(let classifier of classes) {\r\n        for(let reference of classifier.references) {\r\n            _references.push({source: reference.father, target: reference.type, containment: reference.containment});\r\n        }\r\n        for(let father of classifier.extends) {\r\n            _extends.push({source: classifier, target: father});\r\n        }\r\n    }\r\n\r\n    const objects = model.objects;\r\n    const _values: IValueEdge[] = [];\r\n    for(let object of objects) {\r\n        for(let feature of object.features) {\r\n            const instanceOf = feature.instanceof;\r\n            if(instanceOf?.className === 'DReference') {\r\n                const valuePointers = feature.__raw.values;\r\n                for(let pointer of valuePointers) {\r\n                    _values.push({source: object, target: LObject.fromPointer(pointer as Pointer)});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // return <div> to rework </div>\r\n    return <div>\r\n        {_references.map((referenceEdge, index) => {\r\n            const source = referenceEdge.source.node;\r\n            const target = referenceEdge.target.node;\r\n            const containment = referenceEdge.containment;\r\n            if(source && target) {\r\n                return(<ReferenceEdge key={index} sourceID={source.id} targetID={target.id} containment={containment} />);\r\n            }\r\n        })}\r\n        {_extends.map((extendEdge, index) => {\r\n            const source = extendEdge.source?.node;\r\n            const target = extendEdge.target?.node;\r\n            if(source && target) {\r\n                return(<ExtendEdge key={index} sourceID={source.id} targetID={target.id} />);\r\n            }\r\n        })}\r\n        {_values.map((valueEdge, index) => {\r\n            const source = valueEdge.source?.node;\r\n            const target = valueEdge.target?.node;\r\n            if(source && target) {\r\n                return(<ValueEdge key={index} sourceID={source.id} targetID={target.id} />);\r\n            }\r\n        })}\r\n    </div>\r\n}\r\ninterface OwnProps { modelid: Pointer<DModel, 1, 1, LModel> }\r\ninterface StateProps { model: LModel }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = { } as any;\r\n    ret.model = LModel.fromPointer(ownProps.modelid);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgesManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgesManagerComponent);\r\n\r\nexport const EdgesManager = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgesManagerConnected {...{...props, children}} />;\r\n}\r\nexport default EdgesManager;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport type {DModel, Pointer} from \"../../../joiner\";\r\nimport {DState, CreateElementAction, DGraph, LGraph, LModel} from \"../../../joiner\";\r\nimport {DefaultNode} from \"../../../joiner/components\";\r\nimport ToolBar from \"../../toolbar/ToolBar\";\r\nimport PendingEdge from \"../../../graph/edge/PendingEdge\";\r\nimport ContextMenu from \"../../toolbar/ContextMenu\";\r\nimport EdgesManager from \"../../../graph/edges/EdgesManager\";\r\n\r\nfunction MetamodelTabComponent(props: AllProps) {\r\n    const model = props.model;\r\n    const graph = props.graph;\r\n\r\n    if (!model) return(<>closed tab</>);\r\n    if (!graph) {\r\n        CreateElementAction.new(DGraph.new(0, model.id));\r\n        return(<div style={{width: \"100%\", height: \"100%\", display: \"flex\"}}>\r\n            <span style={{margin: \"auto\"}}>Building the Graph...</span>\r\n        </div>);\r\n    }\r\n\r\n    return(<div className={'w-100 h-100'}>\r\n        <ContextMenu />\r\n        <PendingEdge />\r\n        <div className={'d-flex h-100'}>\r\n            <ToolBar model={model.id} isMetamodel={model.isMetamodel} />\r\n            <div className={\"GraphContainer h-100 w-100\"} style={{position:\"relative\"}}>\r\n                {graph && <DefaultNode data={model.id} nodeid={graph.id} graphid={graph.id}/> || <div>Error: missing DGraph prop</div> }\r\n                {false && <EdgesManager modelid={model.id} />}\r\n            </div>\r\n        </div>\r\n    </div>);\r\n\r\n}\r\ninterface OwnProps { modelid: Pointer<DModel, 1, 1, LModel> }\r\ninterface StateProps { model: LModel, graph: LGraph }\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.model = LModel.fromPointer(ownProps.modelid);\r\n    const graphs: DGraph[] = DGraph.fromPointer(state.graphs);\r\n    const pointers = graphs.filter((graph) => { return graph.model === ret.model?.id });\r\n    if(pointers.length > 0) ret.graph = LGraph.fromPointer(pointers[0].id);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const MetamodelTabConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MetamodelTabComponent);\r\n\r\nexport const MetamodelTab = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <MetamodelTabConnected {...{...props, children}} />;\r\n}\r\nexport default MetamodelTab;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport type {Pointer, DModel} from \"../../../joiner\";\r\nimport {DState, LGraph, LModel, DGraph, DModelElement, LModelElement, CreateElementAction} from \"../../../joiner\";\r\nimport {DefaultNode} from \"../../../joiner/components\";\r\nimport ToolBar from \"../../toolbar/ToolBar\";\r\nimport PendingEdge from \"../../../graph/edge/PendingEdge\";\r\nimport ContextMenu from \"../../toolbar/ContextMenu\";\r\nimport EdgesManager from \"../../../graph/edges/EdgesManager\";\r\n\r\n\r\nfunction ModelTabComponent(props: AllProps) {\r\n    const model = props.model;\r\n    const graph = props.graph;\r\n\r\n    if (!model) return(<>closed tab</>);\r\n    if (!graph) {\r\n        CreateElementAction.new(DGraph.new(0, model.id));\r\n        return(<div style={{width: \"100%\", height: \"100%\", display: \"flex\"}}>\r\n            <span style={{margin: \"auto\"}}>Building the Graph...</span>\r\n        </div>);\r\n    }\r\n\r\n    return(<div className={'w-100 h-100'}>\r\n        <ContextMenu />\r\n        <PendingEdge />\r\n        <div className={'d-flex h-100'}>\r\n            <ToolBar model={model.id} isMetamodel={model.isMetamodel} metamodelId={props.metamodelid} />\r\n            <div className={\"GraphContainer h-100 w-100\"} style={{position:\"relative\"}}>\r\n                {graph && <DefaultNode data={model.id} nodeid={graph.id} graphid={graph.id} />}\r\n                {false && <EdgesManager modelid={model.id} />}\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\ninterface OwnProps {\r\n    modelid: Pointer<DModel, 1, 1, LModel>,\r\n    metamodelid?: Pointer<DModelElement, 1, 1, LModelElement>,\r\n}\r\ninterface StateProps { model: LModel, graph?: LGraph }\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.model = LModel.fromPointer(ownProps.modelid);\r\n    const graphs: DGraph[] = DGraph.fromPointer(state.graphs);\r\n    const pointers = graphs.filter((graph) => { return graph.model === ownProps.modelid });\r\n    if(pointers.length > 0) ret.graph = LGraph.fromPointer(pointers[0].id);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ModelTabConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ModelTabComponent);\r\n\r\nexport const ModelTab = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ModelTabConnected {...{...props, children}} />;\r\n}\r\nexport default ModelTab;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport type {Pointer, DModel} from \"../../../joiner\";\r\nimport {DState, LGraph, LModel, DGraph, DModelElement, LModelElement} from \"../../../joiner\";\r\nimport {DefaultNode} from \"../../../joiner/components\";\r\nimport ToolBar from \"../../toolbar/ToolBar\";\r\nimport PendingEdge from \"../../../graph/edge/PendingEdge\";\r\nimport ContextMenu from \"../../toolbar/ContextMenu\";\r\nimport EdgesManager from \"../../../graph/edges/EdgesManager\";\r\n\r\n\r\nfunction InfoTabComponent(props: AllProps) {\r\n    const metamodels = props.metamodels;\r\n    const models = props.models;\r\n\r\n    return(<div className={'p-1'}>\r\n        <b><label className={'ms-1 text-primary'}>Metamodels ({metamodels.length}):</label></b>\r\n        <br />\r\n        {metamodels.map((model, index) => {\r\n            return(<>\r\n                <label className={'ms-3'} key={index}>-{model.name}</label>\r\n                <br />\r\n            </>);\r\n        })}\r\n        <b><label className={'ms-1 text-primary'}>Models ({models.length}):</label></b><br />\r\n        {models.map((model, index) => {\r\n            return(<>\r\n                <label className={'ms-3'} key={index}>\r\n                    -{model.name} <b className={'text-success'}>{model.instanceof ? \"conforms to\" : \"is shapeless\"}</b> {model.instanceof?.name}\r\n                </label>\r\n                <br />\r\n            </>);\r\n        })}\r\n    </div>);\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {models: LModel[], metamodels: LModel[]}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    // ret.metamodels = LModel.fromPointer(state.m2models);\r\n    // ret.models = LModel.fromPointer(state.m1models);\r\n    const models: LModel[] = LModel.fromPointer(state.models);\r\n    ret.metamodels = models.filter((m) => {return m.isMetamodel});\r\n    ret.models = models.filter((m) => {return !m.isMetamodel});\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const InfoTabConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InfoTabComponent);\r\n\r\nexport const InfoTab = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <InfoTabConnected {...{...props, children}} />;\r\n}\r\nexport default InfoTab;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState, DUser, GObject, LModelElement, Selectors, U} from \"../../../joiner\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\n\r\nfunction TestTabComponent(props: AllProps) {\r\n\r\n    const selected = props.selected;\r\n\r\n    const click = () => {\r\n    }\r\n\r\n    return(<div>\r\n        <button onClick={click}>click</button>\r\n        {selected?.id}\r\n    </div>);\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {selected: LModelElement|null}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selected = LModelElement.fromPointer(state.selected[DUser.current] as any);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nconst TestTabConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TestTabComponent);\r\n\r\nconst TestTab = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <TestTabConnected {...{...props, children}} />;\r\n}\r\nexport default TestTab;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState, SetRootFieldAction} from \"../../../joiner\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\n\r\n\r\nfunction IotTabComponent(props: AllProps) {\r\n    const iot = props.iot;\r\n    const [topics, setTopics] = useStateIfMounted<string[]>([]);\r\n\r\n    const editTopic = (evt: React.ChangeEvent<HTMLInputElement>, topic: number) => {\r\n        topics[topic] = evt.target.value;\r\n        setTopics([...topics]);\r\n    }\r\n\r\n    const save = () => {\r\n        SetRootFieldAction.new('topics', topics, '', false);\r\n        alert('Configuration Saved!');\r\n    }\r\n\r\n    if(!iot) return(<></>);\r\n\r\n    return(<div className={'px-4'}>\r\n        <div className={'mt-3'}>\r\n            <div className={'p-1 d-flex'}>\r\n                <label className={'my-auto'}>Broker IP</label>\r\n                <input spellCheck={false} className={'my-auto input ms-auto'} type={'text'} />\r\n            </div>\r\n            <hr className={'my-3'} />\r\n            <div className={'d-block text-center mb-2'}>\r\n                <button disabled={topics.length <= 0} className={'me-3 px-2 btn btn-danger'} onClick={() => setTopics(topics.slice(0, -1))}>\r\n                    -\r\n                </button>\r\n                <label>Topics (<b>{topics.length}</b>)</label>\r\n                <button className={'ms-3 px-2 btn btn-success'} onClick={() => setTopics([...topics, ''])}>\r\n                    +\r\n                </button>\r\n            </div>\r\n            {topics.map((value, index) => {\r\n                return(<div className={'p-1 d-flex'}>\r\n                    <label className={'my-auto'}>Topic #<b>{index}</b></label>\r\n                    <input onChange={(evt) => editTopic(evt, index)} spellCheck={false} className={'my-auto input ms-auto'} type={'text'} />\r\n                </div>)\r\n            })}\r\n        </div>\r\n        <button onClick={save} className={'mt-3 d-block btn btn-primary p-1 mx-auto'}>Save</button>\r\n    </div>);\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {iot: null|boolean}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const iot = state.iot;\r\n    return {iot};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nconst IotTabConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IotTabComponent);\r\n\r\nconst IotTab = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <IotTabConnected {...{...props, children}} />;\r\n}\r\nexport default IotTab;\r\n","import React, {Dispatch, PureComponent, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DockContext, DockLayout, PanelData, TabData} from \"rc-dock\";\r\nimport {LayoutData} from \"rc-dock/lib/DockData\";\r\nimport Swal from 'sweetalert2'\r\nimport './style.scss';\r\nimport {DState, BEGIN, DGraph, DModel, DModelElement, END, LModel, LModelElement, Pointer, Selectors, U} from '../../joiner';\r\nimport StructureEditor from \"../rightbar/structureEditor/StructureEditor\";\r\nimport TreeEditor from \"../rightbar/treeEditor/treeEditor\";\r\nimport ViewsEditor from \"../rightbar/viewsEditor/ViewsEditor\";\r\nimport StyleEditor from \"../rightbar/styleEditor/StyleEditor\";\r\nimport EdgeEditor from \"../rightbar/edgeEditor/EdgeEditor\";\r\nimport ViewpointEditor from \"../rightbar/viewpointsEditor/ViewpointsEditor\";\r\nimport Console from \"../rightbar/console/Console\";\r\nimport MetamodelTab from \"./tabs/MetamodelTab\";\r\nimport ModelTab from \"./tabs/ModelTab\";\r\nimport InfoTab from \"./tabs/InfoTab\";\r\nimport TestTab from \"./tabs/TestTab\";\r\nimport IotTab from \"./tabs/IotTab\";\r\n\r\nexport class TabDataMaker {\r\n    static metamodel (model: LModel | DModel): TabData {\r\n        if (model.isMetamodel) return { id: model.id, title: model.name, group: 'group1', closable: true, content: <MetamodelTab modelid={model.id} /> };\r\n        return {} as any;\r\n    }\r\n    static model(model: LModel | DModel): TabData {\r\n        return { id: model.id, title: model.name, group: 'group1', closable: true, content:\r\n            <ModelTab modelid={model.id} metamodelid={(model.instanceof as any)?.id || model.instanceof} />\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface ThisState {}\r\nclass DockLayoutComponent extends PureComponent<AllProps, ThisState>{\r\n    private dock: DockLayout|null;\r\n    private dockPanel!: PanelData;\r\n    private dockContext!: DockContext;\r\n\r\n    private groups = {\r\n        'group1': {\r\n            floatable: true,\r\n            maximizable: true,\r\n            panelExtra: (panelData: PanelData, context: DockContext) => {\r\n                this.dockPanel = panelData;\r\n                this.dockContext = context;\r\n                return (<div className={'my-auto'}>\r\n                    <button className={'btn btn-primary me-1'}\r\n                                onClick={(evt) => this.open(evt, context, panelData)}>\r\n                        <i className={'p-1 bi bi-search'}></i>\r\n                    </button>\r\n                    <button className={'btn btn-primary me-1'}\r\n                            onClick={(evt) => this.addMetamodel(evt, context, panelData)}>\r\n                        <i className={'p-1 bi bi-chevron-double-up'}></i>\r\n                    </button>\r\n                    <button className={'btn btn-primary me-1'}\r\n                            onClick={(evt) => this.addModel(evt, context, panelData)}>\r\n                        <i className={'p-1 bi bi-chevron-up'}></i>\r\n                    </button>\r\n                </div>);\r\n            }\r\n        },\r\n        'group2': {\r\n            floatable: true,\r\n            maximizable: true,\r\n        }\r\n    };\r\n\r\n    private test = { id: '999', title: \"Test\", group: \"2\", closable: false, content: <TestTab /> };\r\n    private iotEditor = { id: '0', title: 'Config', group: 'group2', closable: false, content: <IotTab /> };\r\n    private structureEditor = { id: '1', title: 'Structure', group: 'group2', closable: false, content: <StructureEditor /> };\r\n    private treeEditor = { id: '2', title: 'Tree View', group: 'group2', closable: false, content: <TreeEditor /> };\r\n    private viewsEditor = { id: '3', title: 'Views', group: 'group2', closable: false, content: <ViewsEditor /> };\r\n    private styleEditor = { id: '4', title: 'Node', group: 'group2', closable: false, content: <StyleEditor /> };\r\n    private edgeEditor = { id: '5', title: 'Edges', group: 'group2', closable: true, content: <EdgeEditor /> };\r\n    private viewpointEditor = { id: '6', title: 'Viewpoints', group: 'group2', closable: false, content: <ViewpointEditor /> };\r\n    private console = { id: '7', title: 'Console', group: 'group2', closable: false, content: <Console /> };\r\n\r\n    private selected = this.props.selected;\r\n    private views = this.props.views;\r\n    private moveOnStructure = false;\r\n    private moveOnViews = false;\r\n    private iotLoaded = false;\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.dock = null;\r\n    }\r\n\r\n    OPEN(model: DModel|LModel): void {\r\n        new Promise(resolve => setTimeout(resolve, 100)).then(() => {\r\n            let tab: TabData;\r\n            if(model.isMetamodel) tab = TabDataMaker.metamodel(model);\r\n            else tab = TabDataMaker.model(model);\r\n            this.dockContext.dockMove(tab, this.dockPanel, 'middle');\r\n        });\r\n    }\r\n\r\n    CLOSE(pointer: Pointer<DModel, 1, 1, LModel>): void {\r\n        new Promise(resolve => setTimeout(resolve, 50)).then(() => {\r\n            this.dockPanel.tabs = this.dockPanel.tabs.filter(tab => tab.id !== pointer);\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(newProps: Readonly<AllProps>, newState: Readonly<ThisState>, newContext: any): boolean {\r\n        const oldProps = this.props;\r\n        // if(oldProps.selected !== newProps.selected) { this.moveOnStructure = true; return true; }\r\n        if (oldProps.views !== newProps.views) { this.moveOnViews = true; return true; }\r\n\r\n        const deltaM2 = U.arrayDifference(oldProps.m2, newProps.m2);\r\n        const addedM2: LModel[] = LModel.wrapAll(deltaM2.added);\r\n        const removedM2: Pointer<DModel, 0, 'N', LModel> = deltaM2.removed;\r\n        for(let model of addedM2) this.OPEN(model);\r\n        for(let pointer of removedM2) this.CLOSE(pointer);\r\n\r\n        const deltaM1 = U.arrayDifference(oldProps.m1, newProps.m1);\r\n        const addedM1: LModel[] = LModel.wrapAll(deltaM1.added);\r\n        const removedM1: Pointer<DModel, 0, 'N', LModel> = deltaM1.removed;\r\n        for(let model of addedM1) this.OPEN(model);\r\n        for(let pointer of removedM1) this.CLOSE(pointer);\r\n\r\n        return !!(deltaM2.added.length || deltaM1.added.length || this.props.iot);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<AllProps>, prevState: Readonly<ThisState>, snapshot?: any) {\r\n        if(this.dock) {\r\n            if(this.moveOnViews) {\r\n                this.dock.dockMove(this.viewsEditor, this.dock.find('3'), 'middle');\r\n                this.moveOnViews = false;\r\n                return;\r\n            }\r\n            if(this.moveOnStructure) {\r\n                this.dock.dockMove(this.structureEditor, this.dock.find('1'), 'middle');\r\n                this.moveOnStructure = false;\r\n                return;\r\n            }\r\n            if(this.props.iot && !this.iotLoaded) {\r\n                const layout = this.dock.getLayout();\r\n                const tabs = [\r\n                    this.iotEditor,\r\n                    this.structureEditor,\r\n                    this.treeEditor,\r\n                    this.viewsEditor,\r\n                    this.viewpointEditor,\r\n                    this.console,\r\n                    this.edgeEditor\r\n                ];\r\n                layout.dockbox.children[1] = {tabs};\r\n                this.dock.setLayout(layout);\r\n                this.iotLoaded = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    open(evt: React.MouseEvent<HTMLButtonElement>, context: DockContext, panelData: PanelData) {\r\n        let html = '<style>body.swal2-no-backdrop .swal2-container {background-color: rgb(0 0 0 / 60%) !important}</style>';\r\n        html += `<div><b><label class='text-primary'>OPEN AN EXISTING MODEL</label></b><br/>`;\r\n        html += `<select class='mt-2 select' id='select-open-model'>`;\r\n        html += `<optgroup label='Metamodels'>`;\r\n        for(let metamodel of Selectors.getAllMetamodels()) {\r\n            html += `<option value=${metamodel.id}>${metamodel.name}</option>`;\r\n        }\r\n        html += '</optgroup>';\r\n        html += `<optgroup label='Models'>`;\r\n        for(let model of Selectors.getAllModels()) {\r\n            html += `<option value=${model.id}>${model.name}</option>`;\r\n        }\r\n        html += '</optgroup>';\r\n        html += '</select></div>';\r\n        const result = Swal.fire({\r\n            html: html, showCloseButton: true, confirmButtonText: 'OPEN',\r\n            preConfirm: () => {\r\n                const model: HTMLElement|null = document.getElementById('select-open-model');\r\n                return (model) ? (model as HTMLSelectElement).value : null;\r\n            },\r\n            backdrop: false\r\n        });\r\n        result.then((data) => {\r\n            if(data.isConfirmed && data.value) {\r\n                const model: LModel = LModel.fromPointer(data.value);\r\n                this.OPEN(model);\r\n            }\r\n        });\r\n    }\r\n\r\n    async addMetamodel(evt: undefined|React.MouseEvent<HTMLButtonElement>, context: DockContext, panelData: PanelData, model?: DModel) {\r\n        let name = 'metamodel_' + 0;\r\n        let names: (string)[] = Selectors.getAllMetamodels().map(m => m.name);\r\n        name = U.increaseEndingNumber(name, false, false, (newName) => names.indexOf(newName) >= 0)\r\n        model = model || DModel.new(name, undefined, true);\r\n        // DGraph.new(model.id);  <-- viene fatto in autamatico ?\r\n        this.OPEN(model);\r\n    }\r\n    addModel(evt: React.MouseEvent<HTMLButtonElement>, context: DockContext, panelData: PanelData) {\r\n        let html = '<style>body.swal2-no-backdrop .swal2-container {background-color: rgb(0 0 0 / 60%) !important}</style>';\r\n        html += `<div><b><label class='text-primary'>CREATE A MODEL</label></b><br/>`;\r\n        html += `<label>The model will be conform to:</label><br/>`;\r\n        html += `<select class='mt-2 select' id='select-add-model'>`;\r\n        html += `<optgroup label='Metamodels'>`;\r\n        for(let metamodel of Selectors.getAllMetamodels()) {\r\n            html += `<option value=${metamodel.id}>${metamodel.name}</option>`;\r\n        }\r\n        html += '</optgroup>';\r\n        html += '</select></div>';\r\n        const result = Swal.fire({\r\n            html: html, showCloseButton: true, confirmButtonText: 'CREATE',\r\n            preConfirm: () => {\r\n                const metamodel: HTMLElement|null = document.getElementById('select-add-model');\r\n                return (metamodel) ? (metamodel as HTMLSelectElement).value : null;\r\n            },\r\n            backdrop: false\r\n        });\r\n        result.then((data) => {\r\n            if(data.isConfirmed && data.value) {\r\n                let mmid: Pointer<DModel> = data.value;\r\n                const metamodel: LModel = LModel.fromPointer(mmid);\r\n                let name = 'model_' + 0;\r\n                let modelNames: (string)[] = metamodel.models.map(m => m.name);\r\n                name = U.increaseEndingNumber(name, false, false, (newName) => modelNames.indexOf(newName) >= 0)\r\n                BEGIN()\r\n                const model: DModel = DModel.new(name, mmid, false, true);\r\n                DGraph.new(0, model.id);\r\n                END()\r\n                this.OPEN(model);\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const layout: LayoutData = { dockbox: { mode: 'horizontal', children: [] }};\r\n        const infoTab = { id: 'info', title: 'Info', group: 'group1', closable: false, content:\r\n            <InfoTab />\r\n        };\r\n        layout.dockbox.children.push({tabs: [infoTab]});\r\n        const tabs = [\r\n            // this.test,\r\n            this.iotEditor,\r\n            this.structureEditor,\r\n            this.treeEditor,\r\n            this.viewsEditor,\r\n            this.viewpointEditor,\r\n            // this.styleEditor,\r\n            this.edgeEditor,\r\n            this.console\r\n        ];\r\n        layout.dockbox.children.push({tabs});\r\n\r\n        return (<DockLayout ref={(dockRef) => { this.dock = dockRef }} defaultLayout={layout}\r\n                            groups={this.groups} />);\r\n    }\r\n}\r\n\r\ninterface OwnProps { }\r\ninterface StateProps {\r\n    selected: Pointer<DModelElement, 0, 1, LModelElement>;\r\n    views: number;\r\n    m2: Pointer<DModel, 0, 'N', LModel>;\r\n    m1: Pointer<DModel, 0, 'N', LModel>;\r\n    iot: null|boolean;\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const selected = state._lastSelected?.modelElement;\r\n    if(selected) ret.selected = selected;\r\n    ret.views = state.viewelements.length;\r\n    ret.m2 = state.m2models;\r\n    ret.m1 = state.m1models;\r\n    ret.iot = state.iot;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const DockLayoutConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DockLayoutComponent);\r\n\r\nexport const Dock = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <DockLayoutConnected {...{...props, children}} />;\r\n}\r\nexport default Dock;\r\n","export default __webpack_public_path__ + \"static/media/splash.70a592ca.png\";","import {\r\n    Dictionary, DUser,\r\n    EcoreParser, GObject, DState,\r\n    Json,\r\n    LModel,\r\n    LoadAction,\r\n    Log, U,\r\n    LPointerTargetable, prjson2xml, prxml2json,\r\n    store, RuntimeAccessible, DModelElement, SetRootFieldAction, Selectors\r\n} from '../../joiner';\r\n\r\n@RuntimeAccessible\r\nexport class SaveManager {\r\n    private static tmpsave: DState;\r\n\r\n    static save(): void {\r\n        SaveManager.tmpsave = store.getState();\r\n        localStorage.setItem(\"tmpsave\", JSON.stringify(SaveManager.tmpsave));\r\n    }\r\n\r\n    static load(fullstatestr?: string): void {\r\n        if (!fullstatestr && SaveManager.tmpsave) { LoadAction.new(SaveManager.tmpsave); return; }\r\n        fullstatestr = fullstatestr || localStorage.getItem(\"tmpsave\") || 'null'; // priorities: 1) argument from file 2) state variable cached 3) localstorage 4) null prevent crash\r\n        SaveManager.tmpsave = JSON.parse(fullstatestr);\r\n        LoadAction.new(SaveManager.tmpsave);\r\n        // SetRootFieldAction.new('metamodel', Selectors.getActiveModel()?.id, '', true); already set by loadaction in batch\r\n    }\r\n\r\n    public static exportEcore_click(toXML: boolean = false, toFile: boolean = true): void { // e: React.MouseEvent,\r\n        let lmodel: null|LModel = Selectors.getActiveModel();\r\n        if (!lmodel) return;\r\n        let json = SaveManager.exportEcore(lmodel);\r\n        let str = JSON.stringify(json, null, \"\\t\");\r\n        if (toXML) {\r\n            str = prjson2xml.json2xml(json, '\\t');\r\n            str = U.formatXml(str);\r\n        }\r\n\r\n        if (!toFile) {\r\n            // (document.querySelector(\"#export-tmp\") as any).innerText = str;\r\n            localStorage.setItem(\"import\", str);\r\n            return;\r\n        }\r\n        let ism2 = (lmodel as LModel).isMetamodel;\r\n        let name = (lmodel.name || (ism2 ? 'M2' : 'M1') + '_unnamed')  + (toXML ? \".xml\" : '.json') + \".\"+ (ism2 ? \"ecore\" : lmodel.instanceof?.name || \"shapeless\");\r\n        console.log(\"download file:\", {name, ism2, toXML, lmodel, instanceof:lmodel.instanceof});\r\n        U.download(name, str);\r\n    }\r\n\r\n    public static importEcore_click(fromXML: boolean = false, fromfile: boolean = true): void {\r\n        try { this.importEcore_click0(fromXML, fromfile); } catch (e: any) {\r\n            let str = e?.message?.substring?.(0, 1000) || 'some error';\r\n            console.trace(str, e);\r\n            // throw new Error(str);\r\n        }\r\n    }\r\n    public static importEcore_click0(fromXML: boolean = false, fromfile: boolean = true): void {\r\n        const extensions: string[] = [(fromXML ? \"*.xml.*\" : \"*.json.*\")]; // [\".ecore\"]; // Selectors.getActiveModel().isM1() ? '.' + Selectors.getActiveModel().metamodel.fullname() : '.ecore';\r\n        let filestring: string, jsonstring: string, jsonobj: GObject = undefined as any;\r\n        console.log(\"importEcore: prefromfile\");\r\n        if (!fromfile) {\r\n            filestring = localStorage.getItem(\"import\") || 'null';\r\n            if (fromXML) {\r\n                const xmlDoc = new DOMParser().parseFromString(filestring,\"text/xml\");\r\n                jsonobj = prxml2json.xml2jsonobj(xmlDoc, ' ');\r\n            }\r\n            //if (filestring.includes(\"\\n\")) throw new Error(filestring.substring(0, 1000));\r\n            SaveManager.importEcore(jsonobj || filestring, true, undefined, true); // todo: trova il modo di determinare se è m1 o m2 senza filename\r\n            return; }\r\n\r\n        console.log(\"importEcore: pre file read\");\r\n        let filename;\r\n        U.fileRead((e: Event, files?: FileList | null, fileContents?: string[]) => {\r\n            Log.ex(!fileContents || !files || fileContents.length !== files.length, 'Failed to get file contents:', files, fileContents);\r\n            Log.ex(fileContents && fileContents.length > 1, 'Should not be possible to input multiple files yet.');\r\n            if (!fileContents) return;\r\n            if (fileContents.length == 0) return;\r\n            // @ts-ignore\r\n            filename = e.target.files?.[0].name;\r\n            console.log(\"file read\", {e, fileContents, files, filename});\r\n            filestring = fileContents[0];\r\n            console.log('importEcore filestring input: ', filestring);\r\n            if (fromXML) {\r\n                let windoww = window as any;\r\n                windoww.file = filestring;\r\n                windoww.todoc = (str: any) => new DOMParser().parseFromString(str,\"text/xml\");\r\n                windoww.doctojson = (doc: any) => prxml2json.xml2jsonobj(doc, ' ');\r\n                // problemi doctojson or xmi parser: \\n replacemet causa crash per stringa in posizione invalida. \\\" anche per attributi inline che iniiano con \\\\\"\r\n                // filestring = U.multiReplaceAll(filestring, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\r\n\r\n                const xmlDoc = new DOMParser().parseFromString(filestring,\"text/xml\");\r\n                console.log('importEcore xml:', xmlDoc);\r\n                let jsonstring0 = '';\r\n                jsonobj = prxml2json.xml2jsonobj(xmlDoc, ' ');//doto: non devo wrappare con \\\" i nomi di chiavi o valori ma solo i contenuti\r\n                /*jsonstring = jsonstring0;\r\n                //jsonstring = U.multiReplaceAll(jsonstring0, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\r\n                *///jsonstring = jsonstring.replaceAll(/(\\{|\\,)\\\\n\\s*/gm, \"\")\r\n                /*if (jsonstring.includes(\"\\n\")) throw new Error(jsonstring0.substring(0, 1000)+\"\\n\\n\\n\\n\" + jsonstring.substring(0, 1000));\r\n                */\r\n                // jsonstring = JSON.stringify(jsonobj);\r\n                console.log('importEcore jsonstr input: ', jsonobj);\r\n            }\r\n            else jsonstring = filestring;\r\n            let isMetamodel = filename.indexOf(\".ecore\") === filename.length - \".ecore\".length;\r\n            console.log(\"ismetamodel\", {filename, isMetamodel});\r\n            let end = SaveManager.importEcore(jsonobj || jsonstring || 'null', isMetamodel,filename, true);\r\n            console.error({end});\r\n        }, extensions, true);\r\n    }\r\n\r\n    public static exportEcore(model: LModel): Json {\r\n        let loopobj = {};\r\n        try { return model.generateEcoreJson(loopobj); }\r\n        catch(e) { Log.exx(\"possible loop in model:\\t\\n\" + (e as Error).message, {loopobj, e}); }\r\n        return {\"error\": true, loopobj};\r\n    }\r\n    public static importEcore(jsonstr: GObject | string | null, isMetamodel: boolean, filename: string | undefined, loadOnModel: boolean = true): DModelElement[] {\r\n        return EcoreParser.parse(jsonstr, isMetamodel, filename, loadOnModel);\r\n    }\r\n\r\n    static exportLayout_click(toFile: boolean) {\r\n        let lmodel: LModel = (LPointerTargetable.wrap(store.getState().models[0]) as LModel);\r\n        // lmodel.node?.allSubNodes\r\n\r\n    }\r\n    static importLayout_click(fromFile: boolean) {\r\n\r\n    }\r\n}\r\n\r\n","import React, {Dispatch, PureComponent, ReactNode} from 'react';\r\nimport {\r\n    Dictionary, DUser,\r\n    GObject, DState,\r\n    Log, U, RedoAction,\r\n    statehistory,\r\n    UndoAction, store,\r\n} from '../../joiner';\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface SaveManagerProps {}\r\n\r\nclass UndoRedoState{\r\n    hover: boolean = false;\r\n    jsx: any | null;\r\n    constructor(jsx: any) {  this.jsx = jsx; }\r\n}\r\n\r\n// private\r\ninterface ThisState {\r\n    undo: UndoRedoState;\r\n    redo: UndoRedoState;\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n    maxlistsize: number;\r\n    undo: GObject<\"delta\">[],\r\n    redo: GObject<\"delta\">[],\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\ntype R = {str: string, fullstr: string, path:string[], fullpath:string[], val: string, fullvalue: string, pathlength?: number};\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\nexport class SaveManagerComponent extends PureComponent<AllProps, ThisState>{\r\n    private undoredolistoutdated: boolean;\r\n    do_undo = (index: number) => {\r\n        console.error(\"undo(\" + index + \")\");\r\n        UndoAction.new(index+1);\r\n        this.undoenter(); // updates list\r\n    }\r\n    do_redo = (index: number) => {\r\n        console.error(\"redo(\" + index + \")\");\r\n        RedoAction.new(index+1);\r\n        this.redoenter();\r\n    }\r\n    printablePointer(pathsegment: string, state: DState){\r\n        let obj = state.idlookup[pathsegment] as GObject;\r\n        if (!obj) return pathsegment;\r\n        if (obj.name) return \"@\"+obj.name;\r\n        if (obj.className) return \"#\"+obj.className;\r\n        return pathsegment;\r\n    }\r\n    // redo list is updated only when the user mouse-enters it. for efficiency.\r\n    undoredoenter = (key: string = \"undo\") => {\r\n        console.log(\"statemanager undo update\", {thiss:this, undo:this.props.undo, redo: this.props.redo, props: this.props, state:this.state});\r\n        if (!this.undoredolistoutdated) return;\r\n        let s: DState = store.getState();\r\n        let jsx = <>\r\n            {\r\n                [...(this.props as GObject)[key]].reverse().slice(0, this.props.maxlistsize).map((delta, index) => {\r\n                    let out: {best: R}&R[] = [] as GObject as R[] & {best:R};\r\n                    let retuseless = U.ObjectToAssignementStrings(delta, 10, 6, 20, \"…\", out, true);\r\n                    console.log(\"undoredo update\", out);\r\n                    if (out.best.fullstr.includes(\"Pointer\")) {\r\n                        let editedfullpath = out.best.fullpath.map( (pathsegment) => {\r\n                            //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\r\n                            return this.printablePointer(pathsegment, s); });\r\n                        out.best.str = editedfullpath.join(\".\") + \" = \" + out.best.val;\r\n                        console.log(\"undoredo replace attempt\", {editedfullpath, beststr:out.best.str, best: out.best});\r\n\r\n                    }\r\n\r\n                    if (out.best.path[0] === \"idlookup\") out.best.str = \"\" + out.best.str.substring(\"idlookup.\".length);\r\n                    if (out.best.fullvalue.includes(\"Pointer\")) {\r\n                        out.best.val = this.printablePointer(out.best.fullvalue.substring(1, out.best.fullvalue.length-1), s); // 1, -1 because string values have quotes \"\"\r\n                        out.best.str = out.best.str.substring(0, out.best.str.lastIndexOf(\"=\")) + \"= \" + out.best.val;\r\n                    }\r\n                    return <li onClick={() => ((this as GObject)[\"do_\"+key](index))} className=\"hoverable\" key={index} style={{overflow: \"visible\", height: \"24px\"}}>\r\n                        <div className={\"preview\"}>{out.best.str}</div>\r\n                        <div className={\"content\"} style={{overflow: \"visible\", height:\"100%\",\r\n                            width: \"max-content\", maxWidth: \"75vw\"}}>{\r\n                            out.map(row => <div style={{background: \"#ddd\", marginLeft: \"-20px\", paddingLeft:\"20px\", height:\"fit-content\", pointerEvents:\"none\"}}>{row.fullpath.join(\".\") + \" = \" + row.fullvalue}</div>)\r\n                        }</div>\r\n                    </li>\r\n                })}</>;\r\n        let obj: GObject = {};\r\n        obj[key] = {...(this.state as GObject)[key], hover: true, jsx};\r\n        // {undo: {...this.state.undo, hover: true, jsx}}\r\n        this.undoredolistoutdated = false;\r\n        this.setState(obj as ThisState);\r\n    }\r\n\r\n    undoenter = ()=>{ return this.undoredoenter(\"undo\"); }\r\n    redoenter = ()=>{ return this.undoredoenter(\"redo\"); }\r\n    undoleave = ()=>{ this.setState({undo: {...this.state.undo, hover: false}}); }\r\n    redoleave = ()=>{ this.setState({redo: {...this.state.redo, hover: false}}); }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        let undo = new UndoRedoState(<div>undolist example</div>);\r\n        let redo = new UndoRedoState(<div>redolist example</div>);\r\n        this.state = {undo, redo};\r\n        this.undoredolistoutdated = true;\r\n        // this.setState({undo, redo});\r\n    }\r\n    render(): ReactNode {\r\n        this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\r\n        // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\r\n\r\n        // simple version without list of changes\r\n        return(<>\r\n            <label className={'item border round ms-1'} onClick={(e)=> { this.do_undo(0) }}>Undo ({this.props.undo.length})</label>\r\n            <label className={'item border round ms-1'} onClick={(e)=> { this.do_redo(0) }}>Redo ({this.props.redo.length})</label>\r\n        </>);\r\n\r\n        // complex version with list of changes\r\n        return(<>\r\n            <div style={{display: \"inline-block\"}}>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.undoenter} onMouseLeave={this.undoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_undo(0) }}>Undo ({this.props.undo.length})</button>\r\n                    {this.props.undo.length ? <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.undo.jsx}</ul> : null}\r\n                </span>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.redoenter} onMouseLeave={this.redoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_redo(0) }}>Redo ({this.props.redo.length})</button>\r\n                    {this.props.redo.length ? <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.redo.jsx}</ul> : null}\r\n                </span>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.undo = statehistory[DUser.current].undoable;\r\n    ret.redo = statehistory[DUser.current].redoable;\r\n    ret.maxlistsize = 10;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const SaveManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SaveManagerComponent);\r\n\r\nexport default SaveManagerConnected;\r\n","import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport '../topbar/style.scss';\r\nimport {Firebase} from \"../../firebase\";\r\nimport {DUser, DState, U} from \"../../joiner\";\r\n\r\nfunction RoomManagerComponent(props: AllProps) {\r\n    const room = (props.room) ? props.room : '';\r\n    const iot = props.iot;\r\n    const root = 'http://localhost:3000/jodel-react/';\r\n\r\n    const create = async(iot: boolean) => {\r\n        const code = U.getRandomString(5);\r\n        await Firebase.add('rooms', code, {\r\n            code: code,\r\n            actions: [],\r\n            createdBy: DUser.current,\r\n            iot: iot\r\n        });\r\n        window.open(root + 'room/' + code, '_blank');\r\n    }\r\n\r\n    const share = () => {U.alert('info', root + 'room/' + room);}\r\n\r\n    const quit = async() => {\r\n        await Firebase.removeRoom(room);\r\n        window.location.replace(root);\r\n    }\r\n\r\n    if(!room) {\r\n        return(<div >\r\n            <label onClick={() => create(true)} className={'item border round ms-1 bg-primary px-2'}>IoT</label>\r\n            <label onClick={() => create(false)} className={'item border round ms-1 bg-primary'}>Collaborative</label>\r\n        </div>);\r\n    } else {\r\n        if(iot === null) return(<></>);\r\n        return(<div className={'ms-auto'}>\r\n            {(!iot) && <label onClick={share} className={'item border round ms-1 bg-primary'}>Share</label>}\r\n            <label onClick={quit} className={'item border round ms-1 bg-danger'}>Quit</label>\r\n        </div>);\r\n    }\r\n\r\n}\r\ninterface OwnProps {room?: string}\r\ninterface StateProps {iot: null|boolean}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const iot = state.iot;\r\n    return {iot};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const RoomManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RoomManagerComponent);\r\n\r\nexport const RoomManager = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <RoomManagerConnected {...{...props, children}} />;\r\n}\r\n\r\nexport default RoomManager;\r\n","import React, {Dispatch, ReactElement, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport './style.scss';\r\nimport {\r\n    DState,\r\n    CreateElementAction,\r\n    DEdgePoint,\r\n    DViewElement,\r\n    DVoidEdge,\r\n    EdgeBendingMode,\r\n    GObject,\r\n    GraphSize,\r\n    Input,\r\n    Selectors,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    store\r\n} from \"../../joiner\";\r\nimport {SaveManager} from \"./SaveManager\";\r\nimport {DamEdge} from \"../../graph/damedges/damedge\";\r\nimport toast from \"react-hot-toast\";\r\nimport Undoredocomponent from \"./undoredocomponent\";\r\nimport RoomManager from \"../room/RoomManager\";\r\n\r\nfunction Topbar(props: AllProps) {\r\n\r\n    const debug = props.debug;\r\n\r\n    const notify = (text: string) => toast((t: GObject) => (\r\n        <div onClick={() => toast.dismiss(t.id)}>\r\n            <label className={'ms-1'}>{text}</label>\r\n        </div>\r\n    ));\r\n    const [edgetest, setEdgeTest] = useState(<div id={\"edgetest-empty\"}></div>);\r\n\r\n    const save = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.save();\r\n        notify('Saved');\r\n    }\r\n    const load = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.load();\r\n    }\r\n\r\n    const importJson = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.importEcore_click(false, true);\r\n    }\r\n    const exportJson = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.exportEcore_click(false, true);\r\n    }\r\n\r\n    const importXml = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.importEcore_click(true, true);\r\n    }\r\n    const exportXml = (evt: React.MouseEvent<HTMLLabelElement>) => {\r\n        SaveManager.exportEcore_click(true, true);\r\n    }\r\n\r\n    if (debug && !document.body.classList.contains(\"debug\")) document.body.classList.add(\"debug\");\r\n    else document.body.classList.remove(\"debug\")\r\n\r\n    return(<div className={'topbar d-flex'}>\r\n        <label className={'item border round ms-1'} onClick={save}>Save</label>\r\n        <label className={'item border round ms-1'} onClick={load}>Load</label>\r\n        {props.debug && <Undoredocomponent /> }\r\n\r\n        <label className={'item border round ms-1'} onClick={exportJson}>Export JSON</label>\r\n        <label className={'item border round ms-1'} onClick={importJson}>Import JSON</label>\r\n\r\n        {props.debug && <>\r\n                <label className={'item border round ms-1'} onClick={exportXml}>Export XML</label>\r\n                <label className={'item border round ms-1'} onClick={importXml}>Import XML</label>\r\n\r\n                <div className={'ms-auto me-1 d-flex'}>\r\n                    <label className={'item border round ms-1'} onClick={ () => SaveManager.exportLayout_click(false) }>Export Layout</label>\r\n                    <label className={'item border round ms-1'} onClick={ () => SaveManager.importLayout_click(false) }>Import Layout</label>\r\n                </div>\r\n            </>\r\n        }\r\n\r\n        <label className={\"p-1 \"} style={{display: \"flex\", cursor: \"auto\"}}>\r\n            <label className={\"my-auto\"}>Debug mode</label>\r\n            <input className={\"my-auto input ms-auto\"} type={\"checkbox\"} checked={props.debug} onChange={(e)=>{\r\n            SetRootFieldAction.new(\"debug\", e.target.checked);\r\n            }\r\n            } />\r\n        </label>\r\n\r\n        <div className={'ms-auto d-flex'}>\r\n            <RoomManager room={props.room} />\r\n        </div>\r\n    </div>);\r\n}\r\ninterface OwnProps {room?: string}\r\ninterface StateProps {debug: boolean}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.debug = state.debug;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TopBarConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Topbar);\r\n\r\nexport const TopBar = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <TopBarConnected {...{...props, children}} />;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//             <ellipse stroke={\"black\"} fill={\"red\"} cx={this.props.node.end.x} cy={this.props.node.end.y}\r\n//                         rx={this.props.node.end.w} ry={this.props.node.end.h} />\r\n//             <ellipse stroke={\"black\"} fill={\"red\"} cx={this.props.node.start.x} cy={this.props.node.start.y}\r\n//                         rx={this.props.node.start.w} ry={this.props.node.start.h} />\r\nfunction edgetestclick(){\r\n    let jsxmn_svg = `<ellipse stroke={\"black\"} fill={\"red\"} cx={this.props.node.x} cy={this.props.node.y} rx={this.props.node.w} ry={this.props.node.h} />`;\r\n    let jsxmn_html = `<div style={{borderRadius:\"999px\", border: \"2px solid black\", background:\"red\", width:(this.props.node.w+50)+\"px\", height:(this.props.node.h+50)+\"px\"}} y={this.props.node.y}/>`;\r\n    let jsxmn_html_nonodeaccess = `<div style={{borderRadius:\"999px\", border: \"2px solid black\", background:\"red\", width:\"100%\", height:\"100%\"}} />`;\r\n\r\n    let jsxmn_html_manualpos = `<div style={{borderRadius:\"999px\", border: \"2px solid black\", position:\"absolute\", background:\"red\",\r\ntop:(this.props.node.y-this.props.node.h/2+50)+\"px\", left:(this.props.node.x-this.props.node.w/2+50)+\"px\",\r\nwidth:(this.props.node.w+50)+\"px\", height:(this.props.node.h+50)+\"px\"}} y={this.props.node.y}/>`;\r\n    let midnodeviewsvg = DViewElement.new2(\"edgepoint view svg\", jsxmn_svg, (d)=>{d.defaultVSize=new GraphSize(0, 0, 5, 5);  d.adaptHeight=true; d.adaptWidth=true; });\r\n    let midnodeview = DViewElement.new2(\"edgepoint view html\", jsxmn_html_nonodeaccess, (d)=>{d.defaultVSize=new GraphSize(0, 0, 25, 25); /*d.adaptHeight=true; d.adaptWidth=true;*/ });\r\n    let dataid = store.getState().models[0];\r\n    // <g>{this.props.node.midnodes.map((mn) => <VoidVertex nodeid={mn.id+\"_svg\"} view={\"`+midnodeviewsvg.id+`\"} />)}</g>\r\n    let jsx =\r\n        `<svg>\r\n            <path stroke={\"black\"} fill={\"none\"} d={this.props.path()}></path>\r\n            {\r\n                \r\n                <foreignObject style={{overflow:\"visible\"}}>\r\n                    <VoidVertex key={\"midnode1\"} view={\"` + midnodeview.id + `\"} />\r\n                    <VoidVertex />\r\n                </foreignObject>\r\n            }\r\n        </svg>`;\r\n\r\n    let view = DViewElement.new2(\"edge view\", jsx, (d)=> { d.bendingMode = EdgeBendingMode.Line; });\r\n    // let node: DVoidEdge = DVoidEdge.new();\r\n    /*function makeep(x:number, y:number, w=5, h=5) {\r\n        // return new GraphSize(x, y, w, h);\r\n        let e = DEdgePoint.new(undefined, node.id, undefined, undefined, new GraphSize(x, y, w, h));\r\n        return e.id;\r\n    }*/\r\n    // let makeedgepoints = [makeep(50, 100), makeep(80, 100), makeep(120, 120), makeep(150,120), makeep(150, 80)];\r\n    // SetFieldAction.new(node.id, \"midnodes\",  makeedgepoints, '', true);\r\n    // node.midnodes = [makeep(50, 100), makeep(80, 100), makeep(120, 120), makeep(150,120), makeep(150, 80)];\r\n    // CreateElementAction.new(view); CreateElementAction.new(midnodeview); CreateElementAction.new(node);\r\n    let graphid = store.getState().graphs[0];\r\n    return <div style={{position:\"absolute\", zIndex:1000, top:\"50px\", left:\"50px\", width:\"500px\", height:\"500px\", background:\"white\", border:\"4px solid black\"}}>\r\n        <div style={{height:\"100%\", width:\"100%\", position:\"relative\"}}>\r\n            {/*<DamEdge view={view.id} graphid={graphid} />*/}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TopBar;\r\n","import './style.scss';\r\nimport {Oval} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Cleaning() {\r\n    return(<div className={'popup-container'}>\r\n        <div className={'popup'}>\r\n            <label className={'d-block text-center mt-3'}>\r\n                <b style={{color: '#475e6c'}}>CLEANING...</b>\r\n                <Oval height={60} width={60} wrapperStyle={{justifyContent: 'center'}} wrapperClass={'mt-5'}\r\n                      color={'#475e6c'} secondaryColor={'#ff8811'} />\r\n            </label>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Cleaning;\r\n","import React, {Dispatch} from 'react';\r\nimport './App.scss';\r\nimport './styles/view.scss';\r\nimport './styles/style.scss';\r\nimport Dock from \"./components/abstract/DockLayout\";\r\nimport {DState, statehistory, U} from \"./joiner\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport SplashImage from './static/img/splash.png';\r\nimport {Oval} from \"react-loader-spinner\";\r\nimport TopBar from \"./components/topbar/Topbar\";\r\nimport {connect} from \"react-redux\";\r\nimport Cleaning from \"./popup/Cleaning\";\r\n\r\nfunction App(props: AllProps) {\r\n    const debug = props.debug;\r\n    const isCleaning = props.isCleaning;\r\n    const [splash, setSplash] = useStateIfMounted(!debug);\r\n\r\n    useEffectOnce(() => {\r\n        U.sleep(3).then(() => {setSplash(false)});\r\n    });\r\n\r\n    if(splash) {\r\n        return(<div className={'w-100 h-100 text-center bg-smoke'}>\r\n            <img style={{height: '60%', width: '80%'}} className={'mt-3 rounded shadow'} src={SplashImage}></img>\r\n            <Oval height={80} width={80} wrapperStyle={{justifyContent: 'center'}} wrapperClass={'mt-3'}\r\n                  color={'#475e6c'} secondaryColor={'#ff8811'} />\r\n        </div>);\r\n    } else {\r\n        return(<div className={'d-flex flex-column h-100 p-1 REACT-ROOT' + (props.debug ? \" debug\" : \"\")} onClick={() => {statehistory.globalcanundostate = true;} } >\r\n            <TopBar room={props.room} />\r\n            <Dock />\r\n            {isCleaning && <Cleaning />}\r\n        </div>);\r\n    }\r\n\r\n}\r\n\r\ninterface OwnProps {room?: string}\r\ninterface StateProps {debug: boolean, isCleaning: boolean}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.debug = state.debug;\r\n    ret.isCleaning = state.isCleaning;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const AppConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n\r\nexport default AppConnected;\r\n","import type {Dictionary, GObject, Pointer} from \"../../joiner\";\r\nimport React, {Dispatch, ReactElement} from \"react\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport IotEngine from \"./IotEngine\";\r\nimport {connect} from \"react-redux\";\r\nimport {doc, onSnapshot} from \"@firebase/firestore\";\r\nimport {Firebase} from \"../../firebase\";\r\nimport {Action, DUser, Selectors, SetRootFieldAction, DState, U, } from \"../../joiner\";\r\n\r\nconst ROOM_SIZE_LIMIT = 200;\r\nfunction RoomAttacherComponent(props: AllProps) {\r\n    const room = props.room;\r\n    const [createdBy, setCreatedBy] = useStateIfMounted<string>('');\r\n    const [actions, setActions] = useStateIfMounted<Dictionary<Pointer, boolean>>({});\r\n    const [roomSize, setRoomSize] = useStateIfMounted<number>(0);\r\n    const [error, setError] = useStateIfMounted<boolean>(false);\r\n    const [iot, setIot] = useStateIfMounted<boolean|null>(null);\r\n    const [iotData, setIotData] = useStateIfMounted<GObject>({});\r\n\r\n    const cleaner = async (): Promise<void> => {\r\n        if(roomSize > ROOM_SIZE_LIMIT) {\r\n            SetRootFieldAction.new('isCleaning', true, '');\r\n            // await Firebase.edit(room, 'state', JSON.stringify(store.getState()));\r\n            await Firebase.edit(room, 'actions', []);\r\n            SetRootFieldAction.new('isCleaning', false, '');\r\n        }\r\n    }\r\n\r\n\r\n    if(!room) return(<></>);\r\n\r\n    onSnapshot(doc(Firebase.db, 'rooms', room),\r\n        (doc: GObject) => {\r\n            if(!Selectors.getRoom()) return;\r\n            const data = doc.data(); if(!data) return;\r\n            if(!createdBy) setCreatedBy(data.createdBy);\r\n            // setRoomSize(data.actions.length);\r\n            if(!U.deepEqual(iotData, data.iotData)) setIotData(data.iotData);\r\n            if(iot === null) {\r\n                setIot(data.iot);\r\n                SetRootFieldAction.new('iot', data.iot, '', false);\r\n            }\r\n            for(let action of data.actions.filter((item: GObject) => !actions[item.id])) {\r\n                const receivedAction = Action.fromJson(action);\r\n                if(action.token === DUser.token) continue;\r\n                receivedAction.hasFired = receivedAction.hasFired - 1;\r\n                receivedAction.fire();\r\n                actions[action.id] = true; setActions(actions);\r\n            }\r\n        },\r\n        (doc: GObject) => {setError(true)},\r\n        () => {}\r\n    );\r\n\r\n    const css = (roomSize > 150) ? 'text-danger' : (roomSize > 100) ? 'text-warning' : 'text-success';\r\n\r\n    return(<></>);\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {room: string}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.room = state.room;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const RoomAttacherConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RoomAttacherComponent);\r\n\r\nexport const RoomAttacher = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <RoomAttacherConnected {...{...props, children}} />;\r\n}\r\n\r\nexport default RoomAttacher;\r\n","import {useParams} from 'react-router-dom';\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport {CONSTRAINT, Firebase} from \"../../firebase\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport App from \"../../App\";\r\nimport RoomAttacher from \"./RoomAttacher\";\r\nimport {SetRootFieldAction} from \"../../redux/action/action\";\r\nimport {SaveManager} from \"../topbar/SaveManager\";\r\n\r\nfunction RoomChecker() {\r\n    const {id} = useParams();\r\n    const [loading, setLoading] = useStateIfMounted(true);\r\n    const [validCode, setValidCode] = useStateIfMounted(false);\r\n\r\n    useEffectOnce(() => {\r\n        const constraint: CONSTRAINT = {field: 'code', operator: '==', value: id};\r\n        Firebase.select('rooms', constraint).then((results) => {\r\n            if(results.length) {\r\n                const result = results[0];\r\n                if(result.state) SaveManager.load(result.state)\r\n                SetRootFieldAction.new('room', id); setValidCode(true);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    })\r\n\r\n    if(loading) return(<div>Loading...</div>);\r\n    if(validCode) return(<>\r\n        <App room={id} />\r\n        <RoomAttacher />\r\n    </>);\r\n    return(<div>Invalid code</div>)\r\n}\r\n\r\nexport default RoomChecker;\r\n","import {BrowserRouter , Routes, Route} from 'react-router-dom';\r\nimport RoomChecker from \"../components/room/RoomChecker\";\r\nimport App from \"../App\";\r\n\r\nfunction Router() {\r\n    const root = 'jodel-react/'\r\n\r\n    return(<BrowserRouter>\r\n        <Routes>\r\n            <Route path={''} element={<App />} />\r\n            <Route path={root} element={<App />} />\r\n            <Route path={root + 'room/:id'} element={<RoomChecker />} />\r\n            <Route path={'*'} element={<b>404: Not Found</b>} />\r\n        </Routes>\r\n    </BrowserRouter>);\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport {Provider} from \"react-redux\";\r\nimport {jodelInit, store} from \"./joiner\";\r\nimport Router from \"./router/Router\";\r\n\r\nfunction start() {\r\n    jodelInit();\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <Router />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nsetTimeout(start, 10);\r\n\r\n","export class Env {\r\n    public static apiKey = \"AIzaSyCibYFREIn-uQL2e0bfzBX05uB57KYWhpI\";\r\n    public static authDomain = \"jjodel.firebaseapp.com\";\r\n    public static projectId = \"jjodel\";\r\n    public static storageBucket = \"jjodel.appspot.com\";\r\n    public static messagingSenderId = \"301705335217\";\r\n    public static appId = \"1:301705335217:web:3aaca45d25559e09d9ad90\";\r\n}\r\n\r\n","import {initializeApp} from \"firebase/app\";\r\nimport {\r\n    collection,\r\n    CollectionReference,\r\n    doc,\r\n    getDocs,\r\n    getFirestore,\r\n    or,\r\n    Query,\r\n    query,\r\n    QueryFieldFilterConstraint,\r\n    setDoc,\r\n    updateDoc,\r\n    where,\r\n    deleteDoc\r\n} from '@firebase/firestore';\r\nimport {Env} from \"./environment\";\r\nimport firebase from \"firebase/compat\";\r\nimport { GObject } from \"../joiner\";\r\n\r\ntype OPERATOR = '=='|'!=';\r\nexport interface CONSTRAINT {field: string, operator: OPERATOR, value: any}\r\n\r\nexport class Firebase {\r\n    static config = {\r\n        apiKey: Env.apiKey,\r\n        authDomain: Env.authDomain,\r\n        projectId: Env.projectId,\r\n        storageBucket: Env.storageBucket,\r\n        messagingSenderId: Env.messagingSenderId,\r\n        appId: Env.appId\r\n    };\r\n\r\n    static app = initializeApp(Firebase.config);\r\n    static db = getFirestore(Firebase.app);\r\n\r\n    static async select(collectionName: string, constraints?: CONSTRAINT|CONSTRAINT[], isAND: boolean = true): Promise<any> {\r\n        const DOC = collection(Firebase.db, collectionName);\r\n        if(constraints) {\r\n            const _constraints = (Array.isArray(constraints)) ? constraints : [constraints];\r\n            if(_constraints.length > 0) return await Firebase._selectWithConditions(DOC, _constraints, isAND);\r\n            else return await Firebase._selectWithoutConditions(DOC);\r\n        }\r\n        else return await Firebase._selectWithoutConditions(DOC);\r\n    }\r\n\r\n    private static async _selectWithConditions(DOC: CollectionReference, constraints: CONSTRAINT[], isAND: boolean): Promise<any> {\r\n        const objects: any = [];\r\n        const conditions: QueryFieldFilterConstraint[] = [];\r\n        for(let constraint of constraints) {\r\n            const field = constraint.field;\r\n            const operator = constraint.operator;\r\n            const value = constraint.value;\r\n            conditions.push(where(String(field), operator, value));\r\n        }\r\n        let q: Query;\r\n        if(isAND) q = query(DOC, ...conditions);\r\n        else q = query(DOC, or(...conditions));\r\n        const qs = await getDocs(q);\r\n        qs.forEach((doc: GObject) => {objects.push({...doc.data()})});\r\n        return objects;\r\n    }\r\n\r\n    private static async _selectWithoutConditions(DOC: CollectionReference): Promise<any> {\r\n        const objects: any = [];\r\n        const q = query(DOC); const qs = await getDocs(q);\r\n        qs.forEach((doc: GObject) => {objects.push({...doc.data()})});\r\n        return objects\r\n    }\r\n\r\n    static async add(collection: string, id: string, obj: any): Promise<void> {\r\n        const DOC = doc(Firebase.db, collection, id);\r\n        await setDoc(DOC, obj,{merge: false});\r\n    }\r\n\r\n    static async edit(room: string, field: string, value: any): Promise<void> {\r\n        const collection = 'rooms';\r\n        const DOC = doc(Firebase.db, collection, room);\r\n        await updateDoc(DOC, field, value);\r\n    }\r\n\r\n    static async remove(id: string, path: string): Promise<void> {\r\n        const DOC = doc(Firebase.db, path, id);\r\n        await deleteDoc(DOC);\r\n    }\r\n\r\n    static async addAction(room: string, action: JSON): Promise<void> {\r\n        await Firebase.edit(room, 'actions', firebase.firestore.FieldValue.arrayUnion(action));\r\n    }\r\n\r\n    static async removeRoom(room: string): Promise<void> {\r\n        await Firebase.remove(room, 'rooms');\r\n    }\r\n\r\n}\r\n","import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    DVoidVertex,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    DState,\r\n    LClass,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LUser,\r\n    LVoidVertex,\r\n    RuntimeAccessibleClass, LViewPoint,\r\n    U, GraphSize, GraphPoint, GObject, Size, SetRootFieldAction, SetFieldAction, DVertex, DVoidEdge, DEdgePoint, DUser, Dictionary, Pointer,\r\n} from \"../../joiner\";\r\nimport $ from \"jquery\";\r\nimport \"jqueryui\";\r\nimport \"jqueryui/jquery-ui.css\";\r\nimport {DamEdge} from \"../damedges/damedge\";\r\n\r\nconst superclassGraphElementComponent: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\nclass ThisStatee extends GraphElementStatee { forceupdate?: number }\r\n\r\nvar dragHelper = document.createElement(\"div\");\r\ndragHelper.style.backgroundColor = \"transparent\";\r\ndragHelper.style.outline = \"4px solid black\";\r\n\r\nexport class VertexComponent<AllProps extends AllPropss = AllPropss, ThisState extends ThisStatee = ThisStatee>\r\n    extends superclassGraphElementComponent<AllProps, ThisState> {\r\n\r\n    /*\r\n    shouldComponentUpdate(newProps: Readonly<AllProps>, newState: Readonly<ThisState>, newContext: any): boolean {\r\n        const oldProps = this.props;\r\n        const newData = newProps.data; const oldData = oldProps.data;\r\n        const newNode = newProps.node; const oldNode = oldProps.node;\r\n        const newViewpoint = newProps.viewpoint; const oldViewpoint = oldProps.viewpoint;\r\n        const newEdgePending = newProps.isEdgePending; const oldEdgePending = oldProps.isEdgePending;\r\n\r\n        if(newData.__raw !== oldData.__raw) return true;\r\n        if(newNode?.__raw !== oldNode?.__raw) return true;\r\n        if(newViewpoint.__raw !== oldViewpoint.__raw) return true;\r\n        if(newEdgePending !== oldEdgePending) return true;\r\n        return false;\r\n    }\r\n     */\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.getSize = this.getSize.bind(this);\r\n        this.setSize = this.setSize.bind(this);\r\n        // this.state={forceupdate:1};\r\n        setTimeout(()=>{\r\n            this.getSize = this.getSize.bind(this);\r\n            this.setSize = this.setSize.bind(this);\r\n            // this.get_size = console.error as any;\r\n            // this.r = (<RootVertex props={this.props} render={super.render()} super={this} />);\r\n            this.forceUpdate();\r\n            this.setState({forceupdate:2});\r\n        },1)\r\n    }\r\n\r\n\r\n    setVertexProperties(){\r\n        if(!this.props.node || !this.html.current) return;\r\n        if (this.hasSetVertexProperties) return;\r\n        this.hasSetVertexProperties = true;\r\n\r\n        let html = this.html.current;\r\n\r\n        const $measurable: GObject<\"JQuery + ui plugin\"> = $(html); // todo: install typings\r\n        // $element = $(html).find(\".measurable\").addBack();\r\n        $measurable.draggable({\r\n            cursor: 'grabbing',\r\n            containment: 'parent',\r\n            opacity: 0.0,\r\n            disabled: !(this.props.view.draggable),\r\n            distance: 5,\r\n            helper: () => { // or \"clone\",\r\n                // dragHelper.style.display=\"block\";\r\n                let size = this.getSize();\r\n                // let actualSize = Size.of(html);\r\n                // if (size.w !== actualSize.w || size.h !== actualSize.h) this.setSize({w:actualSize.w, h:actualSize.h});\r\n                dragHelper.style.width = size.w+\"px\";\r\n                dragHelper.style.height = size.h+\"px\";\r\n                dragHelper.style.opacity = this.props.view.constraints.length ? \"1\" : \"0.5\";\r\n                if (this.props.view.lazySizeUpdate) dragHelper.classList.add(\"lazySizeUpdate\");\r\n                else dragHelper.classList.remove(\"lazySizeUpdate\");\r\n                return dragHelper;\r\n            },\r\n\r\n            // disabled: !(view.draggable),\r\n            start: (event: GObject, obj: GObject) => {\r\n                // this.select();\r\n                SetRootFieldAction.new(\"contextMenu\", { display: false, x: 0, y: 0 }); // todo: should probably be done in a document event\r\n                if (this.props.view.onDragStart) {\r\n                    try{ eval(this.props.view.onDragStart); } // todo: eval in context\r\n                    catch (e) { console.log(e) }\r\n                }\r\n            },\r\n            drag: (event: GObject, obj: GObject) => {\r\n                if (!this.props.view.lazySizeUpdate) this.setSize({x:obj.position.left, y:obj.position.top});\r\n            },\r\n            stop: (event: GObject, obj: GObject) => {\r\n                console.log(\"drag stop setsize\", {x:obj.position.left, y:obj.position.top});\r\n                this.setSize({x:obj.position.left, y:obj.position.top});\r\n                if (this.props.view.onDragEnd) {\r\n                    try{ eval(this.props.view.onDragEnd); } // todo: eval in context\r\n                    catch (e) { console.log(e) }\r\n                }\r\n            }\r\n        });\r\n        let resizeoptions: GObject = {\r\n            disabled: !(this.props.view.resizable),\r\n            start: (event: GObject, obj: GObject) => {\r\n                this.select();\r\n                if (!this.props.node.isResized) this.props.node.isResized = true; // set only on manual resize, so here and not on setSize()\r\n                SetRootFieldAction.new(\"contextMenu\", { display: false, x: 0, y: 0 });\r\n                if (this.props.view.onResizeStart) {\r\n                    try{ eval(this.props.view.onResizeStart); }\r\n                    catch (e) { console.log(e) }\r\n                }\r\n            },\r\n            resize: (event: GObject, obj: GObject) => {\r\n                if (!this.props.view.lazySizeUpdate) this.setSize({w:obj.position.width, h:obj.position.height});\r\n                // SetRootFieldAction.new(\"resizing\", {})\r\n            },\r\n            stop: (event: GObject, obj: GObject) => {\r\n                if (!this.state.classes.includes(\"resized\")) this.setState({classes:[...this.state.classes, \"resized\"]});\r\n                // if (!withSetSize) { node.width = obj.size.width; node.height = obj.size.height; } else {\r\n                this.setSize({w:obj.size.width, h:obj.size.height});\r\n                // console.log(\"resize setsize:\", obj, {w:obj.size.width, h:obj.size.height});\r\n                if (this.props.view.onResizeEnd) {\r\n                    try{ eval(this.props.view.onResizeEnd); }\r\n                    catch (e) { console.log(e) }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.view.lazySizeUpdate) {\r\n            // this does not accept a func or htmlElem, but only a classname...\r\n            // and makes his own empty proxy element to resize in his place. inchoherent.\r\n            resizeoptions.helper = \"resizable-helper-bad\";\r\n        }\r\n        else {\r\n            resizeoptions.containment = 'parent';\r\n        }\r\n        $measurable.resizable(resizeoptions);\r\n\r\n    }\r\n\r\n\r\n\r\n    getSize(): Readonly<GraphSize> {\r\n        return this.props.node.size;\r\n        /*console.log(\"get_size(\"+(this.props?.data as any).name+\")\", {\r\n            view:this.props.view.getSize(this.props.dataid || this.props.nodeid as string),\r\n            node:this.props.node?.size,\r\n            default: this.props.view.defaultVSize});*/\r\n\r\n        let ret = this.props.view.getSize(this.props.dataid || this.props.nodeid as string)\r\n            || this.props.node?.size\r\n            || this.props.view.defaultVSize;\r\n        if (this.props.node.isResized) return ret;\r\n        let actualSize: Partial<Size>&{w:number, h:number} = this.html.current ? Size.of(this.html.current as Element) : {w:0, h:0};\r\n        if (this.props.view.adaptWidth && ret.w !== actualSize.w) {\r\n            this.setSize({w:actualSize.w});\r\n            ret.w = actualSize.w;\r\n        }\r\n        if (this.props.view.adaptHeight && ret.h !== actualSize.h) {\r\n            this.setSize({h:actualSize.h});\r\n            ret.h = actualSize.h;\r\n        }\r\n        return ret;\r\n    }\r\n    // setSize(x_or_size_or_point: number, y?: number, w?:number, h?:number): void;\r\n    setSize(x_or_size_or_point: Partial<GraphPoint>): void;\r\n    setSize(x_or_size_or_point: Partial<GraphSize>): void;\r\n    // setSize(x_or_size_or_point: number | GraphSize | GraphPoint, y?: number, w?:number, h?:number): void;\r\n    setSize(size0: Partial<GraphSize> | Partial<GraphPoint>): void {\r\n        return this.props.node.size = size0 as any;\r\n        // console.log(\"setSize(\"+(this.props?.data as any).name+\") thisss\", this);\r\n        let size: Partial<GraphSize> = size0 as Partial<GraphSize>;\r\n        if (this.props.view.storeSize) {\r\n            let id = (this.props.dataid || this.props.nodeid) as string;\r\n            this.props.view.updateSize(id, size);\r\n            return;\r\n        }\r\n        let olds = this.props.node.size;\r\n        size.x = size.x === undefined ? olds?.x : size.x;\r\n        size.y = size.y === undefined ? olds?.y : size.y;\r\n        size.w = size.w === undefined ? olds?.w : size.w;\r\n        size.h = size.h === undefined ? olds?.h : size.h;\r\n        this.props.node.size = size as GraphSize;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        if (!this.props.node) return 'Loading...';\r\n\r\n\r\n        const cssOverride: string[] = [];\r\n\r\n        let selected = false;\r\n        for(let me of Object.values(this.props.selected))\r\n            if(me?.id === this.props.dataid) selected = true;\r\n        if (selected) {\r\n            if (this.props.dataid === this.props.selected[DUser.current]?.id)\r\n                cssOverride.push('selected-by-me');\r\n            else\r\n                cssOverride.push('selected-by-others');\r\n        }\r\n\r\n        // if(!windoww.cpts) windoww.cpts = {};\r\n        // windoww.cpts[this.props.nodeid]=this;\r\n        // console.log(\"updated\");\r\n        //return this.r || <div>loading...</div>;\r\n\r\n        // set classes\r\n        let nodeType = \"NODE_TYPE_ERROR\";\r\n        if ( this.props.isEdgePoint) nodeType = \"EdgePoint\"; else\r\n        if ( this.props.isGraph &&  this.props.isVertex) nodeType = \"GraphVertex\"; else\r\n        if ( this.props.isGraph && !this.props.isVertex) nodeType = \"Graph\"; else\r\n        if (!this.props.isGraph &&  this.props.isVertex && (this.props.isVoid || !this.props.data)) nodeType = \"VoidVertex\"; else\r\n        if (!this.props.isGraph &&  this.props.isVertex) nodeType = \"Vertex\"; else\r\n        if (!this.props.isGraph && !this.props.isVertex) nodeType = \"Field\";\r\n\r\n        const classesOverride = [nodeType, ...cssOverride];\r\n        const styleOverride: React.CSSProperties = {};\r\n        // set classes end\r\n        const size: Readonly<GraphSize> = this.getSize() as any;\r\n        switch (nodeType){\r\n            case \"GraphVertex\":\r\n            case \"Vertex\":\r\n            case \"VoidVertex\":\r\n            case \"EdgePoint\":\r\n                styleOverride.top= size.y+\"px\";\r\n                styleOverride.left= size.x+\"px\";\r\n                let isResized = this.props.node.isResized;\r\n                if (isResized || !this.props.view.adaptWidth) styleOverride.width = size.w+\"px\";\r\n                else styleOverride.width = undefined;\r\n                if (isResized || !this.props.view.adaptHeight) styleOverride.height = size.h+\"px\";\r\n                else styleOverride.height = undefined; // todo: the goal is to reset jqui inline style, but not override user-defined inline style\r\n                this.setVertexProperties(); break;\r\n            default: break;\r\n        }\r\n\r\n\r\n        return super.render(nodeType, styleOverride, classesOverride);\r\n        // return <RootVertex props={this.props} render={super.render()} super={this} key={this.props.nodeid+\".\"+this.state?.forceupdate} />;\r\n    }\r\n}\r\n\r\nclass OwnProps extends GraphElementOwnProps {\r\n    // onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    // onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    isEdgePoint?: boolean = false;\r\n    isGraph?: boolean = false;\r\n    isVertex?: boolean = true;\r\n    isVoid?: boolean = false;\r\n}\r\n\r\nclass StateProps extends GraphElementReduxStateProps {\r\n    node!: LVoidVertex;\r\n    lastSelected!: LModelElement | null;\r\n    selected!: Dictionary<Pointer<DUser>, LModelElement|null>;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint\r\n}\r\n\r\nclass DispatchProps extends GraphElementDispatchProps {\r\n}\r\n\r\nexport type AllPropss = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    let DGraphElementClass: typeof DGraphElement;\r\n    if (ownProps.isEdgePoint) DGraphElementClass = DEdgePoint; else\r\n    if (ownProps.isVertex && ownProps.isGraph) DGraphElementClass = DGraphVertex; else\r\n    if (ownProps.isVertex && !ownProps.isGraph) DGraphElementClass = DVertex; else\r\n    if (!ownProps.isVertex && ownProps.isGraph) DGraphElementClass = DGraph;\r\n    else DGraphElementClass = DGraphElement; // DField;\r\n\r\n    if (DGraphElementClass === DVertex && ownProps.isVoid) DGraphElementClass = DVoidVertex;\r\n    const superret: StateProps = GraphElementComponent.mapStateToProps(state, ownProps, DGraphElementClass) as StateProps;\r\n    //superret.lastSelected = state._lastSelected?.modelElement;\r\n    superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\r\n\r\n    const selected = state.selected;\r\n    superret.selected = {};\r\n    for(let user of Object.keys(selected)) {\r\n        const pointer = selected[user];\r\n        if (pointer) superret.selected[user] = LModelElement.fromPointer(pointer);\r\n        else superret.selected[user] = null;\r\n    }\r\n\r\n\r\n    superret.isEdgePending = {\r\n        user: LPointerTargetable.from(state.isEdgePending.user),\r\n        source: LPointerTargetable.from(state.isEdgePending.source)\r\n    };\r\n    // superret.viewpoint = LViewPoint.fromPointer(state.viewpoint);\r\n    const ret: StateProps = new StateProps();\r\n    U.objectMergeInPlace(superret, ret);\r\n    U.removeEmptyObjectKeys(superret);\r\n    return superret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const superret: GraphElementDispatchProps = GraphElementComponent.mapDispatchToProps(dispatch);\r\n    const ret: GraphElementDispatchProps = new GraphElementDispatchProps();\r\n    U.objectMergeInPlace(superret, ret);\r\n    U.removeEmptyObjectKeys(superret);\r\n    return superret;\r\n}\r\n\r\n\r\nexport const VertexConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(VertexComponent as any);\r\n\r\nexport const Vertex = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <VertexConnected {...{...props, children}} isGraph={false} isVertex={true}/>;\r\n}\r\nexport const VoidVertex = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <VertexConnected {...{...props, children}} isGraph={false} isVertex={true} isVoid={true}/>;\r\n}\r\nexport const EdgePoint = function EdgePoint (props: OwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <VertexConnected {...{...props, children}} isGraph={false} isEdgePoint={true}/>;\r\n}\r\n// todo: name them all or verify the name is still usable.\r\n\r\nexport const Graph = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => { // doesn't work?\r\n    return <VertexConnected {...{...props, children}} isGraph={true} isVertex={false} />;\r\n}\r\n\r\nexport const GraphVertex = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <VertexConnected {...{...props, children}} isGraph={true} isVertex={true} />;\r\n}\r\n\r\nexport const Field = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <VertexConnected {...{...props, children}} isGraph={false} isVertex={false} />;\r\n}\r\n(window as any).componentdebug = {Graph, GraphVertex, Field, Vertex, VoidVertex, EdgePoint, VertexConnected, VertexComponent};\r\n/*\r\nlet windoww = window as any;\r\n\r\nwindoww.VoidVertex = VoidVertex;\r\nwindoww.Vertex = Vertex;\r\n// windoww.Graph = Graph;\r\nwindoww.GraphVertex = GraphVertex;\r\nwindoww.Field = Field;\r\n\r\nwindoww.VoidVertexComponent = VoidVertex;\r\nwindoww.VertexComponent = Vertex;\r\n// windoww.GraphComponent = Graph;\r\nwindoww.GraphVertexComponent = GraphVertex;\r\nwindoww.FieldComponent = Field;*/\r\n\r\n","import {\r\n    Action, bool,\r\n    Constructors, CoordinateMode,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModelElement,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DViewPoint,\r\n    EdgeBendingMode,\r\n    getWParams,\r\n    GObject, GraphPoint,\r\n    GraphSize,\r\n    Info,\r\n    LogicContext,\r\n    LPointerTargetable,\r\n    LViewPoint,\r\n    MyProxyHandler,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    ShortAttribETypes\r\n} from \"../../joiner\";\r\nimport { EdgeGapMode } from \"../../joiner/types\";\r\n\r\n@RuntimeAccessible\r\nexport class DViewElement extends DPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LViewElement;\r\n    // static logic: typeof LViewElement;\r\n    // static structure: typeof DViewElement;\r\n\r\n    // inherited redefine\r\n    // public __raw!: DViewElement;\r\n    id!: Pointer<DViewElement, 1, 1, LViewElement>;\r\n\r\n\r\n    // own properties\r\n    bindVertexSizeToView: boolean = true;\r\n    name!: string;\r\n    constants?: string; // evalutate 1 sola volta all'applicazione della vista o alla creazione dell'elemento.\r\n    preRenderFunc?: string; // evalutate tutte le volte che l'elemento viene aggiornato (il model o la view cambia)\r\n    jsxString!: string; // l'html template\r\n    usageDeclarations?: string;\r\n    forceNodeType?: DocString<'component name (Vertex, Field, GraphVertex, Graph)'>;\r\n    scalezoomx: boolean = false; // whether to resize the element normally using width-height or resize it using zoom-scale css\r\n    scalezoomy: boolean = false;\r\n    // not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\r\n    // facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\r\n    // __transient: DViewTransientProperties;\r\n    storeTemporaryPositions: boolean = false; // if true updates vertex position every X millisecond while dragging, if false updates it once when the vertex is released.\r\n    appliableToClasses!: string[]; // class names: DModel, DPackage, DAttribute...\r\n    subViews!: Pointer<DViewElement, 0, 'N', LViewElement>;\r\n    oclApplyCondition!: string; // ocl selector\r\n    explicitApplicationPriority!: number; // priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\r\n    defaultVSize!: GraphSize;\r\n    adaptHeight!: boolean;// | 'fit-content' | '-webkit-fill-available';\r\n    adaptWidth!: boolean;\r\n    width!: number;\r\n    height!: number;\r\n    draggable!: boolean;\r\n    resizable!: boolean;\r\n    query!: string;\r\n    viewpoint: Pointer<DViewPoint, 0, 1, LViewElement> = '';\r\n    display!: 'block'|'contents'|'flex'|string;\r\n    constraints!: GObject<\"todo, used in Vertex. they are triggered by events (view.onDragStart....) and can bound the size of the vertex\">[];\r\n    onDragStart: string = '';\r\n    onDragEnd: string = '';\r\n    onResizeStart: string = '';\r\n    onResizeEnd: string = '';\r\n    bendingMode!: EdgeBendingMode;\r\n    edgeGapMode!: EdgeGapMode;\r\n    //useSizeFrom!: EuseSizeFrom;\r\n    storeSize!: boolean;\r\n    size!: Dictionary<Pointer<DModelElement> | Pointer<DGraphElement>, GraphSize>;\r\n    lazySizeUpdate!: boolean;\r\n    edgeStartOffset!: GraphPoint;\r\n    edgeEndOffset!: GraphPoint;\r\n    edgeStartOffset_isPercentage!: boolean;\r\n    edgeEndOffset_isPercentage!: boolean;\r\n    edgeStartStopAtBoundaries!: boolean;\r\n    edgeEndStopAtBoundaries!: boolean;\r\n    edgePointCoordMode!: CoordinateMode;\r\n    edgeHeadSize!: GraphPoint;\r\n    edgeTailSize!: GraphPoint;\r\n\r\n    public static new(name: string, jsxString: string, defaultVSize?: GraphSize, usageDeclarations: string = '', constants: string = '',\r\n                      preRenderFunc: string = '', appliableToClasses: string[] = [], oclApplyCondition: string = '',\r\n                      priority: number = 1 , persist: boolean = false): DViewElement {\r\n        return new Constructors(new DViewElement('dwc'), undefined, persist, undefined).DPointerTargetable().DViewElement(name, jsxString, defaultVSize, usageDeclarations, constants,\r\n            preRenderFunc, appliableToClasses, oclApplyCondition, priority).end();\r\n    }\r\n    public static new2(name: string, jsxString: string, callback?: (d:DViewElement)=>void, persist: boolean = true): DViewElement {\r\n        return new Constructors(new DViewElement('dwc'), undefined, persist, undefined)\r\n            .DPointerTargetable().DViewElement(name, jsxString).end(callback);\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LViewElement<Context extends LogicContext<DViewElement, LViewElement> = any, D extends DViewElement = any>\r\n    extends LPointerTargetable { // MixOnlyFuncs(DViewElement, LPointerTargetable)\r\n\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LViewElement;\r\n    // static logic: typeof LViewElement;\r\n    // static structure: typeof DViewElement;\r\n\r\n    // inherited redefine\r\n    public __raw!: DViewElement;\r\n    id!: Pointer<DViewElement, 1, 1, LViewElement>;\r\n\r\n\r\n    // own properties\r\n    bindVertexSizeToView!: boolean;\r\n    name!: string;\r\n    constants?: string; // evalutate 1 sola volta all'applicazione della vista o alla creazione dell'elemento.\r\n    preRenderFunc?: string; // evalutate tutte le volte che l'elemento viene aggiornato (il model o la view cambia)\r\n\r\n    jsxString!: string; // l'html template\r\n    usageDeclarations?: string; // example: state\r\n    forceNodeType?: DocString<'component name'>;\r\n    scalezoomx!: boolean; // whether to resize the element normally using width-height or resize it using zoom-scale css\r\n    scalezoomy!: boolean;\r\n    // not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\r\n    // facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\r\n    // __transient: DViewTransientProperties;\r\n    storeTemporaryPositions!: boolean; // if true updates vertex position every X millisecond while dragging, if false updates it once when the vertex is released.\r\n    appliableToClasses!: string[]; // class names: DModel, DPackage, DAttribute...\r\n    subViews!: LViewElement[];\r\n    oclApplyCondition!: string; // ocl selector\r\n    explicitApplicationPriority!: number; // priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\r\n    defaultVSize!: GraphSize;\r\n    adaptWidth!: boolean;\r\n    adaptHeight!: boolean;\r\n    __info_of__adaptWidth = {type: \"boolean\", txt: \"Whether the element should expand his width to accomodate his own contents.\"};\r\n    __info_of__adaptHeight = {type: \"boolean\", txt: \"Whether the element should expand his height to accomodate his own contents.\"};\r\n    draggable!: boolean;\r\n    resizable!: boolean;\r\n    query!: string;\r\n    viewpoint!: LViewPoint | undefined;\r\n    display!: 'block'|'contents';\r\n    onDragStart!: string;\r\n    onDragEnd!: string;\r\n    onResizeStart!: string;\r\n    onResizeEnd!: string;\r\n    constraints!: GObject<\"todo, used in Vertex. they are triggered by events (view.onDragStart....) and can bound the size of the vertex\">[];\r\n    bendingMode!: EdgeBendingMode;\r\n    edgeGapMode!: EdgeGapMode;\r\n    __info_of__bendingMode: Info = {type: '\"L\" | \"Q\" | \"C\" | \"T\" | \"S\" | \"A\" | \"QT\" | \"CS\"', txt: <><div>How Svg path should use the EdgePoints <a href={\"https://css-tricks.com/svg-path-syntax-illustrated-guide/\"}>to bend his shape</a></div></>}\r\n    __info_of__edgeGapMode: Info = {type: '\"gap\" | \"average\" | \"autoFill\" | \"lineFill\" | \"arcFill\"', txt: <><div></div></>}\r\n\r\n    storeSize!: boolean;\r\n    // __info_of__storeSize: Info = {type: ShortAttribETypes.EBoolean, txt:<><div>Whether the node position should depend from the View or the Graph.</div><div>Enabled = share positions on different graphs but changes it if view is changed.</div></>}\r\n    __info_of__storeSize: Info = {type: ShortAttribETypes.EBoolean, txt: \"Active: the node position depends from the view currently displayed.\\nInactive: it depends from the graph.\"}\r\n    lazySizeUpdate!: boolean;\r\n    __info_of__lazySizeUpdate: Info = {type: ShortAttribETypes.EBoolean,txt: \"When activated, the layout position will only be updated once when the drag or resize operation is completed. (best performance)\"}\r\n\r\n    edgeStartOffset!: GraphPoint;\r\n    __info_of__edgeStartOffset: Info = {type:\"GraphPoint\", txt: \"location where outgoing edges should start their path, relative to top-upper corner of the element.\"}\r\n    edgeEndOffset!: GraphPoint;\r\n    edgeStartOffset_isPercentage!: boolean;\r\n    __info_of__edgeStartOffset_isPercentage: Info = {type:\"GraphPoint\", txt: \"Whether edgeStartOffset is an absolute value or a percentage (eg: 50% of top edge, vs 50 pixels on the right).\"}\r\n    edgeEndOffset_isPercentage!: boolean;\r\n    edgeStartStopAtBoundaries!: boolean;\r\n    __info_of__edgeStartStopAtBoundaries: Info = {type:\"GraphPoint\", txt: \"Whether outgoing edges should cross the node boundaries overlapping the node or stop at them (edge arrows might enter the node if this is on).\"}\r\n    edgeEndStopAtBoundaries!: boolean;\r\n    edgePointCoordMode!: CoordinateMode;\r\n    // edge\r\n    edgeHeadSize!: GraphPoint;\r\n    edgeTailSize!: GraphPoint;\r\n    edgeStrokeWidth!: number;\r\n    protected size!: Dictionary<Pointer<DModelElement> | Pointer<DGraphElement>, GraphSize>; // use getSize, updateSize;\r\n\r\n\r\n    public get_edgeHeadSize(c: Context): this[\"edgeHeadSize\"] { return new GraphPoint(c.data.edgeHeadSize.x, c.data.edgeHeadSize.y); }\r\n    public get_edgeTailSize(c: Context): this[\"edgeTailSize\"] { return new GraphPoint(c.data.edgeTailSize.x, c.data.edgeTailSize.y); }\r\n    public set_edgeHeadSize(v: Partial<this[\"edgeHeadSize\"]>, c: Context): boolean {\r\n        let s = c.data.edgeHeadSize || new GraphPoint(0, 0);\r\n        if (!(\"x\" in v)) v.x = s.x;\r\n        if (!(\"y\" in v)) v.y = s.y;\r\n        return SetFieldAction.new(c.data.id, \"edgeHeadSize\", v as GraphPoint, '', false); }\r\n    public set_edgeTailSize(v: Partial<this[\"edgeTailSize\"]>, c: Context): boolean {\r\n        let s = c.data.edgeTailSize || new GraphPoint(0, 0);\r\n        if (!(\"x\" in v)) v.x = s.x;\r\n        if (!(\"y\" in v)) v.y = s.y;\r\n        return SetFieldAction.new(c.data.id, \"edgeTailSize\", v as GraphPoint, '', false); }\r\n\r\n    public get_viewpoint(context: Context): this[\"viewpoint\"] {\r\n        return (context.data.viewpoint || undefined) && (LViewPoint.fromPointer(context.data.viewpoint as Pointer<DViewPoint>));\r\n    }\r\n\r\n\r\n    public get_subViews(context: Context, key: string): LViewElement[]{\r\n        let subViewsPointers = context.data.subViews;\r\n        let subViews: LViewElement[] = [];\r\n        for(let pointer of subViewsPointers){\r\n            let item: LViewElement = MyProxyHandler.wrap(pointer);\r\n            if(item !== undefined) subViews.push(item);\r\n        }\r\n        return subViews;\r\n    }\r\n    /*\r\n    get_useSizeFrom(context: Context): D[\"useSizeFrom\"] { return context.data.useSizeFrom; }\r\n    set_useSizeFrom(val: D[\"useSizeFrom\"], context: Context): boolean {\r\n        let r: boolean = true;\r\n        BEGIN()\r\n        if (val === EuseSizeFrom.view && !context.data.size) r = SetFieldAction.new(context.data.id, \"size\", {});\r\n        // NB: se setti val == \"both\", va letto da Graph[viewid][nodeid] e non da view.\r\n        r = r && SetFieldAction.new(context.data.id,  \"useSizeFrom\", val, undefined, false);\r\n        END()\r\n        return r; }*/\r\n\r\n    // protected get_size(context: Context): D[\"size\"] { return context.data.useSizeFrom === EuseSizeFrom.node ? undefined as any : context.data.size; }\r\n    /* protected set_size(val: D[\"size\"], context: Context): boolean {\r\n        return SetFieldAction.new(context.data.id,  \"size\", val); }*/\r\n\r\n    // returns the delta of change\r\n    public updateSize(id: Pointer<DModelElement> | Pointer<DGraphElement>, size: Partial<GraphSize>): boolean { return this.wrongAccessMessage(\"updateSize\"); }\r\n    public get_updateSize(context: Context): this[\"updateSize\"] {\r\n        return (id: Pointer<DModelElement> | Pointer<DGraphElement>, size: Partial<GraphSize>) => {\r\n            let vp = context.proxyObject.viewpoint;\r\n            if (!context.data.storeSize) {\r\n                if (vp?.storeSize) return vp.updateSize(id, size);\r\n                return false;\r\n            }\r\n            let vsize = context.data.size[id] || vp?.__raw.size[id] || context.data.defaultVSize || vp?.__raw.defaultVSize;\r\n            let newSize: GraphSize = new GraphSize();\r\n            newSize.x = size?.x !== undefined ? size.x : vsize.x;\r\n            newSize.y = size?.y !== undefined ? size.y : vsize.y;\r\n            newSize.w = size?.w !== undefined ? size.w : vsize.w;\r\n            newSize.h = size?.h !== undefined ? size.h : vsize.h;\r\n            if (!newSize.equals(vsize)) SetFieldAction.new(context.data.id, \"size.\" + id as any, newSize);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public get_defaultVSize(context: Context): this[\"defaultVSize\"]{ return context.data.defaultVSize; }\r\n    public getSize(id: Pointer<DModelElement> | Pointer<DGraphElement>): GraphSize | undefined{ return this.wrongAccessMessage(\"getSize\"); }\r\n    public get_getSize(context: Context): ((...a:Parameters<this[\"getSize\"]>)=>ReturnType<LViewElement[\"getSize\"]>) {\r\n        function impl_getSize(id: Pointer<DModelElement> | Pointer<DGraphElement>): ReturnType<LViewElement[\"getSize\"]> {\r\n            let view = context.data;\r\n            let ret: GraphSize;\r\n            if (view.storeSize){\r\n                ret = view.size[id];\r\n                if(ret) return ret; }\r\n            let vp = context.proxyObject.viewpoint;\r\n            if (vp && view.id !== vp.id && vp.storeSize){\r\n                ret = vp.size[id];\r\n                if(ret) return ret; }\r\n            return undefined;\r\n        }\r\n\r\n        return impl_getSize; }\r\n\r\n    set_generic_entry(context: Context, key: keyof DViewElement, val: any): boolean {\r\n        console.log('set_generic_entry', {context, key, val});\r\n        SetFieldAction.new(context.data, key, val);\r\n        return true;\r\n    }\r\n\r\n    get_children(context: Context): never[] { return []; }\r\n    get_bendingMode(context: Context): D[\"bendingMode\"] { return context.data.bendingMode; }\r\n    set_bendingMode(val: D[\"bendingMode\"], context: Context): boolean {\r\n        return this.set_generic_entry(context, 'bendingMode', val);\r\n    }\r\n\r\n    get_appliableToClasses(context: Context): this[\"appliableToClasses\"] { return context.data.appliableToClasses || []; }\r\n    set_appliableToClasses(val: this[\"appliableToClasses\"], context: Context): boolean {\r\n        if (!val) val = [];\r\n        else if (!Array.isArray(val)) val = [val];\r\n        return this.set_generic_entry(context, \"appliableToClasses\", val); }\r\n\r\n    set_defaultVSize(val: GraphSize, context: Context): boolean {\r\n        console.log('set_defaultVSize', {context, val});\r\n        return this.set_generic_entry(context, 'defaultVSize', val); }\r\n    /*\r\n        get___transient(context: LogicContext<this>): LViewTransientProperties {\r\n            return DPointerTargetable.wrap<DViewTransientProperties, LViewTransientProperties>(context.data.__transient, context.data,\r\n                // @ts-ignore for $ at end of getpath\r\n                'idlookup.' + context.data.id + '.' + (getPath as LViewElement).__transient.$); }*/\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DViewElement);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LViewElement);\r\nexport type WViewElement = getWParams<LViewElement, DPointerTargetable>;\r\n\r\n@RuntimeAccessible\r\nexport class DViewTransientProperties extends RuntimeAccessibleClass{\r\n    static logic: typeof LPointerTargetable;\r\n    _isDViewTransientProperties!: true;\r\n    // isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // private: DViewPrivateTransientProperties;\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, DViewTransientProperties);\r\n@RuntimeAccessible\r\nexport class LViewTransientProperties extends LPointerTargetable{\r\n    static structure: typeof DPointerTargetable;\r\n    static singleton: LViewTransientProperties;\r\n    _isLViewTransientProperties!: true;\r\n\r\n    // isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // private!: LViewPrivateTransientProperties;\r\n    /*\r\n        get_private(context: LogicContext<DViewTransientProperties>): LViewPrivateTransientProperties {\r\n            return LViewTransientProperties.wrap(context.data.private, context.proxy.baseObjInLookup, context.proxy.additionalPath + '.private'); }*/\r\n    /*\r\n        get_isSelected(logicContext: LogicContext<TargetableProxyHandler<DViewTransientProperties>, DViewTransientProperties>): Proxyfied<Dictionary> {\r\n            // @ts-ignore for $ at end of getpath\r\n            console.log('GET_ISSELECTED handler func');\r\n            return TargetableProxyHandler.getMap(logicContext.data.isSelected, logicContext, logicContext.proxy.additionalPath + '.' + (getPath as this).isSelected.$);\r\n        }*/\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DViewTransientProperties);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LViewTransientProperties);\r\nexport type WViewTransientProperties = getWParams<LViewTransientProperties, DViewTransientProperties>;\r\n\r\n/*\r\n\r\n@RuntimeAccessible\r\nexport class DViewPrivateTransientProperties extends DPointerTargetable{\r\n    static logic: typeof LViewPrivateTransientProperties;\r\n\r\n    public size: GraphSize\r\n    constructor(size?: GraphSize) {\r\n        super();\r\n        this.size = size || defaultVSize;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LViewPrivateTransientProperties extends DViewPrivateTransientProperties{\r\n    static structure: typeof DViewPrivateTransientProperties;\r\n    static singleton: LViewPrivateTransientProperties;\r\n\r\n}*/\r\n// shapeless component, receive jsx from redux\r\n// can access any of the redux state, but will usually access 1-2 var among many,\r\n// how can i dynamically mapStateToProps to map only the required ones?\r\n\r\n","import React, {CSSProperties, Dispatch, PureComponent, ReactElement, ReactNode, useRef,} from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport './graphElement.scss';\r\nimport type {VertexComponent, EdgeStateProps} from \"../../joiner\";\r\nimport {\r\n    CreateElementAction,\r\n    DGraph,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModelElement,\r\n    DocString,\r\n    DViewElement,\r\n    GObject,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    InOutParam,\r\n    DState,\r\n    JSXT,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Overlap,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    Selectors,\r\n    SetRootFieldAction,\r\n    U,\r\n    UX,\r\n    windoww,\r\n    DV,\r\n    GraphSize,\r\n    GraphPoint,\r\n    LVoidVertex,\r\n    DUser,\r\n    Size,\r\n    LClass,\r\n    SetFieldAction,\r\n    DGraphVertex,\r\n    DVoidVertex, DEdge,\r\n    LEdge, LUser, LViewPoint,\r\n    LGraphElement, RuntimeAccessibleClass,\r\n    DEdgePoint, DPointerTargetable,\r\n    BEGIN, END,\r\n} from \"../../joiner\";\r\n\r\n\r\nimport {end} from \"@popperjs/core\";\r\nimport { EdgeOwnProps } from \"./sharedTypes/sharedTypes\";\r\n\r\n\r\nexport function makeEvalContext(props: AllPropss, view: LViewElement): GObject {\r\n    let evalContext: GObject = view.constants ? eval('window.tmp = ' + view.constants) : {};\r\n    let component = GraphElementComponent.map[props.nodeid as Pointer<DGraphElement>];\r\n    let vcomponent = component as VertexComponent;\r\n    evalContext = {...windoww.defaultContext, ...evalContext, model: props.data, ...props,\r\n        edge: (RuntimeAccessibleClass.extends(props.node?.className, \"DVoidEdge\") ? props.node : undefined),\r\n        component, getSize:vcomponent?.getSize, setSize: vcomponent?.setSize};\r\n    // windoww.evalContext = evalContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    let allProps: AllPropss = {...ownProps, ...stateProps} as AllPropss;\r\n    (allProps as GObject).props = allProps;\r\n    const evalContext = makeEvalContext(allProps, view);\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n    //console.error({jsx:view.jsxString, view});\r\n\r\n    // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n    let jsxCodeString: DocString<ReactNode>;\r\n    let jsxparsedfunc: () => React.ReactNode;\r\n    try { jsxCodeString = JSXT.fromString(view.jsxString, {factory: 'React.createElement'}); }\r\n    catch (e: any) {\r\n        Log.eDevv();\r\n        stateProps.preRenderFunc = view.preRenderFunc;\r\n        stateProps.evalContext = evalContext;\r\n        stateProps.template = DV.errorView_string(e.message.split(\"\\n\")[0],\r\n            {msg: 'Syntax Error in custom user-defined template. try to remove typescript typings.', evalContext, e, view, jsx:view.jsxString});\r\n        return;\r\n    }/*\r\n    try {\r\n        jsxparsedfunc = U.evalInContextAndScope<() => ReactNode>('()=>{ return ' + jsxCodeString + '}', evalContext);\r\n        // U.evalInContext({...this, ...evalContext}, res); // todo: remove eval and add new Function() ?\r\n    }\r\n    catch (e: any) {\r\n        let errormsg = ''; // 'Syntax Error in custom user-defined template.\\n';\r\n        let otherargs: any = {e, jsxCodeString, evalContext, where:\"setTemplateString()\", view};\r\n        if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0)\r\n        { errormsg += 'Reminder: nullish operators \".?\" and \"??\" are not supported.\\n\\n' +e.toString() + '\\n\\n' + view.jsxString; }\r\n        else if (view.jsxString.indexOf('?.') >= 0) { errormsg += 'Reminder: ?. operator and empty tags <></> are not supported.\\n\\n' +e.toString() + '\\n\\n' + view.jsxString; }\r\n        jsxparsedfunc = ()=> DV.errorView(errormsg, otherargs);\r\n    }*/\r\n\r\n    stateProps.preRenderFunc = view.preRenderFunc;\r\n    stateProps.evalContext = evalContext;\r\n    stateProps.template = jsxCodeString;\r\n    // console.log('GE settemplatestring:', {stateProps});\r\n}\r\n\r\nlet debugcount = 0;\r\nlet debug = true;\r\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\r\n@RuntimeAccessible\r\nexport class GraphElementComponent<AllProps extends AllPropss = AllPropss, GraphElementState extends GraphElementStatee = GraphElementStatee>\r\n    extends PureComponent<AllProps, GraphElementState>{\r\n    static all: Dictionary<number, GraphElementComponent> = {};\r\n    public static map: Dictionary<Pointer<DGraphElement>, GraphElementComponent> = {};\r\n    static maxid: number = 0;\r\n    id: number;\r\n    public static refresh() {\r\n        for (let key in GraphElementComponent.all) {\r\n            GraphElementComponent.all[key].forceUpdate();\r\n        }\r\n        console.log(GraphElementComponent.all);\r\n    }\r\n\r\n    public static defaultShouldComponentUpdate<AllProps extends GObject, State extends GObject, Context extends any>\r\n    (instance: React.Component, nextProps: Readonly<AllProps>, nextState: Readonly<State>, nextContext: Context) {\r\n        return (\r\n            !U.shallowEqual(instance.props, nextProps) ||\r\n            !U.shallowEqual(instance.state, nextState)\r\n        );\r\n    }\r\n\r\n    static mapViewStuff(state: DState, ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        let dnode: DGraphElement | undefined = ownProps?.nodeid && state.idlookup[ownProps.nodeid] as any;\r\n        if (ownProps.view) {\r\n            ret.views = [];\r\n            ret.view = LPointerTargetable.wrap(ownProps.view) as LViewElement;\r\n        }\r\n        else {\r\n            const viewScores = Selectors.getAppliedViews(ret.data, dnode, ret.graph, ownProps.view || null, ownProps.parentViewId || null);\r\n            ret.views = viewScores.map(e => MyProxyHandler.wrap(e.element));\r\n            ret.view = ret.views[0];\r\n            (ret as any).viewScores = viewScores; // debug only\r\n        }\r\n\r\n        /*        if (ownProps.view) {\r\n                    ret.view = DPointerTargetable.wrap(state.idlookup[ownProps.view]);\r\n                } else {\r\n                    ret.view = ret.views[0];\r\n                }*/\r\n    }\r\n\r\n    static mapLModelStuff(state: DState, ownProps: GraphElementOwnProps, ret: GraphElementReduxStateProps): void {\r\n        const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n        ret.dataid = meid;\r\n        // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n        ret.data = MyProxyHandler.wrap(state.idlookup[meid as any]);\r\n        // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n\r\n    }\r\n\r\n    static mapLGraphElementStuff(state: DState,\r\n                                 ownProps: GraphElementOwnProps,\r\n                                 ret: GraphElementReduxStateProps,\r\n                                 dGraphElementDataClass: typeof DGraphElement = DGraphElement,\r\n                                 isDGraph?: DGraph): void {\r\n        const idlookup = state.idlookup;\r\n        let nodeid: string = ownProps.nodeid as string;\r\n        let graphid: string = isDGraph ? isDGraph.id : ownProps.graphid as string;\r\n        let parentnodeid: string = ownProps.parentnodeid as string;\r\n        let dataid: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\r\n        // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\r\n        /*if (!nodeid) {\r\n            nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.bindVertexSizeToView ? '^' + stateProps.view.id : '') + '^1';\r\n            stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !idlookup[id]);\r\n            todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n        }*/\r\n\r\n        ret.graph = idlookup[graphid] as DGraphElement as any; // se non c'è un grafo lo creo\r\n        if (!ret.graph) {\r\n            // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\r\n            if (dataid) CreateElementAction.new(DGraph.new(0, dataid, parentnodeid, graphid, graphid)); }\r\n        else {\r\n            ret.graph = MyProxyHandler.wrap(ret.graph);\r\n            Log.exDev(ret.graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n        }\r\n\r\n\r\n        let dnode: DGraphElement = idlookup[nodeid] as DGraphElement;\r\n\r\n\r\n        // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\r\n        if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {\r\n            console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n                pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});\r\n            // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\r\n            let dge;\r\n            /*\r\n            if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n                let initialSize = ownProps.initialSize;\r\n                dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            } else*/\r\n            if (dGraphElementDataClass === DEdge) {\r\n                // set start and end from ownprops;\r\n                let edgeProps: EdgeStateProps = ret as EdgeStateProps;\r\n                let edgeOwnProps: EdgeOwnProps = ownProps as EdgeOwnProps;\r\n                let start = edgeProps.start.id; //typeof edgeProps.start === \"string\" ? edgeProps.start : (edgeProps.start as any).id; // at runtime i found proxy wrapped instead of id, no idea why\r\n                let end = edgeProps.end.id; // typeof edgeProps.end === \"string\" ? edgeProps.end : (edgeProps.end as any).id;\r\n                let longestLabel = edgeOwnProps.label;\r\n                let labels = edgeOwnProps.labels || [];\r\n                dge = (DEdge as any).new(ownProps.htmlindex, dataid, parentnodeid, graphid, nodeid, start, end, longestLabel, labels);\r\n                ret.node = (ret as any).edge = MyProxyHandler.wrap(dge);\r\n            }\r\n            else {\r\n                let initialSize = ownProps.initialSize;\r\n                dge = dGraphElementDataClass.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            }\r\n            // let act = CreateElementAction.new(dge, false);\r\n            // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\r\n        }\r\n        else { ret.node = MyProxyHandler.wrap(dnode); }\r\n    }\r\n\r\n    ////// mapper func\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps, dGraphDataClass: (typeof DGraphElement | typeof DEdge) = DGraphElement, startingobj?: GObject): GraphElementReduxStateProps {\r\n        // console.log('dragx GE mapstate', {dGraphDataClass});\r\n        let ret: GraphElementReduxStateProps = (startingobj || {}) as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret);\r\n        // console.log(\"map ge\", {ownProps, ret, state});\r\n        GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n        // ret.view = LViewElement.wrap(state.idlookup[vid]);\r\n        // view non deve essere più injected ma calcolata, però devo fare inject della view dell'elemento parent. learn ocl to make view target\r\n        Log.exDev(!ret.view, 'failed to inject view:', {state, ownProps, reduxProps: ret});\r\n        // console.log(!ret.view, 'failed to inject view:', {state, ownProps, reduxProps: ret});\r\n        if (ret.view.usageDeclarations) U.objectMergeInPlace(ret, U.evalInContextAndScope(ret.view.usageDeclarations));\r\n        // console.log('GE mapstatetoprops:', {state, ownProps, reduxProps: ret});\r\n        // ret.model = state.models.length ? LModelElement.wrap(state.models[0]) as LModel : undefined;\r\n        setTemplateString(ret, ownProps); // todo: this is heavy, should be moved somewhere where it's executed once unless view changes (pre-render with if?)\r\n        // @ts-ignore\r\n        ret.forceupdate = state.forceupdate;\r\n        // @ts-ignore\r\n        ret.key = ret.key || ownProps.key;\r\n        return ret;\r\n    }\r\n\r\n    static mapDispatchToProps(dispatch: Dispatch<any>): GraphElementDispatchProps {\r\n        const ret: GraphElementDispatchProps = {} as any;\r\n        return ret;\r\n    }\r\n\r\n\r\n    _isMounted: boolean;\r\n    hasSetVertexProperties: boolean = false;\r\n    html: React.RefObject<HTMLElement | undefined>;\r\n    lastViewChanges: {t: number, vid: Pointer<DViewElement>, v: LViewElement, key?: string}[];\r\n    // todo: can be improved by import memoize from \"memoize-one\"; it is high-order function that memorize the result if params are the same without re-executing it (must not have side effects)\r\n    //  i could use memoization to parse the jsx and to execute the user-defined pre-render function\r\n\r\n    select(forUser:Pointer<DUser, 0, 1> = null) {\r\n        const id = this.props.data?.id;\r\n        if (!forUser) forUser = DUser.current;\r\n        // this.props.node.isSelected[forUser] = true;\r\n\r\n        BEGIN();\r\n        const selected = Selectors.getSelected();\r\n        if (id) {\r\n            selected[forUser] = id;\r\n            SetRootFieldAction.new('selected', selected);\r\n        }\r\n        SetRootFieldAction.new('_lastSelected', {\r\n            node: this.props.nodeid,\r\n            view: this.props.view.id,\r\n            modelElement: this.props.data?.id\r\n        });\r\n        END();\r\n    }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.lastViewChanges = [];\r\n        this._isMounted = false;\r\n        this.id = GraphElementComponent.maxid++;\r\n        GraphElementComponent.all[this.id] = this;\r\n        GraphElementComponent.map[props.nodeid as Pointer<DGraphElement>] = this;\r\n        this.html = React.createRef();\r\n        let functionsToBind = [this.onClick, this.onLeave, this.onContextMenu, this.onEnter, this.select];\r\n        for (let f of functionsToBind) (this as any)[f.name] = f.bind(this);\r\n        // @ts-ignore\r\n        this.state = {classes:[] as string[]};\r\n\r\n/*\r\n        console.log('GE constructor props:', this.props);\r\n        this.setTemplateString(this.props.view, true);\r\n        /*if (false) this.setTemplateString('{colors:[\"rEd\", \"gReen\", \"blye\"], key2:[0,2,5]}',\r\n            '() => { colors = colors.map(c=>c.toLowerCase())}',\r\n            '<div><b>GraphElement colors:</b>{colors.map( (c, i) => <li key={c} style={{color: c}}>{c}</li>)}</div>', true);*/\r\n        // this.onMountBindID();\r\n    }\r\n/*\r\n    onMountBindID() {\r\n        /*if (!this.props.view.bindVertexSizeToView) {\r\n            // get position from view itself\r\n            nodeid = 'nodeof_' + this.props.data.id;\r\n            if (!store.getState().idlookup[nodeid]){\r\n                new CreateElementAction(this.createDataNode(nodeid));\r\n            } // view-indipendent fallback, i do not add view.id to node.id\r\n        } else {* /\r\n        if (this.getId()) return;\r\n        let dnode: DGraphElement = this.createDataNode(this.generateId());\r\n        new CreateElementAction(dnode);\r\n        // let nodeid: Pointer<DGraphElement, 1, 1, LGraphElement> = dnode.id;\r\n        // this.setState({nodeid} );\r\n    }\r\n\r\n    getId(): string | undefined {\r\n        return this.props.nodeid;\r\n    }\r\n\r\n    generateId(): Pointer<DGraphElement, 1, 1, LGraphElement> {\r\n        // if (this.state.nodeid) return this.state.nodeid;\r\n        let ret: string = 'nodeof_' + this.props.data.id + (this.props.view.bindVertexSizeToView ? '^' + this.props.view.id : '') + '^1';\r\n        const idlookup = store.getState().idlookup;\r\n        ret = U.increaseEndingNumber(ret, false, false, id => !idlookup[id]);\r\n        return ret;\r\n    }\r\n\r\n    // to override\r\n\r\n    createDataNode(id?: string): DGraphElement {\r\n        return new DGraphElement(id || this.generateId(), this);\r\n    }\r\n */\r\n\r\n    // constants: evalutate solo durante il primo render, può essere una funzione con effetti collaterali sul componente,\r\n    // in tal caso la si esegue e si prende il valore di ritorno.\r\n    // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\r\n    // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\r\n\r\n\r\n\r\n    componentDidMount(): void {\r\n        // after first render\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista più.\r\n        //  e non venga cancellato se il componente viene smontato perchè ho solo cambiato vista\r\n        //  LOW PRIORITY perchè funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\r\n        // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\r\n    }\r\n    /*\r\n        componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n            const newProps = this.props\r\n            if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n    }*/\r\n\r\n    private getTemplate(): ReactNode {\r\n        /*if (!this.state.template) {\r\n            this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n        }*/\r\n        // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n\r\n        // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n        let context: GObject = {component:this, __proto__:this.props.evalContext};\r\n        context._context = context;\r\n\r\n        let displayError = (e: Error, where: string) => {\r\n            const view: LViewElement = this.props.view; //data._transient.currentView;\r\n            let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") +(e.message||\"\\n\").split(\"\\n\")[0];\r\n            if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\r\n                errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.'; }\r\n            else if (view.jsxString.indexOf('?.') >= 0) { errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.'; }\r\n            else if (e.message.indexOf(\"Unexpected token '<'\")) { errormsg += '\\n\\nDid you forgot to close a html </tag>?'; }\r\n            try {\r\n                let ee = e.stack || \"\";\r\n                let stackerrorlast = ee.split(\"\\n\")[1];\r\n\r\n                let icol = stackerrorlast.lastIndexOf(\":\");\r\n                let jsxString = view.jsxString;\r\n                // let col = stackerrorlast.substring(icol+1);\r\n                let irow = stackerrorlast.lastIndexOf(\":\", icol-1);\r\n                let stackerrorlinenum: GObject = {\r\n                    row: Number.parseInt(stackerrorlast.substring(irow+1, icol)),\r\n                    col: Number.parseInt(stackerrorlast.substring(icol+1)) };\r\n                let linesPre = 1;\r\n                let linesPost = 1;\r\n                let jsxlines = jsxString.split(\"\\n\");\r\n                let culpritlinesPre: string[] = jsxlines.slice(stackerrorlinenum.row-linesPre-1, stackerrorlinenum.row - 1);\r\n                let culpritline: string = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\r\n                let culpritlinesPost: string[] = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\r\n                console.error(\"errr\", {jsxlines, culpritlinesPre, culpritline, culpritlinesPost, stackerrorlinenum, icol, irow, stackerrorlast});\r\n\r\n                let rowPre = culpritline.substring(0, stackerrorlinenum.col)\r\n                let rowPost = culpritline.substring(stackerrorlinenum.col);\r\n                let caretCursor = \"▓\" // ⵊ ꕯ 𝙸 Ꮖ\r\n                if (stackerrorlinenum.col < culpritline.length && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\r\n                    let jsxcode =\r\n                        <div style={{fontFamily: \"monospaced sans-serif\", color:\"#444\"}}>\r\n                            { culpritlinesPre.map(l => <div>{l}</div>) }\r\n                            <div>{rowPre} <b style={{color:\"red\"}}> {caretCursor} </b> {rowPost}</div>\r\n                            { culpritlinesPost.map(l => <div>{l}</div>) }\r\n                        </div>;\r\n                    console.error(\"errr\", {e, ee, jsxlines, jsxcode, rowPre, rowPost, culpritlinesPre, culpritline, culpritlinesPost, stackerrorlinenum, icol, irow, stackerrorlast});\r\n                    errormsg += \" @line \" + stackerrorlinenum.row + \":\" + stackerrorlinenum.col;\r\n                    return DV.errorView(<div>{errormsg}{jsxcode}</div>, {where:\"in \"+where+\"()\", e, template: this.props.template, view: this.props.view});\r\n                } else {\r\n                    // it means it is likely accessing a minified.js src code, sending generic error without source mapping\r\n                }\r\n            } catch(e2) {\r\n                Log.eDevv(\"internal error in error view\", {e, e2, where} );\r\n            }\r\n            return DV.errorView(<div>{errormsg}</div>, {where:\"in \"+where+\"()\", e, template: this.props.template, view: this.props.view});\r\n        }\r\n\r\n        try {\r\n            console.log(\"prerenderfunc pre execution\", \"(\"+this.props.preRenderFunc+\")()\", context);\r\n            if (this.props.preRenderFunc) {\r\n                let obj = U.evalInContextAndScope<GObject>(\"(\"+this.props.preRenderFunc+\")()\", [], context);\r\n                console.log(\"prerenderfunc executed\", obj);\r\n                for (let key in obj) { context[key] = obj[key]; }\r\n            }\r\n        }\r\n        catch(e: any) { return displayError(e, \"preRenderFunc\");  }\r\n        let ret;\r\n        try {\r\n            ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + this.props.template + '})()', context);\r\n            // ret = this.props.template();\r\n            // ret = U.execInContextAndScope<() => ReactNode>(this.props.template, [], {});\r\n        }\r\n        catch(e: any) { return displayError(e, \"getTemplate\"); }\r\n        return ret;\r\n    }\r\n\r\n    onContextMenu(e: React.MouseEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const selected = Selectors.getSelected();\r\n        const id = this.props.dataid;\r\n        const alreadySelected = Object.keys(selected).filter(function(key) {\r\n            return selected[key] === id;\r\n        });\r\n        if(alreadySelected.length > 0) return;\r\n        this.select();\r\n        SetRootFieldAction.new(\"contextMenu\", {\r\n            display: true,\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        });\r\n    }\r\n\r\n    onEnter(e: React.MouseEvent<HTMLDivElement>) { // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\r\n        const isEdgePending = this.props.isEdgePending?.source;\r\n        if (!isEdgePending || this.props.data?.className !== \"DClass\") return;\r\n        const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n        const canBeExtend = isEdgePending.canExtend(this.props.data as any as LClass, extendError);\r\n\r\n        if (canBeExtend) this.setState({classes:[...this.state.classes, \"class-can-be-extended\"]});\r\n        else this.setState({classes:[...this.state.classes, \"class-cannot-be-extended\"]});\r\n    }\r\n    onLeave(e: React.MouseEvent<HTMLDivElement>) {\r\n        if (this.props.data?.className !== \"DClass\") return;\r\n        this.setState({classes: this.state.classes.filter((classname) => {\r\n            return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\"\r\n        })});\r\n    }\r\n    onClick(e: React.MouseEvent): void {\r\n        e.stopPropagation();\r\n        const selected = Selectors.getSelected();\r\n        const id = this.props.dataid;\r\n        const alreadySelected = Object.keys(selected).filter(function(key) {\r\n            return selected[key] === id;\r\n        });\r\n        if(alreadySelected.length > 0) return;\r\n\r\n        SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0});\r\n        const isEdgePending = (this.props.isEdgePending?.source);\r\n        if (!isEdgePending) { this.select(); e.stopPropagation(); return; }\r\n        if (!this.props.data) return;\r\n        if (this.props.data.className !== \"DClass\") return;\r\n        SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0});\r\n        e.stopPropagation();\r\n        // const user = this.props.isEdgePending.user;\r\n        const source = isEdgePending;\r\n        const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n        const canBeExtend = this.props.data && isEdgePending.canExtend(this.props.data as LClass, extendError);\r\n        if (canBeExtend && this.props.data) {\r\n            const lClass: LClass = LPointerTargetable.from(this.props.data.id);\r\n            // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\r\n            // todo: use source.addExtends(lClass); or something (source is LClass)\r\n            SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"+=\", true);\r\n            SetFieldAction.new(source.id, \"extends\", lClass.id, \"+=\", true);\r\n        }\r\n        SetRootFieldAction.new('isEdgePending', { user: '',  source: '' });\r\n\r\n    }\r\n\r\n    public render(nodeType?:string, styleoverride:React.CSSProperties={}, classes: string[]=[]): ReactNode {\r\n        if (!this.props.node) return \"loading\";\r\n        if (this.props.node.__raw.view !== this.props.view.id) {\r\n\r\n            let thischange = {t: Date.now(), vid: this.props.node.__raw.view, newvid:this.props.view.id, v: this.props.node.view, newv: this.props.view, key:this.props.key};\r\n            this.lastViewChanges.push(thischange);\r\n            // nan -> false <200 = true\r\n            if (this.lastViewChanges[this.lastViewChanges.length-20]?.t - thischange.t < 200) { // important! NaN<1  and NaN>1 are both false\r\n                // if 3 views changed in <= 0.2 sec\r\n                Log.exDevv(\"loop in updating View assigned to node. The cause might be missing or invalid keys on GraphElement JSX nodes.\", {change_log:this.lastViewChanges, component: this});\r\n            }\r\n\r\n            /*console.log(\"UPDATEVIEW \", {lnode:this.props.node, dnode:this.props.node.__raw, dstore: windoww.s().idlookup[this.props.node.__raw.id], view:this.props.view,\r\n                 data:this.props.data, vid:this.props.view.id, nview:this.props.node.__raw.view});*/\r\n            this.props.node.view = this.props.view;\r\n            return \"Updating view...\";\r\n        }\r\n\r\n        /// set classes\r\n        classes.push(this.props.data?.className || 'DVoid');\r\n        U.arrayMergeInPlace(classes, this.state.classes);\r\n        if (Array.isArray(this.props.className)) { U.arrayMergeInPlace(classes, this.props.className); }\r\n        else if (this.props.className) { classes.push(this.props.className); }\r\n        if (Array.isArray(this.props.class)) { U.arrayMergeInPlace(classes, this.props.class); }\r\n        else if (this.props.class) { classes.push(this.props.class); }\r\n        /// end set classes\r\n\r\n        const rnode: ReactNode = this.getTemplate();\r\n        console.log(\"get template \" + this.props.node?.className , {t: this.props.template, rnode});\r\n        let rawRElement: ReactElement | null = UX.ReactNodeAsElement(rnode);\r\n        const me: LModelElement | undefined = this.props.data; // this.props.model;\r\n\r\n        // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\r\n\r\n        const addprops: boolean = true;\r\n        let fiximport = !!this.props.node;\r\n        if (addprops && rawRElement && fiximport) {\r\n            if (windoww.debugcount && debugcount++>windoww.debugcount) throw new Error(\"debug triggered stop\");\r\n            // console.log(\"pre-injecting\", {thiss:this, data:this.props.data, props:this.props});\r\n            let fixdoubleroot = true;\r\n            const onDragTestInject = () => {}; // might inject event handlers like this with cloneelement\r\n            // add view props to GraphElement children (any level down)\r\n            const subElements: Dictionary<DocString<'nodeid'>, boolean> = {}; // this.props.getGVidMap();\r\n            try {\r\n                let viewStyle: GObject = {};\r\n                /*\r\n                    if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n                    else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n                    if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n                    else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n                    viewStyle = {};\r\n                */\r\n                // viewStyle.pointerEvents = \"all\";\r\n                viewStyle.order = viewStyle.zIndex = this.props.node?.zIndex;\r\n                viewStyle.display = this.props.view?.display;\r\n                rawRElement = React.cloneElement(rawRElement, // i'm cloning a raw html (like div) being root of the rendered view\r\n                    {\r\n                        key: this.props.key, // this key is not safe. because the component has already been made,\r\n                        // this would be the key of the first sub-component, which is always 1 so doesn't need a key (and is not even a component but a html node in 99% of cases)\r\n                        // could remove it safely but i'm keeping it for debug so i can read keys as html attributes.\r\n                        ref: this.html,\r\n                        // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (è perchè iniziano con <Select/> as root?)\r\n                        id: this.props.nodeid,\r\n                        \"data-nodeid\": this.props.nodeid,\r\n                        \"data-dataid\": me?.id,\r\n                        \"data-viewid\": this.props.view.id,\r\n                        \"data-modelname\": me?.className || \"model-less\",\r\n                        \"data-userselecting\": JSON.stringify(this.props.node?.__raw.isSelected || {}),\r\n                        \"data-nodetype\": nodeType,\r\n                        // \"data-order\": this.props.node?.zIndex,\r\n                        style: {...viewStyle, order:this.props.node.z, ...styleoverride},\r\n                        className: classes.join(' '),\r\n                        onClick: this.onClick,\r\n                        onContextMenu:this.onContextMenu,\r\n                        onMouseEnter:this.onEnter,\r\n                        onMouseLeave:this.onLeave,\r\n                        children: UX.recursiveMap(rawRElement/*.props.children*/,\r\n                            (rn: ReactNode, index: number, depthIndexes: number[]) => UX.injectProp(this, rn, subElements, this.props.parentnodeid as string, index, depthIndexes))});\r\n                fixdoubleroot = false; // need to set the props to new root in that case.\r\n                if (fixdoubleroot) rawRElement = rawRElement.props.children;\r\n                // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\r\n            } catch (e) {\r\n\r\n                rawRElement = U.evalInContextAndScope<ReactElement>('()=>{ return ' +\r\n                    DV.errorView(\"error while injecting props to subnodes\",\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n                    {});\r\n\r\n                // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\r\n            }\r\n            /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n            let isEqual = true;\r\n            try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n            if (isEqual) {\r\n                this.props.node.subElements = Object.keys(subElements);\r\n            }*/\r\n        }\r\n        // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n        // rnode = React.cloneElement(rnode as ReactElement, injectprops);\r\n\r\n        // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\r\n        if (false && (this.props.node?.__raw as DGraphElement).father) {\r\n            let $containedIn = $('#' + this.props.node.father);\r\n            let $containerDropArea = $containedIn.find(\".VertexContainer\");\r\n            const droparea = $containerDropArea[0] || $containedIn[0];\r\n            Log.exDev(!droparea, 'invalid vertex container target', {$containedIn, $containerDropArea});\r\n            if (droparea) return createPortal(\r\n                rawRElement || rnode,\r\n                droparea\r\n            );\r\n        }\r\n        return rawRElement || rnode;\r\n    }\r\n\r\n}\r\n\r\n// private\r\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\r\ntype AllPropss = Overlap<Overlap<GraphElementOwnProps, GraphElementDispatchProps>, GraphElementReduxStateProps>;\r\n\r\nconst GraphElementConnected = connect<GraphElementReduxStateProps, GraphElementDispatchProps, GraphElementOwnProps, DState>(\r\n    GraphElementComponent.mapStateToProps,\r\n    GraphElementComponent.mapDispatchToProps\r\n)(GraphElementComponent as any);\r\n\r\nexport const GraphElement = (props: GraphElementOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphElementConnected {...{...props, children}} />; }\r\nconsole.info('graphElement loaded');\r\n"],"sourceRoot":""}